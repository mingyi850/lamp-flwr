Mon Dec 18 00:18:00 2023       
+---------------------------------------------------------------------------------------+
| NVIDIA-SMI 535.54.03              Driver Version: 535.54.03    CUDA Version: 12.2     |
|-----------------------------------------+----------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |         Memory-Usage | GPU-Util  Compute M. |
|                                         |                      |               MIG M. |
|=========================================+======================+======================|
|   0  Quadro RTX 8000                On  | 00000000:D8:00.0 Off |                    0 |
| N/A   27C    P8              24W / 250W |      0MiB / 46080MiB |      0%      Default |
|                                         |                      |                  N/A |
+-----------------------------------------+----------------------+----------------------+
                                                                                         
+---------------------------------------------------------------------------------------+
| Processes:                                                                            |
|  GPU   GI   CI        PID   Type   Process name                            GPU Memory |
|        ID   ID                                                             Usage      |
|=======================================================================================|
|  No running processes found                                                           |
+---------------------------------------------------------------------------------------+



Command: attack.py --dataset cola --split test --loss cos --n_inputs 50 -b 1 --coeff_perplexity 0.2 --coeff_reg 1 --lr 0.01 --lr_decay 0.89 --bert_path huawei-noah/TinyBERT_General_6L_768D --n_steps 500 



Reusing dataset glue (/scratch/ml9027/.cache/glue/cola/1.0.0/dacbe3125aa31d7f70367a07a8a9e72a5a0bfeb5fc42e75c9db75b96da6053ad)
Running on device cuda
Running on device from args cuda
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 53.58it/s]
Some weights of the model checkpoint at huawei-noah/TinyBERT_General_6L_768D were not used when initializing BertForSequenceClassification: ['fit_denses.1.bias', 'cls.predictions.decoder.weight', 'cls.seq_relationship.weight', 'fit_denses.5.weight', 'cls.predictions.transform.dense.weight', 'fit_denses.0.weight', 'fit_denses.5.bias', 'fit_denses.3.bias', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.bias', 'fit_denses.3.weight', 'cls.seq_relationship.bias', 'fit_denses.2.bias', 'fit_denses.6.weight', 'fit_denses.4.bias', 'fit_denses.4.weight', 'fit_denses.6.bias', 'fit_denses.1.weight', 'cls.predictions.transform.LayerNorm.bias', 'fit_denses.0.bias', 'fit_denses.2.weight']
- This IS expected if you are initializing BertForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of BertForSequenceClassification were not initialized from the model checkpoint at huawei-noah/TinyBERT_General_6L_768D and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.


Attacking..

Running input #0 of 50.
reference: 
========================
Harriet alternated folk songs and pop songs together.
========================
Debug: ids_shape = 12, pads = [12]
Debug: input ids = tensor([[  101, 14207,  6585,  2094,  5154,  2774,  1998,  3769,  2774,  2362,
          1012,   102]], device='cuda:0')
Debug: ref = ['[CLS] harriet alternated folk songs and pop songs together. [SEP]']
[Init] best rec loss: 0.6529671549797058 for ['[CLS] sava ordealldawearware europeelsbnturn story [SEP]']
[Init] best rec loss: 0.6328422427177429 for ['[CLS] lear meteorological filters martial wesley subsidiary chances excused hit assisted [SEP]']
[Init] best rec loss: 0.6240140795707703 for ['[CLS]manship rankin newly futile partly ur semitic promoting eaeme [SEP]']
[Init] best rec loss: 0.6116580963134766 for ["[CLS] eine macdonald'renegade catering loan barclay arrowsevereate [SEP]"]
[Init] best rec loss: 0.5956591367721558 for ['[CLS] feelings nikeories polarlateral cholera licensecy seller knox [SEP]']
[Init] best rec loss: 0.5906069874763489 for ['[CLS] wildlife super division melee odin gagₖ mere weakened otis [SEP]']
[Init] best rec loss: 0.5887396335601807 for ['[CLS] 209 whenever andhra phoenix metaphysicalphysics professorship eels lightning catch [SEP]']
[Init] best rec loss: 0.5876789689064026 for ['[CLS] selangor farther permitting tome fetalrayahill name grin medalist [SEP]']
[Init] best rec loss: 0.585464596748352 for ['[CLS] hezbollah 方uche sal weir crore crisp overlaperman faint [SEP]']
[Init] best rec loss: 0.5831608772277832 for ['[CLS]ante untover pedersen confirms wanderpartisan rbtsa reset [SEP]']
[Init] best perm rec loss: 0.5758360028266907 for ['[CLS]tsaante confirmsver reset wander unto pedersenpartisan rb [SEP]']
[Init] best perm rec loss: 0.5751184225082397 for ['[CLS]ante wander reset pedersenpartisan rbver confirmstsa unto [SEP]']
[Init] best perm rec loss: 0.5748913884162903 for ['[CLS] wanderante confirms unto rb resettsaverpartisan pedersen [SEP]']
[Init] best perm rec loss: 0.5729087591171265 for ['[CLS] unto confirmspartisantsa pedersen wanderantever reset rb [SEP]']
[Init] best perm rec loss: 0.5717219114303589 for ['[CLS] pedersentsa rb reset confirms wander untopartisanantever [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.897 (perp=8.858, rec=0.125), tot_loss_proj:2.112 [t=0.13s]
prediction: ['[CLS]gren alternate alternate folk songs and chartpartisan songs album [SEP]']
Attempt swap
Swapped tokens
[ 100/ 500] tot_loss=1.965 (perp=9.288, rec=0.107), tot_loss_proj:2.099 [t=0.12s]
prediction: ['[CLS] harriet songsd folk songs and alternatepartisan songs together [SEP]']
[ 150/ 500] tot_loss=1.944 (perp=9.288, rec=0.087), tot_loss_proj:2.093 [t=0.12s]
prediction: ['[CLS] harriet songsd folk songs and alternatepartisan songs together [SEP]']
Attempt swap
Moved token
[ 200/ 500] tot_loss=1.702 (perp=8.087, rec=0.084), tot_loss_proj:1.811 [t=0.13s]
prediction: ['[CLS] harriet songs alternated folk songs andpartisan songs together [SEP]']
Attempt swap
Moved sequence
[ 250/ 500] tot_loss=1.441 (perp=6.808, rec=0.079), tot_loss_proj:1.603 [t=0.12s]
prediction: ['[CLS] harriet revolutionary and alternated folk songs and songs together [SEP]']
[ 300/ 500] tot_loss=1.593 (perp=7.569, rec=0.079), tot_loss_proj:1.703 [t=0.12s]
prediction: ['[CLS] harriet pop and alternated folk songs and songs together [SEP]']
Attempt swap
Moved sequence
[ 350/ 500] tot_loss=1.585 (perp=7.480, rec=0.089), tot_loss_proj:1.679 [t=0.11s]
prediction: ['[CLS] harriet pop alternated folk songs and pop songs together [SEP]']
Attempt swap
Moved token
[ 400/ 500] tot_loss=1.371 (perp=6.441, rec=0.083), tot_loss_proj:1.456 [t=0.12s]
prediction: ['[CLS] pop harriet alternated folk songs and pop songs together [SEP]']
[ 450/ 500] tot_loss=1.365 (perp=6.441, rec=0.077), tot_loss_proj:1.459 [t=0.11s]
prediction: ['[CLS] pop harriet alternated folk songs and pop songs together [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.368 (perp=6.441, rec=0.079), tot_loss_proj:1.463 [t=0.12s]
prediction: ['[CLS] pop harriet alternated folk songs and pop songs together [SEP]']
Done with input #0 of 50.
reference: 
========================
[CLS] harriet alternated folk songs and pop songs together. [SEP]
========================
predicted: 
========================
[CLS] pop harriet alternated folk songs and pop songs together [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 95.238 | p: 90.909 | r: 100.000
rouge2     | fm: 84.211 | p: 80.000 | r: 88.889
rougeL     | fm: 95.238 | p: 90.909 | r: 100.000
rougeLsum  | fm: 95.238 | p: 90.909 | r: 100.000
r1fm+r2fm = 179.449

[Aggregate metrics]:
rouge1     | fm: 95.238 | p: 90.909 | r: 100.000
rouge2     | fm: 84.211 | p: 80.000 | r: 88.889
rougeL     | fm: 95.238 | p: 90.909 | r: 100.000
rougeLsum  | fm: 95.238 | p: 90.909 | r: 100.000
r1fm+r2fm = 179.449

input #0 time: 0:01:33 | total time: 0:01:33


Running input #1 of 50.
reference: 
========================
Who do you think that will question Seamus first?
========================
Debug: ids_shape = 12, pads = [12]
Debug: input ids = tensor([[  101,  2040,  2079,  2017,  2228,  2008,  2097,  3160, 24993,  2034,
          1029,   102]], device='cuda:0')
Debug: ref = ['[CLS] who do you think that will question seamus first? [SEP]']
[Init] best rec loss: 0.593163013458252 for ['[CLS] mum itunes swallow happier fundamentally maddenta singled dynastyhaven [SEP]']
[Init] best rec loss: 0.5905183553695679 for ['[CLS] personality trend resolution exclusively kiel barred factionviessilybari [SEP]']
[Init] best rec loss: 0.582699716091156 for ['[CLS] dame stuck sasণᄋbil mortimer tribe partneredisman [SEP]']
[Init] best rec loss: 0.5750522017478943 for ['[CLS] jiangquet probability seminar archeological pair warningshema disdaincape [SEP]']
[Init] best rec loss: 0.5732988119125366 for ['[CLS]rix stacy stains sexuality sonata dowager results ハ eh citizen [SEP]']
[Init] best rec loss: 0.5705705881118774 for ['[CLS] recalledares electoral demolition commodities statistics byrd guard moviescca [SEP]']
[Init] best rec loss: 0.5689179301261902 for ['[CLS] shatter snatch dublin nightingaleine compiler 1864ledvon wired [SEP]']
[Init] best perm rec loss: 0.5676074028015137 for ['[CLS] 1864 shatter compiler snatch wired dublin nightingalevonineled [SEP]']
[Init] best perm rec loss: 0.5663217902183533 for ['[CLS] dublin wiredled 1864 snatchvon shatter nightingaleine compiler [SEP]']
[Init] best perm rec loss: 0.5630480647087097 for ['[CLS] shatter snatchvon dublin 1864 compilerled wired nightingaleine [SEP]']
[Init] best perm rec loss: 0.5618786215782166 for ['[CLS] snatch nightingaleled compiler 1864von wiredine shatter dublin [SEP]']
[Init] best perm rec loss: 0.560599148273468 for ['[CLS]led dublin compiler wired nightingale snatchine shatter 1864von [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.907 (perp=9.016, rec=0.104), tot_loss_proj:2.037 [t=0.12s]
prediction: ['[CLS] who that your you question question question seamus first? [SEP]']
Attempt swap
Swapped tokens
[ 100/ 500] tot_loss=1.656 (perp=7.922, rec=0.071), tot_loss_proj:1.835 [t=0.12s]
prediction: ['[CLS] who that you that first question question seamus think? [SEP]']
[ 150/ 500] tot_loss=1.911 (perp=9.197, rec=0.072), tot_loss_proj:2.023 [t=0.13s]
prediction: ['[CLS] who that do will first question question seamus think? [SEP]']
Attempt swap
Swapped tokens
[ 200/ 500] tot_loss=1.547 (perp=7.404, rec=0.066), tot_loss_proj:1.665 [t=0.13s]
prediction: ['[CLS] who will do that first question question seamus think? [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.424 (perp=6.769, rec=0.070), tot_loss_proj:1.533 [t=0.11s]
prediction: ['[CLS] think who will do that first question question seamus? [SEP]']
[ 300/ 500] tot_loss=1.617 (perp=7.727, rec=0.072), tot_loss_proj:1.735 [t=0.11s]
prediction: ['[CLS] think who will you that first question question seamus? [SEP]']
Attempt swap
Moved sequence
[ 350/ 500] tot_loss=1.470 (perp=7.030, rec=0.064), tot_loss_proj:1.585 [t=0.12s]
prediction: ['[CLS] who will do think that first question question seamus? [SEP]']
Attempt swap
Moved sequence
[ 400/ 500] tot_loss=1.463 (perp=6.993, rec=0.064), tot_loss_proj:1.585 [t=0.12s]
prediction: ['[CLS] who will do think that question first question seamus? [SEP]']
[ 450/ 500] tot_loss=1.461 (perp=6.993, rec=0.062), tot_loss_proj:1.574 [t=0.12s]
prediction: ['[CLS] who will do think that question first question seamus? [SEP]']
Attempt swap
Moved sequence
[ 500/ 500] tot_loss=1.397 (perp=6.660, rec=0.065), tot_loss_proj:1.510 [t=0.13s]
prediction: ['[CLS] who do think that question will first question seamus? [SEP]']
Done with input #1 of 50.
reference: 
========================
[CLS] who do you think that will question seamus first? [SEP]
========================
predicted: 
========================
[CLS] who will do think that question first question seamus? [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 90.909 | p: 90.909 | r: 90.909
rouge2     | fm: 30.000 | p: 30.000 | r: 30.000
rougeL     | fm: 72.727 | p: 72.727 | r: 72.727
rougeLsum  | fm: 72.727 | p: 72.727 | r: 72.727
r1fm+r2fm = 120.909

[Aggregate metrics]:
rouge1     | fm: 93.074 | p: 90.909 | r: 95.455
rouge2     | fm: 57.105 | p: 55.000 | r: 59.444
rougeL     | fm: 83.983 | p: 81.818 | r: 86.364
rougeLsum  | fm: 83.983 | p: 81.818 | r: 86.364
r1fm+r2fm = 150.179

input #1 time: 0:01:33 | total time: 0:03:07


Running input #2 of 50.
reference: 
========================
The boy ran.
========================
Debug: ids_shape = 6, pads = [6]
Debug: input ids = tensor([[ 101, 1996, 2879, 2743, 1012,  102]], device='cuda:0')
Debug: ref = ['[CLS] the boy ran. [SEP]']
[Init] best rec loss: 0.6147545576095581 for ['[CLS] napoleonic deepestsbury angered [SEP]']
[Init] best rec loss: 0.6021614074707031 for ['[CLS]nob scramblingheeoue [SEP]']
[Init] best rec loss: 0.597437858581543 for ['[CLS] bengaligenic simpsons on [SEP]']
[Init] best rec loss: 0.5931838154792786 for ['[CLS] animation 33rd freelyю [SEP]']
[Init] best rec loss: 0.5819405913352966 for ['[CLS]vina jeanne ok recipes [SEP]']
[Init] best perm rec loss: 0.581127941608429 for ['[CLS] ok recipes jeannevina [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.778 (perp=8.281, rec=0.122), tot_loss_proj:1.933 [t=0.12s]
prediction: ['[CLS] ran [CLS] ran ran [SEP]']
Attempt swap
Moved token
[ 100/ 500] tot_loss=2.000 (perp=9.566, rec=0.086), tot_loss_proj:2.268 [t=0.11s]
prediction: ['[CLS] boy boy. ran [SEP]']
[ 150/ 500] tot_loss=1.449 (perp=6.905, rec=0.068), tot_loss_proj:1.641 [t=0.12s]
prediction: ['[CLS] the boy. ran [SEP]']
Attempt swap
Swapped tokens
[ 200/ 500] tot_loss=1.278 (perp=6.128, rec=0.053), tot_loss_proj:1.408 [t=0.12s]
prediction: ['[CLS] the boy ran. [SEP]']
Attempt swap
[ 250/ 500] tot_loss=1.291 (perp=6.128, rec=0.065), tot_loss_proj:1.403 [t=0.12s]
prediction: ['[CLS] the boy ran. [SEP]']
[ 300/ 500] tot_loss=1.292 (perp=6.128, rec=0.066), tot_loss_proj:1.403 [t=0.12s]
prediction: ['[CLS] the boy ran. [SEP]']
Attempt swap
[ 350/ 500] tot_loss=1.286 (perp=6.128, rec=0.061), tot_loss_proj:1.407 [t=0.11s]
prediction: ['[CLS] the boy ran. [SEP]']
Attempt swap
[ 400/ 500] tot_loss=1.280 (perp=6.128, rec=0.054), tot_loss_proj:1.392 [t=0.13s]
prediction: ['[CLS] the boy ran. [SEP]']
[ 450/ 500] tot_loss=1.286 (perp=6.128, rec=0.061), tot_loss_proj:1.407 [t=0.11s]
prediction: ['[CLS] the boy ran. [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.299 (perp=6.128, rec=0.074), tot_loss_proj:1.399 [t=0.12s]
prediction: ['[CLS] the boy ran. [SEP]']
Done with input #2 of 50.
reference: 
========================
[CLS] the boy ran. [SEP]
========================
predicted: 
========================
[CLS] the boy ran. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 100.000 | p: 100.000 | r: 100.000
rouge2     | fm: 100.000 | p: 100.000 | r: 100.000
rougeL     | fm: 100.000 | p: 100.000 | r: 100.000
rougeLsum  | fm: 100.000 | p: 100.000 | r: 100.000
r1fm+r2fm = 200.000

[Aggregate metrics]:
rouge1     | fm: 95.382 | p: 93.939 | r: 96.970
rouge2     | fm: 71.404 | p: 70.000 | r: 72.963
rougeL     | fm: 89.322 | p: 87.879 | r: 90.909
rougeLsum  | fm: 89.322 | p: 87.879 | r: 90.909
r1fm+r2fm = 166.786

input #2 time: 0:01:31 | total time: 0:04:39


Running input #3 of 50.
reference: 
========================
I wonder who Bill saw and liked Mary.
========================
Debug: ids_shape = 11, pads = [11]
Debug: input ids = tensor([[ 101, 1045, 4687, 2040, 3021, 2387, 1998, 4669, 2984, 1012,  102]],
       device='cuda:0')
Debug: ref = ['[CLS] i wonder who bill saw and liked mary. [SEP]']
[Init] best rec loss: 0.5891383290290833 for ['[CLS] stems macquarieouin provocative solved tyingiste crossing economist [SEP]']
[Init] best rec loss: 0.5794943571090698 for ['[CLS] deposited clear paperback variability ᆯfort acquaintances taller nec [SEP]']
[Init] best rec loss: 0.5540152788162231 for ['[CLS] peter 01 penstf shaky josef lo criminals expenses [SEP]']
[Init] best rec loss: 0.5411891937255859 for ['[CLS] giants fulbright hats frederick truths aztec sheath fireworksnzo [SEP]']
[Init] best rec loss: 0.5308002233505249 for ['[CLS] disneyland bike shiproll sampson kicking battery 8 wealth [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.341 (perp=11.067, rec=0.127), tot_loss_proj:2.485 [t=0.13s]
prediction: ['[CLS] wondered wonder watched mary mary liked he. liked [SEP]']
Attempt swap
Moved token
[ 100/ 500] tot_loss=1.763 (perp=8.366, rec=0.090), tot_loss_proj:1.934 [t=0.12s]
prediction: ['[CLS] wonder. wonder who mary mary liked and liked [SEP]']
[ 150/ 500] tot_loss=1.727 (perp=8.302, rec=0.066), tot_loss_proj:1.892 [t=0.12s]
prediction: ['[CLS] i. wonder who mary bill liked and saw [SEP]']
Attempt swap
Swapped tokens
[ 200/ 500] tot_loss=1.574 (perp=7.478, rec=0.079), tot_loss_proj:1.737 [t=0.12s]
prediction: ['[CLS] i. wonder who bill mary liked and saw [SEP]']
Attempt swap
Swapped tokens
[ 250/ 500] tot_loss=1.482 (perp=7.038, rec=0.075), tot_loss_proj:1.631 [t=0.12s]
prediction: ['[CLS]. i wonder who bill mary liked and saw [SEP]']
[ 300/ 500] tot_loss=1.470 (perp=7.038, rec=0.062), tot_loss_proj:1.638 [t=0.12s]
prediction: ['[CLS]. i wonder who bill mary liked and saw [SEP]']
Attempt swap
Put prefix at the end
[ 350/ 500] tot_loss=1.343 (perp=6.399, rec=0.063), tot_loss_proj:1.482 [t=0.12s]
prediction: ['[CLS] i wonder who bill mary liked and saw. [SEP]']
Attempt swap
Swapped tokens
[ 400/ 500] tot_loss=1.342 (perp=6.332, rec=0.075), tot_loss_proj:1.460 [t=0.12s]
prediction: ['[CLS] i wonder who bill mary saw and liked. [SEP]']
[ 450/ 500] tot_loss=1.324 (perp=6.332, rec=0.057), tot_loss_proj:1.473 [t=0.12s]
prediction: ['[CLS] i wonder who bill mary saw and liked. [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.339 (perp=6.332, rec=0.073), tot_loss_proj:1.448 [t=0.13s]
prediction: ['[CLS] i wonder who bill mary saw and liked. [SEP]']
Done with input #3 of 50.
reference: 
========================
[CLS] i wonder who bill saw and liked mary. [SEP]
========================
predicted: 
========================
[CLS] i wonder who bill mary saw and liked. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 100.000 | p: 100.000 | r: 100.000
rouge2     | fm: 66.667 | p: 66.667 | r: 66.667
rougeL     | fm: 90.000 | p: 90.000 | r: 90.000
rougeLsum  | fm: 90.000 | p: 90.000 | r: 90.000
r1fm+r2fm = 166.667

[Aggregate metrics]:
rouge1     | fm: 96.537 | p: 95.455 | r: 97.727
rouge2     | fm: 70.439 | p: 69.167 | r: 71.806
rougeL     | fm: 89.491 | p: 88.409 | r: 90.682
rougeLsum  | fm: 89.491 | p: 88.409 | r: 90.682
r1fm+r2fm = 166.975

input #3 time: 0:01:34 | total time: 0:06:13


Running input #4 of 50.
reference: 
========================
While I might want to, this is the kind of thing that Harris has already suggested.
========================
Debug: ids_shape = 20, pads = [20]
Debug: input ids = tensor([[ 101, 2096, 1045, 2453, 2215, 2000, 1010, 2023, 2003, 1996, 2785, 1997,
         2518, 2008, 5671, 2038, 2525, 4081, 1012,  102]], device='cuda:0')
Debug: ref = ['[CLS] while i might want to, this is the kind of thing that harris has already suggested. [SEP]']
[Init] best rec loss: 0.616558849811554 for ['[CLS] caribbean subscription bigger impairment 5000 tajikistan wentworthfy weak life gran lexingtonverted 210uid inter tile normandy [SEP]']
[Init] best rec loss: 0.5994648337364197 for ['[CLS] pupnem wage tooth casket libya belledhamᄎunasfighting dawnedberries billings cache angles rabbi industry [SEP]']
[Init] best rec loss: 0.5993760228157043 for ['[CLS] truce sarajevobalmere lanesyne38 traps sexualesh commodore microscope ⊆ guiding note harris ;bina [SEP]']
[Init] best rec loss: 0.5879136323928833 for ['[CLS]ieu kenton unpopular hail kingdom waters waves breadthtino churning backlash attorneys photographed digit dirkcope annabellechment [SEP]']
[Init] best rec loss: 0.5680646896362305 for ['[CLS] recipients suburb referendum ordered urdu cruz gaga demolished outcea rendezvous ash methyl edmund steamship meade wwf hub [SEP]']
[Init] best perm rec loss: 0.5679436922073364 for ['[CLS] cruz edmund suburb wwf demolished steamship meade methyl referendum gaga recipients hubcea urdu out ordered rendezvous ash [SEP]']
[Init] best perm rec loss: 0.5662804841995239 for ['[CLS] wwf demolished hub rendezvous ordered urdu gaga meade methyl cruz edmund ash recipients referendumcea out steamship suburb [SEP]']
[Init] best perm rec loss: 0.564929187297821 for ['[CLS] methyl demolished cruz rendezvous ash out wwf ordered urducea hub recipients suburb meade gaga referendum steamship edmund [SEP]']
[Init] best perm rec loss: 0.560655415058136 for ['[CLS] hub cruz recipients gaga ash ordered methyl wwf edmund steamship rendezvous referendumcea demolished meade suburb out urdu [SEP]']
[Init] best perm rec loss: 0.5590410232543945 for ['[CLS] suburb rendezvous edmund urdu ash ordered cruz meade referendumcea hub wwf recipients demolished methyl steamship out gaga [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.010 (perp=9.331, rec=0.144), tot_loss_proj:2.189 [t=0.12s]
prediction: ['[CLS] while provide, another was soacies not this as is would professor evan williams suggested ofxing [SEP]']
Attempt swap
Moved sequence
[ 100/ 500] tot_loss=1.967 (perp=9.292, rec=0.109), tot_loss_proj:2.205 [t=0.12s]
prediction: ['[CLS] while toacies want this that is kind the which want, an is harris suggested hasicing [SEP]']
[ 150/ 500] tot_loss=1.909 (perp=9.055, rec=0.098), tot_loss_proj:2.110 [t=0.12s]
prediction: ['[CLS] while i, want this that is kind thing. want, is honestly harris suggested already suggesting [SEP]']
Attempt swap
Swapped tokens
[ 200/ 500] tot_loss=1.869 (perp=8.846, rec=0.100), tot_loss_proj:2.082 [t=0.13s]
prediction: ['[CLS] while i i want this the is kind thing. want, thing and harris suggested already to [SEP]']
Attempt swap
Swapped tokens
[ 250/ 500] tot_loss=1.532 (perp=7.275, rec=0.077), tot_loss_proj:1.712 [t=0.13s]
prediction: ['[CLS] while might might want this the is kind thing to want, that and harris suggested already. [SEP]']
[ 300/ 500] tot_loss=1.503 (perp=7.135, rec=0.076), tot_loss_proj:1.679 [t=0.13s]
prediction: ['[CLS] while might might want this the is kind thing to want, that of harris suggested already. [SEP]']
Attempt swap
Moved sequence
[ 350/ 500] tot_loss=1.473 (perp=6.971, rec=0.078), tot_loss_proj:1.616 [t=0.13s]
prediction: ['[CLS] while might might want this kind thing to want the is, that of harris suggested already. [SEP]']
Attempt swap
Moved token
[ 400/ 500] tot_loss=1.406 (perp=6.656, rec=0.075), tot_loss_proj:1.562 [t=0.12s]
prediction: ['[CLS] while might might want this thing to want the kind is, that of harris suggested already. [SEP]']
[ 450/ 500] tot_loss=1.425 (perp=6.790, rec=0.067), tot_loss_proj:1.566 [t=0.13s]
prediction: ['[CLS] while might might want this thing to want the kind is, that that harris suggested already. [SEP]']
Attempt swap
Swapped tokens
[ 500/ 500] tot_loss=1.306 (perp=6.170, rec=0.072), tot_loss_proj:1.476 [t=0.13s]
prediction: ['[CLS] while i might want this thing to want the kind is, that might harris suggested already. [SEP]']
Done with input #4 of 50.
reference: 
========================
[CLS] while i might want to, this is the kind of thing that harris has already suggested. [SEP]
========================
predicted: 
========================
[CLS] while might might want this thing to want the kind is, that that harris suggested already. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 83.333 | p: 83.333 | r: 83.333
rouge2     | fm: 23.529 | p: 23.529 | r: 23.529
rougeL     | fm: 61.111 | p: 61.111 | r: 61.111
rougeLsum  | fm: 61.111 | p: 61.111 | r: 61.111
r1fm+r2fm = 106.863

[Aggregate metrics]:
rouge1     | fm: 93.896 | p: 93.030 | r: 94.848
rouge2     | fm: 61.057 | p: 60.039 | r: 62.484
rougeL     | fm: 84.139 | p: 83.131 | r: 84.768
rougeLsum  | fm: 84.025 | p: 83.131 | r: 84.768
r1fm+r2fm = 154.953

input #4 time: 0:01:36 | total time: 0:07:50


Running input #5 of 50.
reference: 
========================
Who has seen my snorkel?
========================
Debug: ids_shape = 10, pads = [10]
Debug: input ids = tensor([[  101,  2040,  2038,  2464,  2026,  1055, 12131, 11705,  1029,   102]],
       device='cuda:0')
Debug: ref = ['[CLS] who has seen my snorkel? [SEP]']
[Init] best rec loss: 0.6098921895027161 for ['[CLS]sy hoffmannstellar ceo vessels numerical nosines [SEP]']
[Init] best rec loss: 0.5944218635559082 for ['[CLS]chev each archaeologistsvision エ 亻 rotational communist [SEP]']
[Init] best rec loss: 0.5807942152023315 for ['[CLS]sol crucial cumberland landaupuram inorganic divide kings [SEP]']
[Init] best rec loss: 0.573359489440918 for ['[CLS]iz med ewing flooding commandant redesignatedminated hole [SEP]']
[Init] best rec loss: 0.572756290435791 for ['[CLS] keel constituencies salzburg ions revolutionary gunner shooting asked [SEP]']
[Init] best perm rec loss: 0.5699559450149536 for ['[CLS] salzburg shooting keel revolutionary asked gunner ions constituencies [SEP]']
[Init] best perm rec loss: 0.5683960318565369 for ['[CLS] constituencies revolutionary salzburg gunner keel ions shooting asked [SEP]']
[Init] best perm rec loss: 0.5635615587234497 for ['[CLS] constituencies revolutionary salzburg asked gunner shooting ions keel [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.042 (perp=9.625, rec=0.117), tot_loss_proj:2.356 [t=0.12s]
prediction: ['[CLS] whokelkel yourkel mykel? [SEP]']
Attempt swap
Moved token
[ 100/ 500] tot_loss=1.919 (perp=9.133, rec=0.092), tot_loss_proj:2.112 [t=0.11s]
prediction: ['[CLS] whokel mykel hadnorkel? [SEP]']
[ 150/ 500] tot_loss=2.021 (perp=9.753, rec=0.070), tot_loss_proj:2.169 [t=0.12s]
prediction: ['[CLS] whokel my seen hasnorkel? [SEP]']
Attempt swap
Moved sequence
[ 200/ 500] tot_loss=1.695 (perp=8.123, rec=0.071), tot_loss_proj:1.812 [t=0.12s]
prediction: ['[CLS] who seen haskel mynorkel? [SEP]']
Attempt swap
Swapped tokens
[ 250/ 500] tot_loss=1.495 (perp=7.134, rec=0.069), tot_loss_proj:1.583 [t=0.13s]
prediction: ['[CLS] who has seenkel mynorkel? [SEP]']
[ 300/ 500] tot_loss=1.509 (perp=7.134, rec=0.082), tot_loss_proj:1.623 [t=0.13s]
prediction: ['[CLS] who has seenkel mynorkel? [SEP]']
Attempt swap
[ 350/ 500] tot_loss=1.495 (perp=7.134, rec=0.068), tot_loss_proj:1.599 [t=0.13s]
prediction: ['[CLS] who has seenkel mynorkel? [SEP]']
Attempt swap
[ 400/ 500] tot_loss=1.487 (perp=7.134, rec=0.060), tot_loss_proj:1.586 [t=0.13s]
prediction: ['[CLS] who has seenkel mynorkel? [SEP]']
[ 450/ 500] tot_loss=1.497 (perp=7.134, rec=0.070), tot_loss_proj:1.608 [t=0.12s]
prediction: ['[CLS] who has seenkel mynorkel? [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.492 (perp=7.134, rec=0.065), tot_loss_proj:1.610 [t=0.13s]
prediction: ['[CLS] who has seenkel mynorkel? [SEP]']
Done with input #5 of 50.
reference: 
========================
[CLS] who has seen my snorkel? [SEP]
========================
predicted: 
========================
[CLS] who has seenkel mynorkel? [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 61.538 | p: 66.667 | r: 57.143
rouge2     | fm: 36.364 | p: 40.000 | r: 33.333
rougeL     | fm: 61.538 | p: 66.667 | r: 57.143
rougeLsum  | fm: 61.538 | p: 66.667 | r: 57.143
r1fm+r2fm = 97.902

[Aggregate metrics]:
rouge1     | fm: 89.044 | p: 88.636 | r: 88.564
rouge2     | fm: 56.502 | p: 56.667 | r: 57.070
rougeL     | fm: 80.301 | p: 80.387 | r: 80.433
rougeLsum  | fm: 80.102 | p: 80.236 | r: 80.164
r1fm+r2fm = 145.546

input #5 time: 0:01:32 | total time: 0:09:22


Running input #6 of 50.
reference: 
========================
Which goddess helped us?
========================
Debug: ids_shape = 7, pads = [7]
Debug: input ids = tensor([[ 101, 2029, 7804, 3271, 2149, 1029,  102]], device='cuda:0')
Debug: ref = ['[CLS] which goddess helped us? [SEP]']
[Init] best rec loss: 0.5823168158531189 for ['[CLS] habit astros cia fertility 356 [SEP]']
[Init] best rec loss: 0.5725529789924622 for ['[CLS]₆ whitakercb mindanaoguard [SEP]']
[Init] best rec loss: 0.5725439786911011 for ['[CLS] outfielder 640 polo ² scorpion [SEP]']
[Init] best rec loss: 0.5700278282165527 for ['[CLS] bullshit consume juliana shapes原 [SEP]']
[Init] best rec loss: 0.5599013566970825 for ['[CLS] essence帝 cardiff laguna restrictive [SEP]']
[Init] best rec loss: 0.552596926689148 for ['[CLS] managerial cis pardon steelers sequels [SEP]']
[Init] best perm rec loss: 0.5523219108581543 for ['[CLS] cis steelers pardon managerial sequels [SEP]']
[Init] best perm rec loss: 0.552219808101654 for ['[CLS] pardon managerial sequels steelers cis [SEP]']
[Init] best perm rec loss: 0.5505931973457336 for ['[CLS] cis managerial sequels pardon steelers [SEP]']
[Init] best perm rec loss: 0.5456159710884094 for ['[CLS] cis pardon sequels managerial steelers [SEP]']
[Init] best perm rec loss: 0.5449738502502441 for ['[CLS] pardon managerial steelers sequels cis [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.903 (perp=8.887, rec=0.125), tot_loss_proj:2.058 [t=0.11s]
prediction: ['[CLS] which goddess? she helped [SEP]']
Attempt swap
Put prefix at the end
[ 100/ 500] tot_loss=1.950 (perp=9.291, rec=0.092), tot_loss_proj:2.054 [t=0.12s]
prediction: ['[CLS] which helped which goddess? [SEP]']
[ 150/ 500] tot_loss=1.762 (perp=8.412, rec=0.080), tot_loss_proj:1.890 [t=0.13s]
prediction: ['[CLS] they helped which goddess? [SEP]']
Attempt swap
Moved token
[ 200/ 500] tot_loss=2.038 (perp=9.791, rec=0.080), tot_loss_proj:2.173 [t=0.13s]
prediction: ['[CLS] which helped helped goddess? [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.945 (perp=9.384, rec=0.068), tot_loss_proj:2.090 [t=0.12s]
prediction: ['[CLS] goddess which helped helped? [SEP]']
[ 300/ 500] tot_loss=1.953 (perp=9.384, rec=0.076), tot_loss_proj:2.088 [t=0.12s]
prediction: ['[CLS] goddess which helped helped? [SEP]']
Attempt swap
Moved sequence
[ 350/ 500] tot_loss=1.913 (perp=9.170, rec=0.079), tot_loss_proj:2.029 [t=0.12s]
prediction: ['[CLS] helped goddess which helped? [SEP]']
Attempt swap
Swapped tokens
[ 400/ 500] tot_loss=1.709 (perp=8.242, rec=0.061), tot_loss_proj:1.775 [t=0.12s]
prediction: ['[CLS] which goddess helped us? [SEP]']
[ 450/ 500] tot_loss=1.712 (perp=8.242, rec=0.064), tot_loss_proj:1.759 [t=0.11s]
prediction: ['[CLS] which goddess helped us? [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.701 (perp=8.242, rec=0.052), tot_loss_proj:1.768 [t=0.11s]
prediction: ['[CLS] which goddess helped us? [SEP]']
Done with input #6 of 50.
reference: 
========================
[CLS] which goddess helped us? [SEP]
========================
predicted: 
========================
[CLS] which goddess helped us? [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 100.000 | p: 100.000 | r: 100.000
rouge2     | fm: 100.000 | p: 100.000 | r: 100.000
rougeL     | fm: 100.000 | p: 100.000 | r: 100.000
rougeLsum  | fm: 100.000 | p: 100.000 | r: 100.000
r1fm+r2fm = 200.000

[Aggregate metrics]:
rouge1     | fm: 90.826 | p: 91.342 | r: 91.280
rouge2     | fm: 63.451 | p: 63.123 | r: 63.866
rougeL     | fm: 82.945 | p: 83.059 | r: 82.997
rougeLsum  | fm: 82.945 | p: 83.059 | r: 82.997
r1fm+r2fm = 154.277

input #6 time: 0:01:31 | total time: 0:10:54


Running input #7 of 50.
reference: 
========================
They have no old.
========================
Debug: ids_shape = 7, pads = [7]
Debug: input ids = tensor([[ 101, 2027, 2031, 2053, 2214, 1012,  102]], device='cuda:0')
Debug: ref = ['[CLS] they have no old. [SEP]']
[Init] best rec loss: 0.6456930041313171 for ['[CLS] canadarion deciduous conservatives luggage [SEP]']
[Init] best rec loss: 0.6426836848258972 for ['[CLS] bowed explaining 止iaceae indicators [SEP]']
[Init] best rec loss: 0.6405467987060547 for ['[CLS] ability hamilton screens ligue cheekbones [SEP]']
[Init] best rec loss: 0.6396779417991638 for ['[CLS] trustee emancipation comrade aw representation [SEP]']
[Init] best rec loss: 0.6328791975975037 for ['[CLS] ש freakwordpine freyja [SEP]']
[Init] best rec loss: 0.6286869049072266 for ['[CLS] rebounds hymns souza commerce unspecified [SEP]']
[Init] best rec loss: 0.6255349516868591 for ['[CLS] tick breeders gambleppel da [SEP]']
[Init] best perm rec loss: 0.6227204203605652 for ['[CLS] gambleppel tick breeders da [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.688 (perp=7.887, rec=0.111), tot_loss_proj:1.905 [t=0.12s]
prediction: ['[CLS] they no old. ah [SEP]']
Attempt swap
Moved sequence
[ 100/ 500] tot_loss=1.614 (perp=7.673, rec=0.080), tot_loss_proj:1.890 [t=0.12s]
prediction: ['[CLS] they ah no old. [SEP]']
[ 150/ 500] tot_loss=1.442 (perp=6.801, rec=0.082), tot_loss_proj:1.671 [t=0.12s]
prediction: ['[CLS] they i no old. [SEP]']
Attempt swap
[ 200/ 500] tot_loss=1.426 (perp=6.801, rec=0.065), tot_loss_proj:1.686 [t=0.12s]
prediction: ['[CLS] they i no old. [SEP]']
Attempt swap
[ 250/ 500] tot_loss=1.439 (perp=6.801, rec=0.079), tot_loss_proj:1.685 [t=0.12s]
prediction: ['[CLS] they i no old. [SEP]']
[ 300/ 500] tot_loss=1.246 (perp=5.838, rec=0.078), tot_loss_proj:1.349 [t=0.12s]
prediction: ['[CLS] they have no old. [SEP]']
Attempt swap
[ 350/ 500] tot_loss=1.239 (perp=5.838, rec=0.071), tot_loss_proj:1.338 [t=0.12s]
prediction: ['[CLS] they have no old. [SEP]']
Attempt swap
[ 400/ 500] tot_loss=1.234 (perp=5.838, rec=0.067), tot_loss_proj:1.338 [t=0.12s]
prediction: ['[CLS] they have no old. [SEP]']
[ 450/ 500] tot_loss=1.237 (perp=5.838, rec=0.070), tot_loss_proj:1.371 [t=0.12s]
prediction: ['[CLS] they have no old. [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.239 (perp=5.838, rec=0.071), tot_loss_proj:1.368 [t=0.13s]
prediction: ['[CLS] they have no old. [SEP]']
Done with input #7 of 50.
reference: 
========================
[CLS] they have no old. [SEP]
========================
predicted: 
========================
[CLS] they have no old. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 100.000 | p: 100.000 | r: 100.000
rouge2     | fm: 100.000 | p: 100.000 | r: 100.000
rougeL     | fm: 100.000 | p: 100.000 | r: 100.000
rougeLsum  | fm: 100.000 | p: 100.000 | r: 100.000
r1fm+r2fm = 200.000

[Aggregate metrics]:
rouge1     | fm: 91.973 | p: 92.424 | r: 92.370
rouge2     | fm: 67.437 | p: 67.525 | r: 67.802
rougeL     | fm: 85.130 | p: 85.379 | r: 85.123
rougeLsum  | fm: 84.947 | p: 85.088 | r: 85.118
r1fm+r2fm = 159.409

input #7 time: 0:01:32 | total time: 0:12:26


Running input #8 of 50.
reference: 
========================
John tries to meet not Mary.
========================
Debug: ids_shape = 9, pads = [9]
Debug: input ids = tensor([[ 101, 2198, 5363, 2000, 3113, 2025, 2984, 1012,  102]],
       device='cuda:0')
Debug: ref = ['[CLS] john tries to meet not mary. [SEP]']
[Init] best rec loss: 0.575903594493866 for ['[CLS] 1611cian eps surviving dividesowed pieter [SEP]']
[Init] best rec loss: 0.548225462436676 for ['[CLS] arjun texans techno attendance vet auschwitz slides [SEP]']
[Init] best rec loss: 0.5448182821273804 for ['[CLS] scully designatedmmy allan bari 彳 creole [SEP]']
[Init] best perm rec loss: 0.5392810702323914 for ['[CLS] 彳 scully designatedmmy allan creole bari [SEP]']
[Init] best perm rec loss: 0.534822940826416 for ['[CLS] allan scully 彳mmy bari creole designated [SEP]']
[Init] best perm rec loss: 0.5342394113540649 for ['[CLS] scully designated 彳 allanmmy creole bari [SEP]']
[Init] best perm rec loss: 0.5323548316955566 for ['[CLS] scully allan creole 彳 barimmy designated [SEP]']
[Init] best perm rec loss: 0.5320135951042175 for ['[CLS] scullymmy designated bari creole allan 彳 [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.968 (perp=9.258, rec=0.116), tot_loss_proj:2.121 [t=0.12s]
prediction: ['[CLS] tries tries criticized not to meet mary [SEP]']
Attempt swap
Moved token
[ 100/ 500] tot_loss=1.710 (perp=8.002, rec=0.109), tot_loss_proj:1.828 [t=0.13s]
prediction: ['[CLS] against tries tries not to meet mary [SEP]']
[ 150/ 500] tot_loss=1.690 (perp=8.002, rec=0.090), tot_loss_proj:1.826 [t=0.12s]
prediction: ['[CLS] against tries tries not to meet mary [SEP]']
Attempt swap
[ 200/ 500] tot_loss=1.962 (perp=9.301, rec=0.101), tot_loss_proj:2.132 [t=0.12s]
prediction: ['[CLS] against john tries not. meet mary [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.781 (perp=8.428, rec=0.095), tot_loss_proj:1.870 [t=0.11s]
prediction: ['[CLS] their john tries not meet mary. [SEP]']
[ 300/ 500] tot_loss=1.779 (perp=8.428, rec=0.094), tot_loss_proj:1.866 [t=0.12s]
prediction: ['[CLS] their john tries not meet mary. [SEP]']
Attempt swap
Moved sequence
[ 350/ 500] tot_loss=1.876 (perp=8.931, rec=0.090), tot_loss_proj:1.958 [t=0.12s]
prediction: ['[CLS] john tries not meet mary his. [SEP]']
Attempt swap
Swapped tokens
[ 400/ 500] tot_loss=1.672 (perp=7.938, rec=0.085), tot_loss_proj:1.767 [t=0.12s]
prediction: ['[CLS] john tries not meet his mary. [SEP]']
[ 450/ 500] tot_loss=1.734 (perp=8.323, rec=0.070), tot_loss_proj:1.853 [t=0.12s]
prediction: ['[CLS] john tries not meet against mary. [SEP]']
Attempt swap
Moved token
[ 500/ 500] tot_loss=1.762 (perp=8.428, rec=0.076), tot_loss_proj:1.867 [t=0.11s]
prediction: ['[CLS] their john tries not meet mary. [SEP]']
Done with input #8 of 50.
reference: 
========================
[CLS] john tries to meet not mary. [SEP]
========================
predicted: 
========================
[CLS] their john tries not meet mary. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 87.500 | p: 87.500 | r: 87.500
rouge2     | fm: 28.571 | p: 28.571 | r: 28.571
rougeL     | fm: 75.000 | p: 75.000 | r: 75.000
rougeLsum  | fm: 75.000 | p: 75.000 | r: 75.000
r1fm+r2fm = 116.071

[Aggregate metrics]:
rouge1     | fm: 91.428 | p: 91.414 | r: 91.450
rouge2     | fm: 63.596 | p: 63.414 | r: 63.836
rougeL     | fm: 84.078 | p: 84.082 | r: 84.250
rougeLsum  | fm: 84.383 | p: 84.400 | r: 84.439
r1fm+r2fm = 155.023

input #8 time: 0:01:43 | total time: 0:14:10


Running input #9 of 50.
reference: 
========================
The unidentified victim was apparently struck during the early morning hours.
========================
Debug: ids_shape = 14, pads = [14]
Debug: input ids = tensor([[  101,  1996, 20293,  6778,  2001,  4593,  4930,  2076,  1996,  2220,
          2851,  2847,  1012,   102]], device='cuda:0')
Debug: ref = ['[CLS] the unidentified victim was apparently struck during the early morning hours. [SEP]']
[Init] best rec loss: 0.597204327583313 for ['[CLS] puzzlebas millennia partnering hammered mutationsgum um vietnam swung waving culinary [SEP]']
[Init] best rec loss: 0.5815049409866333 for ['[CLS] outdoors peat middle chest dish suez ே stunts otago ortegalc sinatra [SEP]']
[Init] best rec loss: 0.5785698294639587 for ['[CLS] roosterudedtteredhers historicallyρ handicapped convenienceuze recession risen balkans [SEP]']
[Init] best rec loss: 0.5764161348342896 for ['[CLS] splinter kildaresser luther styx overhaulɯ seasideiteup dnayp [SEP]']
[Init] best rec loss: 0.5698270201683044 for ['[CLS] somedayyla balfour emptypass dormitory ribbonurai rebelledunathe wrestlemania [SEP]']
[Init] best rec loss: 0.5682958960533142 for ['[CLS] copelandsler deviation climax statehood robertsoniction conservatory lightly reunite sanitaryuka [SEP]']
[Init] best perm rec loss: 0.5638309717178345 for ['[CLS] climax deviation conservatoryuka robertsonsler lightly sanitaryiction statehood copeland reunite [SEP]']
[Init] best perm rec loss: 0.5635108351707458 for ['[CLS] robertson deviation conservatory sanitary reuniteuka climax lightly statehood copelandictionsler [SEP]']
[Init] best perm rec loss: 0.562414288520813 for ['[CLS] statehoodsler lightly sanitary deviation robertson reuniteiction climax conservatoryuka copeland [SEP]']
[Init] best perm rec loss: 0.5621733069419861 for ['[CLS] climax copeland deviationuka robertson lightly conservatory statehoodictionsler sanitary reunite [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.179 (perp=10.335, rec=0.112), tot_loss_proj:2.373 [t=0.12s]
prediction: ['[CLS] victim unidentified unidentified supposedly ago [SEP] school during morning the time. [SEP]']
Attempt swap
Moved token
[ 100/ 500] tot_loss=1.866 (perp=8.869, rec=0.093), tot_loss_proj:2.026 [t=0.12s]
prediction: ['[CLS] the victim struck unidentified supposedly sailors [SEP] day during morning hours. [SEP]']
[ 150/ 500] tot_loss=1.727 (perp=8.187, rec=0.089), tot_loss_proj:1.816 [t=0.13s]
prediction: ['[CLS] the victim struck unidentified apparently placed [SEP] early during morning hours. [SEP]']
Attempt swap
Swapped tokens
[ 200/ 500] tot_loss=1.598 (perp=7.595, rec=0.079), tot_loss_proj:1.692 [t=0.12s]
prediction: ['[CLS] the victim struck unidentified [SEP] struck apparently early during morning hours. [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.543 (perp=7.365, rec=0.070), tot_loss_proj:1.677 [t=0.11s]
prediction: ['[CLS] victim struck unidentified [SEP] victim apparently early during the morning hours. [SEP]']
[ 300/ 500] tot_loss=1.550 (perp=7.365, rec=0.077), tot_loss_proj:1.671 [t=0.12s]
prediction: ['[CLS] victim struck unidentified [SEP] victim apparently early during the morning hours. [SEP]']
Attempt swap
Moved token
[ 350/ 500] tot_loss=1.361 (perp=6.432, rec=0.075), tot_loss_proj:1.478 [t=0.13s]
prediction: ['[CLS] victim unidentified [SEP] victim apparently struck early during the morning hours. [SEP]']
Attempt swap
[ 400/ 500] tot_loss=1.359 (perp=6.432, rec=0.072), tot_loss_proj:1.475 [t=0.13s]
prediction: ['[CLS] victim unidentified [SEP] victim apparently struck early during the morning hours. [SEP]']
[ 450/ 500] tot_loss=1.302 (perp=6.155, rec=0.071), tot_loss_proj:1.415 [t=0.12s]
prediction: ['[CLS] victim unidentified the victim apparently struck early during the morning hours. [SEP]']
Attempt swap
Moved token
[ 500/ 500] tot_loss=1.362 (perp=6.426, rec=0.077), tot_loss_proj:1.428 [t=0.12s]
prediction: ['[CLS] unidentified victim the was apparently struck early during the morning hours. [SEP]']
Done with input #9 of 50.
reference: 
========================
[CLS] the unidentified victim was apparently struck during the early morning hours. [SEP]
========================
predicted: 
========================
[CLS] unidentified victim the was apparently struck early during the morning hours. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 100.000 | p: 100.000 | r: 100.000
rouge2     | fm: 50.000 | p: 50.000 | r: 50.000
rougeL     | fm: 84.615 | p: 84.615 | r: 84.615
rougeLsum  | fm: 84.615 | p: 84.615 | r: 84.615
r1fm+r2fm = 150.000

[Aggregate metrics]:
rouge1     | fm: 92.269 | p: 92.273 | r: 92.327
rouge2     | fm: 62.192 | p: 62.220 | r: 62.222
rougeL     | fm: 84.323 | p: 84.274 | r: 84.381
rougeLsum  | fm: 84.597 | p: 84.638 | r: 84.703
r1fm+r2fm = 154.460

input #9 time: 0:01:32 | total time: 0:15:43


Running input #10 of 50.
reference: 
========================
the logs piled the barge high.
========================
Debug: ids_shape = 9, pads = [9]
Debug: input ids = tensor([[  101,  1996, 15664, 17835,  1996, 19398,  2152,  1012,   102]],
       device='cuda:0')
Debug: ref = ['[CLS] the logs piled the barge high. [SEP]']
[Init] best rec loss: 0.6383922696113586 for ['[CLS] illicitglitead refer enigma prioryaneous [SEP]']
[Init] best rec loss: 0.600622832775116 for ['[CLS]owskiriety partition pinnacle deniedlistic parlor [SEP]']
[Init] best rec loss: 0.5856125950813293 for ['[CLS] commodity candidacy busunciation courier lincoln crossbow [SEP]']
[Init] best rec loss: 0.5844700336456299 for ['[CLS] bakerydant check tonic manufacturer jungletive [SEP]']
[Init] best rec loss: 0.5745278000831604 for ['[CLS] stall vain patentedescuwalkdra orange [SEP]']
[Init] best rec loss: 0.572642982006073 for ['[CLS] slovenia washington 01 lo stares ᄐ hatfield [SEP]']
[Init] best rec loss: 0.5638183951377869 for ['[CLS] elevations roanokeiortosisdinaivar dewey [SEP]']
[Init] best rec loss: 0.5635978579521179 for ['[CLS] transcribed mutantsohssed santo flynnsos [SEP]']
[Init] best rec loss: 0.5609134435653687 for ['[CLS] baronetulatedrioai beef.odies [SEP]']
[Init] best rec loss: 0.5603716969490051 for ['[CLS] rev seekers soaringborough dugnitz© [SEP]']
[Init] best perm rec loss: 0.5599714517593384 for ['[CLS]©boroughnitz soaring seekers rev dug [SEP]']
[Init] best perm rec loss: 0.557373046875 for ['[CLS] seekers soaring dug revnitzborough© [SEP]']
[Init] best perm rec loss: 0.5556492209434509 for ['[CLS]©borough soaring rev dugnitz seekers [SEP]']
[Init] best perm rec loss: 0.5523257255554199 for ['[CLS]borough seekers© revnitz soaring dug [SEP]']
[Init] best perm rec loss: 0.5510201454162598 for ['[CLS] soaring dugboroughnitz© seekers rev [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.673 (perp=12.742, rec=0.125), tot_loss_proj:2.906 [t=0.11s]
prediction: ['[CLS] piled piled trucks logs ships the piled [SEP]']
Attempt swap
Put prefix at the end
[ 100/ 500] tot_loss=2.037 (perp=9.652, rec=0.106), tot_loss_proj:2.313 [t=0.12s]
prediction: ['[CLS] high piled piled logs logs barge. [SEP]']
[ 150/ 500] tot_loss=1.920 (perp=9.277, rec=0.065), tot_loss_proj:2.250 [t=0.12s]
prediction: ['[CLS] high piled logs logs logs barge. [SEP]']
Attempt swap
Swapped tokens
[ 200/ 500] tot_loss=1.786 (perp=8.523, rec=0.082), tot_loss_proj:2.109 [t=0.13s]
prediction: ['[CLS] high piled logs barge logs logs. [SEP]']
Attempt swap
Swapped tokens
[ 250/ 500] tot_loss=1.956 (perp=9.429, rec=0.070), tot_loss_proj:2.220 [t=0.13s]
prediction: ['[CLS] logs piled high barge logs the. [SEP]']
[ 300/ 500] tot_loss=1.949 (perp=9.429, rec=0.063), tot_loss_proj:2.221 [t=0.12s]
prediction: ['[CLS] logs piled high barge logs the. [SEP]']
Attempt swap
Moved token
[ 350/ 500] tot_loss=1.404 (perp=6.699, rec=0.065), tot_loss_proj:1.550 [t=0.12s]
prediction: ['[CLS] the logs piled high barge logs. [SEP]']
Attempt swap
[ 400/ 500] tot_loss=1.407 (perp=6.699, rec=0.067), tot_loss_proj:1.556 [t=0.12s]
prediction: ['[CLS] the logs piled high barge logs. [SEP]']
[ 450/ 500] tot_loss=1.665 (perp=8.009, rec=0.063), tot_loss_proj:1.875 [t=0.12s]
prediction: ['[CLS] the logs piled high barge barge. [SEP]']
Attempt swap
Swapped tokens
[ 500/ 500] tot_loss=1.610 (perp=7.727, rec=0.065), tot_loss_proj:1.974 [t=0.11s]
prediction: ['[CLS] the high piled logs barge barge. [SEP]']
Done with input #10 of 50.
reference: 
========================
[CLS] the logs piled the barge high. [SEP]
========================
predicted: 
========================
[CLS] the logs piled high barge logs. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 87.500 | p: 87.500 | r: 87.500
rouge2     | fm: 42.857 | p: 42.857 | r: 42.857
rougeL     | fm: 75.000 | p: 75.000 | r: 75.000
rougeLsum  | fm: 75.000 | p: 75.000 | r: 75.000
r1fm+r2fm = 130.357

[Aggregate metrics]:
rouge1     | fm: 91.889 | p: 91.908 | r: 91.908
rouge2     | fm: 60.422 | p: 60.260 | r: 60.507
rougeL     | fm: 83.263 | p: 83.283 | r: 83.298
rougeLsum  | fm: 83.657 | p: 83.730 | r: 83.738
r1fm+r2fm = 152.311

input #10 time: 0:01:32 | total time: 0:17:16


Running input #11 of 50.
reference: 
========================
During the early evening, Saturn can be found in the north, while Jupiter rises in the east.
========================
Debug: ids_shape = 22, pads = [22]
Debug: input ids = tensor([[  101,  2076,  1996,  2220,  3944,  1010, 14784,  2064,  2022,  2179,
          1999,  1996,  2167,  1010,  2096, 13035,  9466,  1999,  1996,  2264,
          1012,   102]], device='cuda:0')
Debug: ref = ['[CLS] during the early evening, saturn can be found in the north, while jupiter rises in the east. [SEP]']
[Init] best rec loss: 0.6355833411216736 for ['[CLS] manpower x tasksingenصhing baton reformed catchingtag varyии wishesquel renaultⁱ tatar kazakh london ukrainian [SEP]']
[Init] best rec loss: 0.620059609413147 for ['[CLS]llinsem ‑ tailed shorterlan occupational 737ze condemnationurslaid dso mummy deterioratingivision sponsor palestinian र vista [SEP]']
[Init] best rec loss: 0.6078302264213562 for ['[CLS] saint cad nk binary kitchens ee flyer unlawful slow ecclesiastical sweeney tyreslip lengthvdssee soundtracks keep molina academies [SEP]']
[Init] best rec loss: 0.5959065556526184 for ['[CLS] restartedvere underwood vietnam barrierfly島kong screenwriter asked entity historia dustin expeditionarynie permission duct warned circles polar [SEP]']
[Init] best rec loss: 0.5919843316078186 for ['[CLS]− realm fitspp compton speakers char catering nflitung bashaifer defiance represent 1801eca denote jesuits adolescent シ [SEP]']
[Init] best rec loss: 0.5876538157463074 for ['[CLS] benches arden obesity lab gordon winner spectradad wrocław outlinedlou audience mill sportbbling thing tin lucknow geometridae banda [SEP]']
[Init] best rec loss: 0.5777893662452698 for ['[CLS] becca ア khmerhell blizzard rhapsody eveninglogue schumacher korea leaked attorneys injection conqueror rectoryred usher lodges relief trap [SEP]']
[Init] best rec loss: 0.572931170463562 for ['[CLS]kou cerro savanna counties pau tasks role maryland favors gaelster camillecm straw 11th offsetumble poison serum contest [SEP]']
[Init] best perm rec loss: 0.5683187246322632 for ['[CLS] taskskou camille pau strawumble favors counties cerro marylandcm serum savanna poison 11th role gaelster offset contest [SEP]']
[Init] best perm rec loss: 0.5676045417785645 for ['[CLS] strawcm serum contestumble camille marylandkou savanna counties favors gael tasks poisonster role cerro 11th offset pau [SEP]']
[Init] best perm rec loss: 0.5654489398002625 for ['[CLS] poison favorskouumble savanna offset gael camille contestster tasks straw pau cerro maryland serum countiescm 11th role [SEP]']
[Init] best perm rec loss: 0.5650035738945007 for ['[CLS]umblekou favors poison pau serum counties savanna offsetster camille maryland straw rolecm tasks cerro gael contest 11th [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.815 (perp=8.430, rec=0.129), tot_loss_proj:1.979 [t=0.11s]
prediction: ['[CLS] early night. afternoon the jupiter jupiter spectrum in the jupiter - evening while jupiter may finds saturn during the [SEP]']
Attempt swap
Moved token
[ 100/ 500] tot_loss=1.611 (perp=7.559, rec=0.099), tot_loss_proj:1.804 [t=0.12s]
prediction: ['[CLS] early was. north evening the jupiter saturn jupiter in the north the evening while jupiter can found during the [SEP]']
[ 150/ 500] tot_loss=1.834 (perp=8.690, rec=0.095), tot_loss_proj:2.068 [t=0.12s]
prediction: ['[CLS] early,. north evening the saturn saturn range in the north the evening while jupiter finds found during the [SEP]']
Attempt swap
Moved sequence
[ 200/ 500] tot_loss=1.560 (perp=7.378, rec=0.085), tot_loss_proj:1.734 [t=0.12s]
prediction: ['[CLS] early the north evening, saturn saturn found in the north the evening while jupiter. rises found during the [SEP]']
Attempt swap
Put prefix at the end
[ 250/ 500] tot_loss=1.420 (perp=6.620, rec=0.096), tot_loss_proj:1.608 [t=0.12s]
prediction: ['[CLS] rises found during the early the north evening, saturn saturn found in the north the evening while jupiter. [SEP]']
[ 300/ 500] tot_loss=1.414 (perp=6.620, rec=0.090), tot_loss_proj:1.607 [t=0.14s]
prediction: ['[CLS] rises found during the early the north evening, saturn saturn found in the north the evening while jupiter. [SEP]']
Attempt swap
Moved token
[ 350/ 500] tot_loss=1.345 (perp=6.374, rec=0.070), tot_loss_proj:1.544 [t=0.13s]
prediction: ['[CLS] found during the early rises the north evening, saturn saturn found in the north the evening while jupiter. [SEP]']
Attempt swap
Swapped tokens
[ 400/ 500] tot_loss=1.365 (perp=6.419, rec=0.081), tot_loss_proj:1.540 [t=0.13s]
prediction: ['[CLS] found during the early rises the east evening saturn, saturn found in the north the evening while jupiter. [SEP]']
[ 450/ 500] tot_loss=1.349 (perp=6.419, rec=0.066), tot_loss_proj:1.529 [t=0.13s]
prediction: ['[CLS] found during the early rises the east evening saturn, saturn found in the north the evening while jupiter. [SEP]']
Attempt swap
Moved token
[ 500/ 500] tot_loss=1.313 (perp=6.213, rec=0.071), tot_loss_proj:1.516 [t=0.12s]
prediction: ['[CLS] found during the early rises the east evening saturn, found in the north the evening saturn while jupiter. [SEP]']
Done with input #11 of 50.
reference: 
========================
[CLS] during the early evening, saturn can be found in the north, while jupiter rises in the east. [SEP]
========================
predicted: 
========================
[CLS] found during the early rises the east evening saturn, found in the north the evening saturn while jupiter. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 82.051 | p: 80.000 | r: 84.211
rouge2     | fm: 43.243 | p: 42.105 | r: 44.444
rougeL     | fm: 66.667 | p: 65.000 | r: 68.421
rougeLsum  | fm: 66.667 | p: 65.000 | r: 68.421
r1fm+r2fm = 125.295

[Aggregate metrics]:
rouge1     | fm: 90.926 | p: 90.704 | r: 91.220
rouge2     | fm: 58.591 | p: 58.449 | r: 58.849
rougeL     | fm: 81.957 | p: 81.835 | r: 82.089
rougeLsum  | fm: 82.092 | p: 82.094 | r: 82.297
r1fm+r2fm = 149.517

input #11 time: 0:01:34 | total time: 0:18:51


Running input #12 of 50.
reference: 
========================
He walked up the hill.
========================
Debug: ids_shape = 8, pads = [8]
Debug: input ids = tensor([[ 101, 2002, 2939, 2039, 1996, 2940, 1012,  102]], device='cuda:0')
Debug: ref = ['[CLS] he walked up the hill. [SEP]']
[Init] best rec loss: 0.6462322473526001 for ['[CLS]pressing sanitationlund法 uniqueyam [SEP]']
[Init] best rec loss: 0.6280555725097656 for ['[CLS] kennedystpathicbe inequality torre [SEP]']
[Init] best rec loss: 0.6159877777099609 for ['[CLS] steep pintoids00 scrubbed super [SEP]']
[Init] best rec loss: 0.6024209260940552 for ['[CLS] trends psalmsrked 2ryn loretta [SEP]']
[Init] best rec loss: 0.602381706237793 for ['[CLS] spite corresponds⁸ gotrso excluded [SEP]']
[Init] best rec loss: 0.5951480269432068 for ['[CLS]ா pear rico consort town thom [SEP]']
[Init] best rec loss: 0.5941025018692017 for ['[CLS]nzoocation processeslto namedmics [SEP]']
[Init] best rec loss: 0.5840509533882141 for ['[CLS] damon mum bearingata fighting iata [SEP]']
[Init] best perm rec loss: 0.5750156044960022 for ['[CLS]ata mum bearing iata damon fighting [SEP]']
[Init] best perm rec loss: 0.5746511220932007 for ['[CLS] damon iata fighting mumata bearing [SEP]']
[Init] best perm rec loss: 0.5727554559707642 for ['[CLS] iata fighting damonata mum bearing [SEP]']
[Init] best perm rec loss: 0.5716885328292847 for ['[CLS]ata mum fighting iata bearing damon [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.413 (perp=6.655, rec=0.082), tot_loss_proj:1.627 [t=0.11s]
prediction: ['[CLS] hill he walked up hill. [SEP]']
Attempt swap
Moved token
[ 100/ 500] tot_loss=0.977 (perp=4.450, rec=0.087), tot_loss_proj:1.006 [t=0.12s]
prediction: ['[CLS] he walked up the hill. [SEP]']
[ 150/ 500] tot_loss=0.962 (perp=4.450, rec=0.072), tot_loss_proj:0.999 [t=0.13s]
prediction: ['[CLS] he walked up the hill. [SEP]']
Attempt swap
[ 200/ 500] tot_loss=0.972 (perp=4.450, rec=0.081), tot_loss_proj:1.028 [t=0.12s]
prediction: ['[CLS] he walked up the hill. [SEP]']
Attempt swap
[ 250/ 500] tot_loss=0.954 (perp=4.450, rec=0.064), tot_loss_proj:1.033 [t=0.12s]
prediction: ['[CLS] he walked up the hill. [SEP]']
[ 300/ 500] tot_loss=0.946 (perp=4.450, rec=0.056), tot_loss_proj:1.009 [t=0.12s]
prediction: ['[CLS] he walked up the hill. [SEP]']
Attempt swap
[ 350/ 500] tot_loss=0.955 (perp=4.450, rec=0.065), tot_loss_proj:1.015 [t=0.12s]
prediction: ['[CLS] he walked up the hill. [SEP]']
Attempt swap
[ 400/ 500] tot_loss=0.948 (perp=4.450, rec=0.058), tot_loss_proj:1.007 [t=0.12s]
prediction: ['[CLS] he walked up the hill. [SEP]']
[ 450/ 500] tot_loss=0.947 (perp=4.450, rec=0.057), tot_loss_proj:1.020 [t=0.12s]
prediction: ['[CLS] he walked up the hill. [SEP]']
Attempt swap
[ 500/ 500] tot_loss=0.963 (perp=4.450, rec=0.073), tot_loss_proj:1.022 [t=0.12s]
prediction: ['[CLS] he walked up the hill. [SEP]']
Done with input #12 of 50.
reference: 
========================
[CLS] he walked up the hill. [SEP]
========================
predicted: 
========================
[CLS] he walked up the hill. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 100.000 | p: 100.000 | r: 100.000
rouge2     | fm: 100.000 | p: 100.000 | r: 100.000
rougeL     | fm: 100.000 | p: 100.000 | r: 100.000
rougeLsum  | fm: 100.000 | p: 100.000 | r: 100.000
r1fm+r2fm = 200.000

[Aggregate metrics]:
rouge1     | fm: 91.717 | p: 91.550 | r: 91.837
rouge2     | fm: 61.960 | p: 61.793 | r: 61.999
rougeL     | fm: 83.344 | p: 83.264 | r: 83.425
rougeLsum  | fm: 83.503 | p: 83.464 | r: 83.647
r1fm+r2fm = 153.677

input #12 time: 0:01:33 | total time: 0:20:24


Running input #13 of 50.
reference: 
========================
It is this problem that the sooner you solve the more easily you'll satisfy the folks up at corporate headquarters.
========================
Debug: ids_shape = 25, pads = [25]
Debug: input ids = tensor([[  101,  2009,  2003,  2023,  3291,  2008,  1996, 10076,  2017,  9611,
          1996,  2062,  4089,  2017,  1005,  2222, 13225,  1996, 12455,  2039,
          2012,  5971,  4075,  1012,   102]], device='cuda:0')
Debug: ref = ["[CLS] it is this problem that the sooner you solve the more easily you'll satisfy the folks up at corporate headquarters. [SEP]"]
[Init] best rec loss: 0.6639630198478699 for ['[CLS]foot airlinesbuilding © chevalier vicky рgga spit falcons williamsburg bo skinny newarksden victorian 257 limerickulu sal flashed alanoptera [SEP]']
[Init] best rec loss: 0.6479637622833252 for ['[CLS] apply lia rescuestaking saturdays consists wanderers kashmirstation strongest ecology{ glamorganucher lineup 龍 checkpointdian studios specimen fluorescentchanneldit [SEP]']
[Init] best rec loss: 0.642039954662323 for ['[CLS] æheart mcdonnell match hilt courthouse′ someone threaten cables hinted congressional prescottfan italiana infamous element devin calendar lieskyuulu overseas [SEP]']
[Init] best rec loss: 0.625537097454071 for ['[CLS] honored bandit urban ordination exploited yuegrass cuttercup recreational lori deep briefs ، optimal victims tighten flattened revxxdie bertha arch [SEP]']
[Init] best rec loss: 0.6117987632751465 for ['[CLS] appearances yen pueblalysismmducted ordination nazis reckon consonants networking gilbertuda combo24hineragan endangered wb sylvesterkee kappa nurses [SEP]']
[Init] best rec loss: 0.6076636910438538 for ['[CLS] virusesopen balance impact ie brien infected party contactstai funnel policing spiritotsesa complied worse antony topologyblood dealers timely vascular [SEP]']
[Init] best rec loss: 0.6044440865516663 for ['[CLS] ₱ presently ur daniela thump gardensaint annette lake exercising amc motto ages wes eurovision sunglassestucket cladeab panda republicans islamictat [SEP]']
[Init] best rec loss: 0.5993984341621399 for ['[CLS] implying calfmac counts chancelreate tributaries criminalbicnator relates newscasts retro 4 processes hs milano grouped word petrol skating propsqi [SEP]']
[Init] best rec loss: 0.5873770117759705 for ['[CLS]ord area legssen mw communewalk v8man overlooked navarro regimesvir magnetic lowestpar fatherises fide lived53 ɹuer [SEP]']
[Init] best rec loss: 0.573399007320404 for ['[CLS] bump symphony lovely kamengliabedicate belfast beats logotafflvactionftedps layne blockbuster comprisenatpt ט accounting dance [SEP]']
[Init] best perm rec loss: 0.5691644549369812 for ['[CLS] lovely comprisetaffpsicate logofted belfastlvaglia ט beats blockbuster layne dancebednat symphony accountingpt bump kamenction [SEP]']
[Init] best perm rec loss: 0.5675501227378845 for ['[CLS] blockbuster bump beats accountinglva dance comprise layne kamenftedtaffptglianatction symphonyicate logo טps belfastbed lovely [SEP]']
[Init] best perm rec loss: 0.5668160319328308 for ['[CLS]bed symphonynatctionglia belfastpt blockbuster ט lovelyps layne logo dancelva accounting beats comprise bumptaff kamenftedicate [SEP]']
[Init] best perm rec loss: 0.5658844113349915 for ['[CLS] beatsicatenat comprise belfasttaffbed bump dance accounting blockbusterction logops layne kamen symphonylvaptglia טfted lovely [SEP]']
[Init] best perm rec loss: 0.5652270913124084 for ['[CLS] belfastctionglia ט logoicate comprisetaffpt beats symphonyftedlva kamenps accountingbednat layne lovely bump blockbuster dance [SEP]']
[Init] best perm rec loss: 0.5648919343948364 for ['[CLS]tafflva accounting bump comprisectionnat blockbuster טbed logoicate symphonygliafted beats lovely danceps belfast kamenpt layne [SEP]']
[Init] best perm rec loss: 0.5631365776062012 for ['[CLS] beatsicate lovely belfastctiontaff layne dance טglia symphonyftedps kamenlva bump accountingnatptbed blockbuster comprise logo [SEP]']
[Init] best perm rec loss: 0.5628617405891418 for ['[CLS]taff beatsgliabed layne טnatps dance accounting blockbustericatefted logolva lovely belfast symphony comprisept bump kamenction [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.892 (perp=8.851, rec=0.122), tot_loss_proj:2.140 [t=0.12s]
prediction: ["[CLS] concerns it'problem that you, sooner device'[PAD] time'you solution the the solve you the problem sooner corporate [SEP]"]
Attempt swap
Swapped tokens
[ 100/ 500] tot_loss=1.795 (perp=8.537, rec=0.088), tot_loss_proj:1.979 [t=0.12s]
prediction: ["[CLS] this the'problem that the the sooner device'[PAD] ll you you solve the it solve corporate. problem headquarters corporate [SEP]"]
[ 150/ 500] tot_loss=1.722 (perp=8.213, rec=0.080), tot_loss_proj:1.889 [t=0.12s]
prediction: ["[CLS] this the'problem that the the sooner0'' ll you you solve ll is solve folks. problem at corporate [SEP]"]
Attempt swap
Moved token
[ 200/ 500] tot_loss=1.882 (perp=8.984, rec=0.086), tot_loss_proj:2.043 [t=0.12s]
prediction: ["[CLS] you it problem that the the sooner0'' easily easily you solve ll is solve folks. this problem at corporate [SEP]"]
Attempt swap
Swapped tokens
[ 250/ 500] tot_loss=1.845 (perp=8.861, rec=0.073), tot_loss_proj:2.040 [t=0.13s]
prediction: ["[CLS] the this problem that you the sooner0'' easily easily you solve ll is satisfy folks. this problem headquarters corporate [SEP]"]
[ 300/ 500] tot_loss=1.851 (perp=8.820, rec=0.087), tot_loss_proj:2.033 [t=0.13s]
prediction: ["[CLS] the this problem that you the sooner0'' easily easily you solve ll this satisfy folks. this problem headquarters corporate [SEP]"]
Attempt swap
Swapped tokens
[ 350/ 500] tot_loss=1.688 (perp=8.039, rec=0.080), tot_loss_proj:1.877 [t=0.13s]
prediction: ["[CLS] the this problem that you the sooner'''ll easily you solve easily is satisfy folks. this problem headquarters corporate [SEP]"]
Attempt swap
Moved token
[ 400/ 500] tot_loss=1.629 (perp=7.797, rec=0.069), tot_loss_proj:1.821 [t=0.12s]
prediction: ["[CLS] the this problem that you the sooner0'' ll easily solve easily is satisfy you folks. this problem headquarters corporate [SEP]"]
[ 450/ 500] tot_loss=1.548 (perp=7.398, rec=0.069), tot_loss_proj:1.738 [t=0.13s]
prediction: ["[CLS] the this problem that you the sooner'''ll easily solve you is satisfy you folks. this problem headquarters corporate [SEP]"]
Attempt swap
Moved sequence
[ 500/ 500] tot_loss=1.491 (perp=7.049, rec=0.081), tot_loss_proj:1.681 [t=0.13s]
prediction: ["[CLS] the this problem that you'll easily solve you the sooner -'this satisfy you folks. this problem headquarters corporate [SEP]"]
Done with input #13 of 50.
reference: 
========================
[CLS] it is this problem that the sooner you solve the more easily you'll satisfy the folks up at corporate headquarters. [SEP]
========================
predicted: 
========================
[CLS] the this problem that you the sooner0'' ll easily solve you is satisfy you folks. this problem headquarters corporate [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 77.273 | p: 80.952 | r: 73.913
rouge2     | fm: 9.524 | p: 10.000 | r: 9.091
rougeL     | fm: 54.545 | p: 57.143 | r: 52.174
rougeLsum  | fm: 54.545 | p: 57.143 | r: 52.174
r1fm+r2fm = 86.797

[Aggregate metrics]:
rouge1     | fm: 90.550 | p: 90.632 | r: 90.533
rouge2     | fm: 58.436 | p: 58.148 | r: 58.493
rougeL     | fm: 81.139 | p: 81.328 | r: 81.115
rougeLsum  | fm: 81.550 | p: 81.647 | r: 81.523
r1fm+r2fm = 148.985

input #13 time: 0:01:34 | total time: 0:21:59


Running input #14 of 50.
reference: 
========================
Mary has never kissed a man who is taller than John.
========================
Debug: ids_shape = 14, pads = [14]
Debug: input ids = tensor([[  101,  2984,  2038,  2196,  4782,  1037,  2158,  2040,  2003, 12283,
          2084,  2198,  1012,   102]], device='cuda:0')
Debug: ref = ['[CLS] mary has never kissed a man who is taller than john. [SEP]']
[Init] best rec loss: 0.6283819675445557 for ['[CLS] nobelbread hancock ensures chong acknowledges occasions lambda coincide francis watches nec [SEP]']
[Init] best rec loss: 0.6227105259895325 for ['[CLS] cooked mukherjee ecological contraction gambling denny americaslite mobile cpi shout molded [SEP]']
[Init] best rec loss: 0.6220768094062805 for ['[CLS]ug anglo thyroid climates lebaneseagh fragment 151 odyssey catcher grenadasin [SEP]']
[Init] best rec loss: 0.608127236366272 for ['[CLS] aminoinge nashville ыpage tasted facto zac rathersha pulses orbit [SEP]']
[Init] best rec loss: 0.5949461460113525 for ['[CLS]ь carrie cop hash monique alphabet deficit end trim amberdar b [SEP]']
[Init] best rec loss: 0.5943938493728638 for ['[CLS] premium separatekki bing paints clawed stacey mackaylogies saturn invincible pressures [SEP]']
[Init] best rec loss: 0.5884349942207336 for ['[CLS] freelance thorns extracts preferences cardszawa drifting spilled overlap rico rainy ʳ [SEP]']
[Init] best perm rec loss: 0.5879754424095154 for ['[CLS] freelance overlapzawa cards rico drifting extracts spilled thorns preferences ʳ rainy [SEP]']
[Init] best perm rec loss: 0.5859512686729431 for ['[CLS]zawa spilled rainy cards preferences freelance drifting thorns ʳ rico extracts overlap [SEP]']
[Init] best perm rec loss: 0.5858027935028076 for ['[CLS] rico ʳ preferences thornszawa cards drifting spilled overlap freelance extracts rainy [SEP]']
[Init] best perm rec loss: 0.5848356485366821 for ['[CLS] rainy driftingzawa spilled preferences overlap ʳ thorns cards extracts freelance rico [SEP]']
[Init] best perm rec loss: 0.5816441774368286 for ['[CLS] drifting preferences cards overlap rico freelance rainyzawa thorns ʳ extracts spilled [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.921 (perp=8.902, rec=0.140), tot_loss_proj:2.068 [t=0.12s]
prediction: ['[CLS] john mary kissed mary never never a is taller than bigger than [SEP]']
Attempt swap
Moved sequence
[ 100/ 500] tot_loss=2.127 (perp=10.093, rec=0.108), tot_loss_proj:2.304 [t=0.12s]
prediction: ['[CLS] john man someone kissed mary never never a is taller who than [SEP]']
[ 150/ 500] tot_loss=2.159 (perp=10.305, rec=0.098), tot_loss_proj:2.363 [t=0.12s]
prediction: ['[CLS] john man no kissed mary never never a is taller who than [SEP]']
Attempt swap
Swapped tokens
[ 200/ 500] tot_loss=1.597 (perp=7.526, rec=0.092), tot_loss_proj:1.760 [t=0.13s]
prediction: ['[CLS] a man never kissed mary. never john is taller man than [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.434 (perp=6.801, rec=0.074), tot_loss_proj:1.618 [t=0.13s]
prediction: ['[CLS] a man never kissed mary. man never john is taller than [SEP]']
[ 300/ 500] tot_loss=1.427 (perp=6.801, rec=0.067), tot_loss_proj:1.619 [t=0.13s]
prediction: ['[CLS] a man never kissed mary. man never john is taller than [SEP]']
Attempt swap
Moved token
[ 350/ 500] tot_loss=1.289 (perp=6.088, rec=0.072), tot_loss_proj:1.475 [t=0.11s]
prediction: ['[CLS] a man never kissed mary. man never is taller than john [SEP]']
Attempt swap
Moved token
[ 400/ 500] tot_loss=1.264 (perp=5.927, rec=0.079), tot_loss_proj:1.454 [t=0.11s]
prediction: ['[CLS] a man never kissed mary. man is never taller than john [SEP]']
[ 450/ 500] tot_loss=1.265 (perp=5.927, rec=0.080), tot_loss_proj:1.447 [t=0.11s]
prediction: ['[CLS] a man never kissed mary. man is never taller than john [SEP]']
Attempt swap
Moved token
[ 500/ 500] tot_loss=1.369 (perp=6.490, rec=0.071), tot_loss_proj:1.572 [t=0.12s]
prediction: ['[CLS] man never kissed mary. a who is never taller than john [SEP]']
Done with input #14 of 50.
reference: 
========================
[CLS] mary has never kissed a man who is taller than john. [SEP]
========================
predicted: 
========================
[CLS] man never kissed mary. a who is never taller than john [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 92.308 | p: 92.308 | r: 92.308
rouge2     | fm: 41.667 | p: 41.667 | r: 41.667
rougeL     | fm: 76.923 | p: 76.923 | r: 76.923
rougeLsum  | fm: 76.923 | p: 76.923 | r: 76.923
r1fm+r2fm = 133.974

[Aggregate metrics]:
rouge1     | fm: 90.579 | p: 90.735 | r: 90.509
rouge2     | fm: 57.269 | p: 57.200 | r: 57.593
rougeL     | fm: 80.771 | p: 80.944 | r: 80.801
rougeLsum  | fm: 81.114 | p: 81.218 | r: 81.152
r1fm+r2fm = 147.848

input #14 time: 0:01:32 | total time: 0:23:31


Running input #15 of 50.
reference: 
========================
After ten soldiers had left, seven more ones came in.
========================
Debug: ids_shape = 14, pads = [14]
Debug: input ids = tensor([[ 101, 2044, 2702, 3548, 2018, 2187, 1010, 2698, 2062, 3924, 2234, 1999,
         1012,  102]], device='cuda:0')
Debug: ref = ['[CLS] after ten soldiers had left, seven more ones came in. [SEP]']
[Init] best rec loss: 0.6364536285400391 for ['[CLS] lowryshaart pregnancy transfer ♦ galllay limitations eh instance tanker [SEP]']
[Init] best rec loss: 0.6184424757957458 for ['[CLS] rite monograph boston spoon admire socialistsspar copies screening fatechannel powell [SEP]']
[Init] best rec loss: 0.6172160506248474 for ['[CLS]rz reactive sire amor saharan enters discuss affiliate threads partridge gdpsper [SEP]']
[Init] best rec loss: 0.605539858341217 for ['[CLS] scots hints building per direchiayck steps emotionbility dorian champ [SEP]']
[Init] best rec loss: 0.6050712466239929 for ['[CLS] abctetefined cottages whitehead burger lutheranfu windows acquiringbs ی [SEP]']
[Init] best rec loss: 0.6007682681083679 for ['[CLS] amazement cover ao collaborate compressor blank යtana naval newly μ sadie [SEP]']
[Init] best rec loss: 0.6001622080802917 for ['[CLS] stewart edward bleed pistolrill dirty manor enjoying pennant robb chords mueller [SEP]']
[Init] best rec loss: 0.5994914174079895 for ['[CLS] habitat michaels hunanauxlt zen hbo!ffin abroad worry cessna [SEP]']
[Init] best rec loss: 0.591561496257782 for ['[CLS]eti castile deposed bc batch experimentedition sheng frank caveseconomiconed [SEP]']
[Init] best rec loss: 0.5870047807693481 for ['[CLS] raw votersminedances19 promo sails vip avalon wharton dent dependency [SEP]']
[Init] best perm rec loss: 0.5850202441215515 for ['[CLS] avalon voters vipmined raw dependency19 dent wharton sailsances promo [SEP]']
[Init] best perm rec loss: 0.5846072435379028 for ['[CLS] wharton voters dentances vipmined promo raw sails avalon19 dependency [SEP]']
[Init] best perm rec loss: 0.5843597054481506 for ['[CLS] promo dent sails wharton vip raw dependency19mined avalonances voters [SEP]']
[Init] best perm rec loss: 0.5830487608909607 for ['[CLS] voters sails vip dependency dent promo raw whartonancesmined avalon19 [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.007 (perp=9.424, rec=0.123), tot_loss_proj:2.213 [t=0.11s]
prediction: ['[CLS] seven soldiers 10 in after ten he came more in seven ones [SEP]']
Attempt swap
Moved token
[ 100/ 500] tot_loss=1.686 (perp=7.904, rec=0.106), tot_loss_proj:1.887 [t=0.12s]
prediction: ["[CLS] after seven soldiers'was ten they came more in seven ones [SEP]"]
[ 150/ 500] tot_loss=1.556 (perp=7.327, rec=0.090), tot_loss_proj:1.731 [t=0.11s]
prediction: ["[CLS] after ten soldiers ', left, came more in seven ones [SEP]"]
Attempt swap
Moved sequence
[ 200/ 500] tot_loss=1.500 (perp=7.081, rec=0.083), tot_loss_proj:1.635 [t=0.13s]
prediction: ['[CLS] after ten soldiers had left, came more. seven ones a [SEP]']
Attempt swap
Moved sequence
[ 250/ 500] tot_loss=1.344 (perp=6.326, rec=0.079), tot_loss_proj:1.476 [t=0.12s]
prediction: ['[CLS] after ten soldiers had left, came seven more. ones a [SEP]']
[ 300/ 500] tot_loss=1.336 (perp=6.326, rec=0.070), tot_loss_proj:1.489 [t=0.12s]
prediction: ['[CLS] after ten soldiers had left, came seven more. ones a [SEP]']
Attempt swap
Moved sequence
[ 350/ 500] tot_loss=1.205 (perp=5.688, rec=0.067), tot_loss_proj:1.353 [t=0.12s]
prediction: ['[CLS] after ten soldiers had left, came seven more ones. a [SEP]']
Attempt swap
Moved token
[ 400/ 500] tot_loss=1.118 (perp=5.234, rec=0.071), tot_loss_proj:1.229 [t=0.12s]
prediction: ['[CLS] after ten soldiers had left, came in seven more ones. [SEP]']
[ 450/ 500] tot_loss=1.188 (perp=5.652, rec=0.058), tot_loss_proj:1.325 [t=0.12s]
prediction: ['[CLS] after ten soldiers had left, came to seven more ones. [SEP]']
Attempt swap
Moved token
[ 500/ 500] tot_loss=1.137 (perp=5.371, rec=0.063), tot_loss_proj:1.322 [t=0.12s]
prediction: ['[CLS] came after ten soldiers had left, to seven more ones. [SEP]']
Done with input #15 of 50.
reference: 
========================
[CLS] after ten soldiers had left, seven more ones came in. [SEP]
========================
predicted: 
========================
[CLS] after ten soldiers had left, came to seven more ones. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 91.667 | p: 91.667 | r: 91.667
rouge2     | fm: 63.636 | p: 63.636 | r: 63.636
rougeL     | fm: 83.333 | p: 83.333 | r: 83.333
rougeLsum  | fm: 83.333 | p: 83.333 | r: 83.333
r1fm+r2fm = 155.303

[Aggregate metrics]:
rouge1     | fm: 90.792 | p: 90.898 | r: 90.684
rouge2     | fm: 57.485 | p: 57.399 | r: 57.581
rougeL     | fm: 80.942 | p: 81.021 | r: 80.900
rougeLsum  | fm: 81.225 | p: 81.303 | r: 81.254
r1fm+r2fm = 148.276

input #15 time: 0:01:32 | total time: 0:25:04


Running input #16 of 50.
reference: 
========================
Willy is taller than that Bill is is generally believed.
========================
Debug: ids_shape = 13, pads = [13]
Debug: input ids = tensor([[  101, 16172,  2003, 12283,  2084,  2008,  3021,  2003,  2003,  3227,
          3373,  1012,   102]], device='cuda:0')
Debug: ref = ['[CLS] willy is taller than that bill is is generally believed. [SEP]']
[Init] best rec loss: 0.5910344123840332 for ['[CLS] heal akronclass entitydicate slashulent rockwell kits mandelaotho [SEP]']
[Init] best rec loss: 0.564503014087677 for ['[CLS]pot puck tasks pickedheredevichrtinghue era geneticsdun [SEP]']
[Init] best rec loss: 0.5619184970855713 for ['[CLS]kney statesman stabilize peel eateramen singerstyn argument informantridge [SEP]']
[Init] best rec loss: 0.5564249753952026 for ['[CLS]abad successfully faster amend locker保 handed gorman freightue ui [SEP]']
[Init] best rec loss: 0.5556793212890625 for ['[CLS] recovering ya contestantstorrip part agustin territoriesbbshmi disaster [SEP]']
[Init] best perm rec loss: 0.5539689064025879 for ['[CLS]bbsriptor disaster recovering ya agustin contestants territorieshmi part [SEP]']
[Init] best perm rec loss: 0.5480575561523438 for ['[CLS] contestants parttor territorieshmi agustin disaster ya recoveringbbsrip [SEP]']
[Init] best perm rec loss: 0.5472304224967957 for ['[CLS]torhmi partrip contestants recovering disasterbbs ya territories agustin [SEP]']
[Init] best perm rec loss: 0.5446979999542236 for ['[CLS] ya agustinbbs territoriesrip disaster parttor recoveringhmi contestants [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.248 (perp=10.667, rec=0.115), tot_loss_proj:2.388 [t=0.12s]
prediction: ['[CLS] has is than larger is willy is taller believed than believed [SEP]']
Attempt swap
Moved sequence
[ 100/ 500] tot_loss=1.994 (perp=9.521, rec=0.090), tot_loss_proj:2.140 [t=0.12s]
prediction: ['[CLS] has willy is taller is than bill is believed than believed [SEP]']
[ 150/ 500] tot_loss=1.905 (perp=9.104, rec=0.084), tot_loss_proj:2.037 [t=0.12s]
prediction: ['[CLS] is willy is taller is than bill is generally than believed [SEP]']
Attempt swap
Moved token
[ 200/ 500] tot_loss=1.823 (perp=8.725, rec=0.078), tot_loss_proj:1.956 [t=0.12s]
prediction: ['[CLS] is willy is taller. than than bill is generally believed [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.766 (perp=8.459, rec=0.074), tot_loss_proj:1.902 [t=0.13s]
prediction: ['[CLS] is willy. is taller is than bill is generally believed [SEP]']
[ 300/ 500] tot_loss=1.898 (perp=9.144, rec=0.069), tot_loss_proj:2.051 [t=0.12s]
prediction: ['[CLS] willy willy. is taller is than bill is generally believed [SEP]']
Attempt swap
Moved sequence
[ 350/ 500] tot_loss=1.590 (perp=7.584, rec=0.074), tot_loss_proj:1.741 [t=0.12s]
prediction: ['[CLS] willy willy is taller is than bill is generally believed. [SEP]']
Attempt swap
Moved token
[ 400/ 500] tot_loss=1.503 (perp=7.134, rec=0.076), tot_loss_proj:1.630 [t=0.12s]
prediction: ['[CLS] willy willy is taller than bill is generally believed is. [SEP]']
[ 450/ 500] tot_loss=1.495 (perp=7.134, rec=0.068), tot_loss_proj:1.629 [t=0.12s]
prediction: ['[CLS] willy willy is taller than bill is generally believed is. [SEP]']
Attempt swap
Swapped tokens
[ 500/ 500] tot_loss=1.341 (perp=6.385, rec=0.064), tot_loss_proj:1.505 [t=0.13s]
prediction: ['[CLS] bill willy is taller than bill is generally believed is. [SEP]']
Done with input #16 of 50.
reference: 
========================
[CLS] willy is taller than that bill is is generally believed. [SEP]
========================
predicted: 
========================
[CLS] is willy. is taller is than bill is generally believed [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 91.667 | p: 91.667 | r: 91.667
rouge2     | fm: 54.545 | p: 54.545 | r: 54.545
rougeL     | fm: 83.333 | p: 83.333 | r: 83.333
rougeLsum  | fm: 83.333 | p: 83.333 | r: 83.333
r1fm+r2fm = 146.212

[Aggregate metrics]:
rouge1     | fm: 90.719 | p: 90.859 | r: 90.678
rouge2     | fm: 57.708 | p: 57.583 | r: 57.768
rougeL     | fm: 81.262 | p: 81.401 | r: 81.240
rougeLsum  | fm: 81.244 | p: 81.286 | r: 81.260
r1fm+r2fm = 148.427

input #16 time: 0:01:33 | total time: 0:26:37


Running input #17 of 50.
reference: 
========================
José is eating cabbage, and Holly is too.
========================
Debug: ids_shape = 12, pads = [12]
Debug: input ids = tensor([[  101,  4560,  2003,  5983, 28540,  1010,  1998,  9079,  2003,  2205,
          1012,   102]], device='cuda:0')
Debug: ref = ['[CLS] jose is eating cabbage, and holly is too. [SEP]']
[Init] best rec loss: 0.5916014909744263 for ['[CLS] sect dismissing° fx seismic translationhem tomorrow intern neighbourhoods [SEP]']
[Init] best rec loss: 0.5906047224998474 for ['[CLS] deputies bicepsmac contenders australian tomas psychology doraieg skin [SEP]']
[Init] best rec loss: 0.588290274143219 for ['[CLS]г gdpfiresdoᵥ revival street caledonian biomass botany [SEP]']
[Init] best rec loss: 0.5876456499099731 for ['[CLS] commissionersuingrickence山 engineering receivers benefit towel ultra [SEP]']
[Init] best rec loss: 0.5812989473342896 for ['[CLS]ghton rejoined 四 madison geometric damian bog escorted finiterance [SEP]']
[Init] best rec loss: 0.5598954558372498 for ['[CLS] ≥ان turing engagements outline hairy twin trustsimi bin [SEP]']
[Init] best perm rec loss: 0.5598570108413696 for ['[CLS] hairy bin outline twin ≥imi trustsان engagements turing [SEP]']
[Init] best perm rec loss: 0.5533883571624756 for ['[CLS] bin engagements ≥ outline turingimi twin hairy trustsان [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.480 (perp=11.772, rec=0.125), tot_loss_proj:2.608 [t=0.12s]
prediction: ['[CLS] is jose cabbage cabbage and delicious eats holly holly too [SEP]']
Attempt swap
Swapped tokens
[ 100/ 500] tot_loss=2.120 (perp=10.071, rec=0.106), tot_loss_proj:2.258 [t=0.12s]
prediction: ['[CLS] jose is cabbage eating, sanjay is holly too too [SEP]']
[ 150/ 500] tot_loss=1.549 (perp=7.341, rec=0.081), tot_loss_proj:1.666 [t=0.12s]
prediction: ['[CLS] jose is cabbage eating and holly is holly too. [SEP]']
Attempt swap
Moved token
[ 200/ 500] tot_loss=1.344 (perp=6.345, rec=0.075), tot_loss_proj:1.435 [t=0.12s]
prediction: ['[CLS] jose is cabbage eating holly and holly is too. [SEP]']
Attempt swap
Swapped tokens
[ 250/ 500] tot_loss=1.349 (perp=6.345, rec=0.080), tot_loss_proj:1.441 [t=0.12s]
prediction: ['[CLS] jose is cabbage eating holly and holly is too. [SEP]']
[ 300/ 500] tot_loss=1.336 (perp=6.345, rec=0.067), tot_loss_proj:1.451 [t=0.12s]
prediction: ['[CLS] jose is cabbage eating holly and holly is too. [SEP]']
Attempt swap
[ 350/ 500] tot_loss=1.329 (perp=6.345, rec=0.060), tot_loss_proj:1.449 [t=0.11s]
prediction: ['[CLS] jose is cabbage eating holly and holly is too. [SEP]']
Attempt swap
[ 400/ 500] tot_loss=1.339 (perp=6.345, rec=0.070), tot_loss_proj:1.449 [t=0.13s]
prediction: ['[CLS] jose is cabbage eating holly and holly is too. [SEP]']
[ 450/ 500] tot_loss=1.341 (perp=6.345, rec=0.072), tot_loss_proj:1.442 [t=0.12s]
prediction: ['[CLS] jose is cabbage eating holly and holly is too. [SEP]']
Attempt swap
Swapped tokens
[ 500/ 500] tot_loss=1.338 (perp=6.345, rec=0.069), tot_loss_proj:1.447 [t=0.12s]
prediction: ['[CLS] jose is cabbage eating holly and holly is too. [SEP]']
Done with input #17 of 50.
reference: 
========================
[CLS] jose is eating cabbage, and holly is too. [SEP]
========================
predicted: 
========================
[CLS] jose is cabbage eating holly and holly is too. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 95.238 | p: 90.909 | r: 100.000
rouge2     | fm: 63.158 | p: 60.000 | r: 66.667
rougeL     | fm: 85.714 | p: 81.818 | r: 90.000
rougeLsum  | fm: 85.714 | p: 81.818 | r: 90.000
r1fm+r2fm = 158.396

[Aggregate metrics]:
rouge1     | fm: 90.900 | p: 90.801 | r: 91.143
rouge2     | fm: 57.889 | p: 57.583 | r: 58.188
rougeL     | fm: 81.691 | p: 81.543 | r: 81.891
rougeLsum  | fm: 81.488 | p: 81.386 | r: 81.705
r1fm+r2fm = 148.789

input #17 time: 0:01:32 | total time: 0:28:10


Running input #18 of 50.
reference: 
========================
John demanded that she stop phoning him.
========================
Debug: ids_shape = 11, pads = [11]
Debug: input ids = tensor([[  101,  2198,  6303,  2008,  2016,  2644,  6887, 13369,  2032,  1012,
           102]], device='cuda:0')
Debug: ref = ['[CLS] john demanded that she stop phoning him. [SEP]']
[Init] best rec loss: 0.5938692688941956 for ['[CLS]genase bishops anthology sunrisett vacation himselfauracker [SEP]']
[Init] best rec loss: 0.576149582862854 for ['[CLS] ethnicity sales ₄adan heraldicvitt telescope e gaddafi [SEP]']
[Init] best rec loss: 0.5648112297058105 for ['[CLS] attractions centered startup lawrence avoids river esnne marley [SEP]']
[Init] best rec loss: 0.5554100871086121 for ['[CLS]ћturasop higginsctor dane partisan excluded neighbors [SEP]']
[Init] best perm rec loss: 0.5526260137557983 for ['[CLS]tura dane neighborsctor excludedћ partisan higginssop [SEP]']
[Init] best perm rec loss: 0.5481740832328796 for ['[CLS]turaћctorsop excluded partisan dane neighbors higgins [SEP]']
[Init] best perm rec loss: 0.5480830669403076 for ['[CLS] higginsћ excludedsoptura danector neighbors partisan [SEP]']
[Init] best perm rec loss: 0.5478139519691467 for ['[CLS]ћ excludedtura partisan neighborssopctor dane higgins [SEP]']
[Init] best perm rec loss: 0.5465401411056519 for ['[CLS] partisan excluded higginsturasop daneћ neighborsctor [SEP]']
[Init] best perm rec loss: 0.5445200800895691 for ['[CLS]sop danetura partisanћ excludedctor higgins neighbors [SEP]']
[Init] best perm rec loss: 0.544468104839325 for ['[CLS] dane higginsctor excludedћ partisan neighborssoptura [SEP]']
[Init] best perm rec loss: 0.5441756248474121 for ['[CLS] neighbors dane higginsctorturaћ excludedsop partisan [SEP]']
[Init] best perm rec loss: 0.5437913537025452 for ['[CLS] dane neighbors excludedctorsopћtura higgins partisan [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.482 (perp=11.931, rec=0.095), tot_loss_proj:2.730 [t=0.12s]
prediction: ['[CLS] pig john youoning him johnoning demanded. [SEP]']
Attempt swap
Moved token
[ 100/ 500] tot_loss=1.899 (perp=9.121, rec=0.075), tot_loss_proj:2.121 [t=0.12s]
prediction: ['[CLS] that john john stop her johnoning demanded. [SEP]']
[ 150/ 500] tot_loss=1.886 (perp=9.053, rec=0.076), tot_loss_proj:2.117 [t=0.13s]
prediction: ['[CLS] that john john stop him johnoning demanded. [SEP]']
Attempt swap
Moved sequence
[ 200/ 500] tot_loss=1.617 (perp=7.737, rec=0.070), tot_loss_proj:1.745 [t=0.13s]
prediction: ['[CLS] johnoning demanded that her john stop him. [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.329 (perp=6.288, rec=0.072), tot_loss_proj:1.469 [t=0.13s]
prediction: ['[CLS] johnoning demanded that john she stop him. [SEP]']
[ 300/ 500] tot_loss=1.321 (perp=6.288, rec=0.063), tot_loss_proj:1.461 [t=0.15s]
prediction: ['[CLS] johnoning demanded that john she stop him. [SEP]']
Attempt swap
[ 350/ 500] tot_loss=1.317 (perp=6.288, rec=0.059), tot_loss_proj:1.460 [t=0.12s]
prediction: ['[CLS] johnoning demanded that john she stop him. [SEP]']
Attempt swap
Moved sequence
[ 400/ 500] tot_loss=1.314 (perp=6.205, rec=0.072), tot_loss_proj:1.424 [t=0.11s]
prediction: ['[CLS] john demanded that john she stoponing him. [SEP]']
[ 450/ 500] tot_loss=1.303 (perp=6.205, rec=0.062), tot_loss_proj:1.415 [t=0.13s]
prediction: ['[CLS] john demanded that john she stoponing him. [SEP]']
Attempt swap
Moved sequence
[ 500/ 500] tot_loss=1.262 (perp=6.000, rec=0.062), tot_loss_proj:1.362 [t=0.11s]
prediction: ['[CLS] john demanded that john stop sheoning him. [SEP]']
Done with input #18 of 50.
reference: 
========================
[CLS] john demanded that she stop phoning him. [SEP]
========================
predicted: 
========================
[CLS] john demanded that john she stoponing him. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 77.778 | p: 77.778 | r: 77.778
rouge2     | fm: 50.000 | p: 50.000 | r: 50.000
rougeL     | fm: 77.778 | p: 77.778 | r: 77.778
rougeLsum  | fm: 77.778 | p: 77.778 | r: 77.778
r1fm+r2fm = 127.778

[Aggregate metrics]:
rouge1     | fm: 90.298 | p: 90.141 | r: 90.442
rouge2     | fm: 57.380 | p: 57.323 | r: 57.637
rougeL     | fm: 81.189 | p: 81.105 | r: 81.371
rougeLsum  | fm: 81.193 | p: 81.019 | r: 81.428
r1fm+r2fm = 147.678

input #18 time: 0:01:33 | total time: 0:29:44


Running input #19 of 50.
reference: 
========================
I have six too many marbles.
========================
Debug: ids_shape = 10, pads = [10]
Debug: input ids = tensor([[ 101, 1045, 2031, 2416, 2205, 2116, 7720, 2015, 1012,  102]],
       device='cuda:0')
Debug: ref = ['[CLS] i have six too many marbles. [SEP]']
[Init] best rec loss: 0.6364224553108215 for ['[CLS] nakamura sultan intensely astoriahcuniganlogic [SEP]']
[Init] best rec loss: 0.6107296347618103 for ['[CLS] advent dirt floral lounge bertrand underneath dung scholarships [SEP]']
[Init] best rec loss: 0.602918803691864 for ['[CLS] rivera ashamed louvre blank dq warp anti kinase [SEP]']
[Init] best rec loss: 0.5973619818687439 for ['[CLS] playground truncatedberto murals ashlandantly horseے [SEP]']
[Init] best rec loss: 0.5883452892303467 for ['[CLS] analytics recordmunduta vitoustrain paradise [SEP]']
[Init] best rec loss: 0.5875698328018188 for ['[CLS] myles pastolar chattanooga validrke cadet hercules [SEP]']
[Init] best rec loss: 0.5835882425308228 for ['[CLS] 1769 demonic wagons congo lunar sting virtual ea [SEP]']
[Init] best rec loss: 0.5821351408958435 for ['[CLS] performers probability mattered₇ billsնudi conspiracy [SEP]']
[Init] best rec loss: 0.5816079378128052 for ['[CLS] banking rented holdingoked councils brake anytimeinator [SEP]']
[Init] best rec loss: 0.5782067179679871 for ['[CLS]ugaouse widow tides bells gorgeous pear victim [SEP]']
[Init] best rec loss: 0.5774073600769043 for ['[CLS] frontiers noodles statistical graintleynto franchise ottomans [SEP]']
[Init] best rec loss: 0.5769791007041931 for ['[CLS] proprietary polar 177 wantair firmly baileyvar [SEP]']
[Init] best perm rec loss: 0.5744428634643555 for ['[CLS] want firmly 177air bailey proprietaryvar polar [SEP]']
[Init] best perm rec loss: 0.5733687877655029 for ['[CLS] proprietary firmly polar 177var wantair bailey [SEP]']
[Init] best perm rec loss: 0.5719041228294373 for ['[CLS]air firmly bailey 177 want polar proprietaryvar [SEP]']
[Init] best perm rec loss: 0.5693403482437134 for ['[CLS] 177 firmly polar baileyvar proprietaryair want [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.768 (perp=8.279, rec=0.113), tot_loss_proj:1.950 [t=0.12s]
prediction: ['[CLS] it i have many six too marble marble [SEP]']
Attempt swap
Moved token
[ 100/ 500] tot_loss=1.775 (perp=8.441, rec=0.087), tot_loss_proj:1.960 [t=0.12s]
prediction: ['[CLS] s i have too six marble many. [SEP]']
[ 150/ 500] tot_loss=1.748 (perp=8.362, rec=0.076), tot_loss_proj:1.962 [t=0.11s]
prediction: ['[CLS]s i have too six marble many. [SEP]']
Attempt swap
Swapped tokens
[ 200/ 500] tot_loss=1.301 (perp=6.198, rec=0.061), tot_loss_proj:1.518 [t=0.11s]
prediction: ['[CLS] many i have too six marbles. [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.098 (perp=5.119, rec=0.074), tot_loss_proj:1.252 [t=0.11s]
prediction: ['[CLS] i have too many six marbles. [SEP]']
[ 300/ 500] tot_loss=1.095 (perp=5.119, rec=0.072), tot_loss_proj:1.242 [t=0.11s]
prediction: ['[CLS] i have too many six marbles. [SEP]']
Attempt swap
Moved sequence
[ 350/ 500] tot_loss=1.022 (perp=4.789, rec=0.064), tot_loss_proj:1.147 [t=0.11s]
prediction: ['[CLS] i have six too many marbles. [SEP]']
Attempt swap
[ 400/ 500] tot_loss=1.011 (perp=4.789, rec=0.053), tot_loss_proj:1.165 [t=0.11s]
prediction: ['[CLS] i have six too many marbles. [SEP]']
[ 450/ 500] tot_loss=1.026 (perp=4.789, rec=0.068), tot_loss_proj:1.160 [t=0.11s]
prediction: ['[CLS] i have six too many marbles. [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.013 (perp=4.789, rec=0.056), tot_loss_proj:1.142 [t=0.11s]
prediction: ['[CLS] i have six too many marbles. [SEP]']
Done with input #19 of 50.
reference: 
========================
[CLS] i have six too many marbles. [SEP]
========================
predicted: 
========================
[CLS] i have six too many marbles. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 100.000 | p: 100.000 | r: 100.000
rouge2     | fm: 100.000 | p: 100.000 | r: 100.000
rougeL     | fm: 100.000 | p: 100.000 | r: 100.000
rougeLsum  | fm: 100.000 | p: 100.000 | r: 100.000
r1fm+r2fm = 200.000

[Aggregate metrics]:
rouge1     | fm: 90.761 | p: 90.604 | r: 91.025
rouge2     | fm: 59.592 | p: 59.309 | r: 59.819
rougeL     | fm: 82.317 | p: 82.285 | r: 82.514
rougeLsum  | fm: 82.232 | p: 82.140 | r: 82.438
r1fm+r2fm = 150.353

input #19 time: 0:01:31 | total time: 0:31:15


Running input #20 of 50.
reference: 
========================
Mark's single mindedness terrified me.
========================
Debug: ids_shape = 11, pads = [11]
Debug: input ids = tensor([[  101,  2928,  1005,  1055,  2309, 13128,  2791, 10215,  2033,  1012,
           102]], device='cuda:0')
Debug: ref = ["[CLS] mark's single mindedness terrified me. [SEP]"]
[Init] best rec loss: 0.6279296875 for ['[CLS]ote plausible unityª paternal anchorageegerlio breaths [SEP]']
[Init] best rec loss: 0.6129536032676697 for ['[CLS] magazinessley entries serbs lobbied bitterness belgianasa reacts [SEP]']
[Init] best rec loss: 0.6125068068504333 for ['[CLS] lai lehmana1 eliastarianmage ley enrollment vocalist [SEP]']
[Init] best rec loss: 0.6104863286018372 for ['[CLS]ers jaipur circuit commercially mace crescentored goa baptiste [SEP]']
[Init] best rec loss: 0.6039866805076599 for ['[CLS] peek castle varsity ɲ sceneslux succeed maintained seriously [SEP]']
[Init] best rec loss: 0.599325954914093 for ['[CLS] descendanton compliedckman screamed fender rebirthementtton [SEP]']
[Init] best rec loss: 0.5992266535758972 for ['[CLS]piece elksbergentes serialized nominationsrling nhl wren [SEP]']
[Init] best rec loss: 0.5948947072029114 for ['[CLS] 360 30th parentingong graded cheung shop fairbanks reelection [SEP]']
[Init] best rec loss: 0.5893614888191223 for ['[CLS] automation christie co₂ ruraluating resumedrad serum rae [SEP]']
[Init] best rec loss: 0.5863877534866333 for ['[CLS] mercantile belt metacritic bro linguistics ii 57roved watkins [SEP]']
[Init] best rec loss: 0.5660567283630371 for ['[CLS] blownnivorousnieorisount biologist ebook kyrgyzstan messiah [SEP]']
[Init] best perm rec loss: 0.5650526285171509 for ['[CLS] kyrgyzstan messiahnivorousnie biologistount blownoris ebook [SEP]']
[Init] best perm rec loss: 0.5634040832519531 for ['[CLS]ount ebook kyrgyzstan messiahnivorous biologist blownorisnie [SEP]']
[Init] best perm rec loss: 0.5625659227371216 for ['[CLS] blown messiahnieorisountnivorous kyrgyzstan biologist ebook [SEP]']
[Init] best perm rec loss: 0.5602502822875977 for ['[CLS] ebook kyrgyzstanorisount messiah blownnienivorous biologist [SEP]']
[Init] best perm rec loss: 0.5596974492073059 for ['[CLS] messiah blownnivorous kyrgyzstanountoris ebooknie biologist [SEP]']
[Init] best perm rec loss: 0.557967483997345 for ['[CLS]nieoris ebook kyrgyzstanount biologistnivorous blown messiah [SEP]']
[Init] best perm rec loss: 0.5572001338005066 for ['[CLS] kyrgyzstan messiahountnivorousnie blown biologistoris ebook [SEP]']
[Init] best perm rec loss: 0.5558884739875793 for ['[CLS] messiahount kyrgyzstan biologist ebooknieoris blownnivorous [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.289 (perp=10.843, rec=0.120), tot_loss_proj:2.549 [t=0.12s]
prediction: ['[CLS] - single [CLS] terrified singleness mark me terrified [SEP]']
Attempt swap
Moved sequence
[ 100/ 500] tot_loss=1.783 (perp=8.462, rec=0.091), tot_loss_proj:2.108 [t=0.12s]
prediction: ["[CLS] single s -'singleness mark me terrified [SEP]"]
[ 150/ 500] tot_loss=1.835 (perp=8.803, rec=0.074), tot_loss_proj:2.151 [t=0.12s]
prediction: ['[CLS] single. - s single minded mark me terrified [SEP]']
Attempt swap
Moved sequence
[ 200/ 500] tot_loss=2.235 (perp=10.828, rec=0.070), tot_loss_proj:2.521 [t=0.12s]
prediction: ['[CLS] singleness minded. minded s mark me terrified [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.855 (perp=8.906, rec=0.074), tot_loss_proj:2.131 [t=0.12s]
prediction: ['[CLS] single mindedness minded. s mark me terrified [SEP]']
[ 300/ 500] tot_loss=1.855 (perp=8.906, rec=0.074), tot_loss_proj:2.124 [t=0.12s]
prediction: ['[CLS] single mindedness minded. s mark me terrified [SEP]']
Attempt swap
Swapped tokens
[ 350/ 500] tot_loss=1.753 (perp=8.377, rec=0.078), tot_loss_proj:2.008 [t=0.12s]
prediction: ['[CLS] single mindedness minded. terrified mark me s [SEP]']
Attempt swap
Moved token
[ 400/ 500] tot_loss=1.694 (perp=8.123, rec=0.069), tot_loss_proj:1.925 [t=0.12s]
prediction: ['[CLS] single minded mindedness. terrified mark me s [SEP]']
[ 450/ 500] tot_loss=1.706 (perp=8.123, rec=0.081), tot_loss_proj:1.932 [t=0.12s]
prediction: ['[CLS] single minded mindedness. terrified mark me s [SEP]']
Attempt swap
Moved token
[ 500/ 500] tot_loss=1.640 (perp=7.799, rec=0.081), tot_loss_proj:1.879 [t=0.13s]
prediction: ['[CLS] single minded mindedness terrified mark me s. [SEP]']
Done with input #20 of 50.
reference: 
========================
[CLS] mark's single mindedness terrified me. [SEP]
========================
predicted: 
========================
[CLS] single minded mindedness. terrified mark me s [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 94.118 | p: 88.889 | r: 100.000
rouge2     | fm: 13.333 | p: 12.500 | r: 14.286
rougeL     | fm: 70.588 | p: 66.667 | r: 75.000
rougeLsum  | fm: 70.588 | p: 66.667 | r: 75.000
r1fm+r2fm = 107.451

[Aggregate metrics]:
rouge1     | fm: 90.881 | p: 90.524 | r: 91.341
rouge2     | fm: 57.540 | p: 57.320 | r: 57.885
rougeL     | fm: 81.702 | p: 81.416 | r: 82.181
rougeLsum  | fm: 81.718 | p: 81.390 | r: 82.103
r1fm+r2fm = 148.421

input #20 time: 0:01:33 | total time: 0:32:49


Running input #21 of 50.
reference: 
========================
Her indiscretions were made light of.
========================
Debug: ids_shape = 12, pads = [12]
Debug: input ids = tensor([[  101,  2014, 27427,  2483, 16748,  9285,  2020,  2081,  2422,  1997,
          1012,   102]], device='cuda:0')
Debug: ref = ['[CLS] her indiscretions were made light of. [SEP]']
[Init] best rec loss: 0.6605468988418579 for ['[CLS]¨ immunityfed ballad leopold dispatchff navy bangingulation [SEP]']
[Init] best rec loss: 0.6045535802841187 for ['[CLS] bedford nashville westbound absolutely charismatic belonged woundedmedia mold⁄₄ [SEP]']
[Init] best rec loss: 0.5851192474365234 for ['[CLS] ʉ doubling vessel mirage carpets sigma touch laughs turnout ants [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.974 (perp=9.419, rec=0.090), tot_loss_proj:2.201 [t=0.12s]
prediction: ['[CLS] her were were lighttions madetions light of. [SEP]']
Attempt swap
Moved sequence
[ 100/ 500] tot_loss=1.678 (perp=7.967, rec=0.085), tot_loss_proj:1.911 [t=0.12s]
prediction: ['[CLS] her werecretions lightcretions made of. [SEP]']
[ 150/ 500] tot_loss=1.942 (perp=9.287, rec=0.085), tot_loss_proj:2.202 [t=0.12s]
prediction: ['[CLS] her azcretions lightcretions made of. [SEP]']
Attempt swap
Moved sequence
[ 200/ 500] tot_loss=1.348 (perp=6.338, rec=0.080), tot_loss_proj:1.568 [t=0.12s]
prediction: ['[CLS] her indcretionscretions made of light. [SEP]']
Attempt swap
[ 250/ 500] tot_loss=1.336 (perp=6.338, rec=0.068), tot_loss_proj:1.561 [t=0.12s]
prediction: ['[CLS] her indcretionscretions made of light. [SEP]']
[ 300/ 500] tot_loss=1.336 (perp=6.338, rec=0.068), tot_loss_proj:1.562 [t=0.12s]
prediction: ['[CLS] her indcretionscretions made of light. [SEP]']
Attempt swap
Swapped tokens
[ 350/ 500] tot_loss=1.410 (perp=6.644, rec=0.081), tot_loss_proj:1.615 [t=0.12s]
prediction: ['[CLS] her indistionscretions made of light. [SEP]']
Attempt swap
Swapped tokens
[ 400/ 500] tot_loss=1.200 (perp=5.582, rec=0.084), tot_loss_proj:1.397 [t=0.12s]
prediction: ['[CLS] her indiscretionstions made of light. [SEP]']
[ 450/ 500] tot_loss=1.198 (perp=5.582, rec=0.082), tot_loss_proj:1.392 [t=0.12s]
prediction: ['[CLS] her indiscretionstions made of light. [SEP]']
Attempt swap
Moved sequence
[ 500/ 500] tot_loss=1.163 (perp=5.464, rec=0.070), tot_loss_proj:1.379 [t=0.12s]
prediction: ['[CLS] her indiscretions made of lighttions. [SEP]']
Done with input #21 of 50.
reference: 
========================
[CLS] her indiscretions were made light of. [SEP]
========================
predicted: 
========================
[CLS] her indcretionscretions made of light. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 80.000 | p: 85.714 | r: 75.000
rouge2     | fm: 15.385 | p: 16.667 | r: 14.286
rougeL     | fm: 66.667 | p: 71.429 | r: 62.500
rougeLsum  | fm: 66.667 | p: 71.429 | r: 62.500
r1fm+r2fm = 95.385

[Aggregate metrics]:
rouge1     | fm: 90.272 | p: 90.221 | r: 90.538
rouge2     | fm: 55.604 | p: 55.398 | r: 55.963
rougeL     | fm: 81.064 | p: 80.986 | r: 81.227
rougeLsum  | fm: 81.003 | p: 80.976 | r: 81.148
r1fm+r2fm = 145.876

input #21 time: 0:01:34 | total time: 0:34:23


Running input #22 of 50.
reference: 
========================
Each of the boys fought with the other boys.
========================
Debug: ids_shape = 12, pads = [12]
Debug: input ids = tensor([[ 101, 2169, 1997, 1996, 3337, 4061, 2007, 1996, 2060, 3337, 1012,  102]],
       device='cuda:0')
Debug: ref = ['[CLS] each of the boys fought with the other boys. [SEP]']
[Init] best rec loss: 0.5953388214111328 for ['[CLS]sa remake eelsnon tree berwick pitchersftingtase need [SEP]']
[Init] best rec loss: 0.5847116708755493 for ['[CLS]aker bulgingtagzie bai pact dos riders untitled composing [SEP]']
[Init] best rec loss: 0.5844316482543945 for ['[CLS]nt brief penal decent bundled wingspancam affects ɹ feb [SEP]']
[Init] best rec loss: 0.5827035903930664 for ['[CLS] 06 dangerたerence stu manpowerₐworm napoli attempts [SEP]']
[Init] best rec loss: 0.5781076550483704 for ['[CLS] arcadegu effectlined enforcementrdo judgingmates baseman late [SEP]']
[Init] best rec loss: 0.5753055810928345 for ['[CLS]sor battles weaken legislators城 unbelievable pulse amore timed kata [SEP]']
[Init] best rec loss: 0.5673231482505798 for ['[CLS] habitsoof drugfolialab ones energies benjamin bodyguardgement [SEP]']
[Init] best rec loss: 0.5657029151916504 for ['[CLS] vincent strangely cell halls reclaimed templeselled ist arcade transparency [SEP]']
[Init] best perm rec loss: 0.5609202980995178 for ['[CLS] templeselled vincent strangely arcade transparency reclaimed halls ist cell [SEP]']
[Init] best perm rec loss: 0.559933066368103 for ['[CLS] ist cell strangely reclaimedelled halls vincent transparency temples arcade [SEP]']
[Init] best perm rec loss: 0.5595937967300415 for ['[CLS] halls istelled temples strangely vincent arcade reclaimed cell transparency [SEP]']
[Init] best perm rec loss: 0.5576414465904236 for ['[CLS]elled halls temples strangely transparency reclaimed arcade vincent ist cell [SEP]']
[Init] best perm rec loss: 0.5569329261779785 for ['[CLS]elled arcade vincent ist cell reclaimed transparency halls temples strangely [SEP]']
[Init] best perm rec loss: 0.5557612776756287 for ['[CLS] cell vincent hallselled arcade ist strangely transparency temples reclaimed [SEP]']
[Init] best perm rec loss: 0.552349328994751 for ['[CLS] reclaimed hallselled ist temples vincent strangely arcade cell transparency [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.549 (perp=12.011, rec=0.147), tot_loss_proj:2.739 [t=0.12s]
prediction: ['[CLS] each [SEP] [SEP] is fought with. boys [SEP] [SEP] [SEP]']
Attempt swap
Swapped tokens
[ 100/ 500] tot_loss=2.163 (perp=10.260, rec=0.111), tot_loss_proj:2.339 [t=0.12s]
prediction: ['[CLS] each [SEP] boys is fought with. [SEP] lad [SEP] [SEP]']
[ 150/ 500] tot_loss=1.832 (perp=8.608, rec=0.110), tot_loss_proj:2.028 [t=0.13s]
prediction: ['[CLS] each the boys is fought with. boys boys [SEP] [SEP]']
Attempt swap
Put prefix at the end
[ 200/ 500] tot_loss=1.888 (perp=8.978, rec=0.092), tot_loss_proj:2.166 [t=0.12s]
prediction: ['[CLS] [PAD] boys [SEP] each the boys their fought with. [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.724 (perp=8.059, rec=0.112), tot_loss_proj:1.986 [t=0.12s]
prediction: ['[CLS] their [PAD] boys [SEP] each the boys fought with. [SEP]']
[ 300/ 500] tot_loss=1.709 (perp=8.059, rec=0.097), tot_loss_proj:1.988 [t=0.13s]
prediction: ['[CLS] their [PAD] boys [SEP] each the boys fought with. [SEP]']
Attempt swap
Moved sequence
[ 350/ 500] tot_loss=1.587 (perp=7.426, rec=0.102), tot_loss_proj:1.664 [t=0.12s]
prediction: ['[CLS] [SEP] each the boys fought with otherbad boys. [SEP]']
Attempt swap
Moved sequence
[ 400/ 500] tot_loss=1.481 (perp=6.959, rec=0.089), tot_loss_proj:1.568 [t=0.12s]
prediction: ['[CLS] [SEP] each the boys fought with other boys. [SEP] [SEP]']
[ 450/ 500] tot_loss=1.476 (perp=6.959, rec=0.084), tot_loss_proj:1.565 [t=0.12s]
prediction: ['[CLS] [SEP] each the boys fought with other boys. [SEP] [SEP]']
Attempt swap
Moved sequence
[ 500/ 500] tot_loss=1.504 (perp=7.108, rec=0.082), tot_loss_proj:1.609 [t=0.12s]
prediction: ['[CLS] gave the boys each fought with other boys. [SEP] [SEP]']
Done with input #22 of 50.
reference: 
========================
[CLS] each of the boys fought with the other boys. [SEP]
========================
predicted: 
========================
[CLS] [SEP] each the boys fought with other boys. [SEP] [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 81.818 | p: 81.818 | r: 81.818
rouge2     | fm: 50.000 | p: 50.000 | r: 50.000
rougeL     | fm: 81.818 | p: 81.818 | r: 81.818
rougeLsum  | fm: 81.818 | p: 81.818 | r: 81.818
r1fm+r2fm = 131.818

[Aggregate metrics]:
rouge1     | fm: 90.005 | p: 90.004 | r: 90.187
rouge2     | fm: 55.403 | p: 55.190 | r: 55.778
rougeL     | fm: 81.104 | p: 80.982 | r: 81.354
rougeLsum  | fm: 80.953 | p: 80.911 | r: 81.099
r1fm+r2fm = 145.408

input #22 time: 0:01:33 | total time: 0:35:56


Running input #23 of 50.
reference: 
========================
Herman mixed the eggs with the cream.
========================
Debug: ids_shape = 10, pads = [10]
Debug: input ids = tensor([[  101, 11458,  3816,  1996,  6763,  2007,  1996,  6949,  1012,   102]],
       device='cuda:0')
Debug: ref = ['[CLS] herman mixed the eggs with the cream. [SEP]']
[Init] best rec loss: 0.6159370541572571 for ['[CLS] jiang maris scores eh bookwat antonygrowth [SEP]']
[Init] best rec loss: 0.5978776812553406 for ['[CLS] circlekeepers tokugawa finalists lastly arrays protege amount [SEP]']
[Init] best rec loss: 0.5902678370475769 for ['[CLS] coins guerra ħ rival jubileedlowora carpathian [SEP]']
[Init] best rec loss: 0.5809013843536377 for ['[CLS] cosmopolitan 13 princely blackwell brigades susannanary aqua [SEP]']
[Init] best rec loss: 0.5779160857200623 for ['[CLS]urse killing syllableshm 202 prisonerseauxdez [SEP]']
[Init] best rec loss: 0.5762959718704224 for ['[CLS] crushing 3a tsunami files steering wiionedpo [SEP]']
[Init] best rec loss: 0.5727660655975342 for ['[CLS] 1895 sundance occupied als excerptsrger goethe trunk [SEP]']
[Init] best rec loss: 0.5702683329582214 for ['[CLS] mali cloud nominationsoric iris phase controlling np [SEP]']
[Init] best rec loss: 0.5665661692619324 for ['[CLS] protestant ு comprised africanrn soothingcy groves [SEP]']
[Init] best perm rec loss: 0.5648425221443176 for ['[CLS] protestant ு soothing africancy comprised grovesrn [SEP]']
[Init] best perm rec loss: 0.5638498663902283 for ['[CLS] comprised protestantcy african soothing ுrn groves [SEP]']
[Init] best perm rec loss: 0.5624542236328125 for ['[CLS]cy groves soothing protestant ு comprisedrn african [SEP]']
[Init] best perm rec loss: 0.5621399283409119 for ['[CLS] protestantrn african comprised ு soothing grovescy [SEP]']
[Init] best perm rec loss: 0.5607248544692993 for ['[CLS]rn soothing comprised protestant ுcy african groves [SEP]']
[Init] best perm rec loss: 0.5605117678642273 for ['[CLS] comprised grovescy protestant african ு soothingrn [SEP]']
[Init] best perm rec loss: 0.5591025352478027 for ['[CLS] ு comprisedcy protestant africanrn soothing groves [SEP]']
[Init] best perm rec loss: 0.5588619112968445 for ['[CLS] african soothingcy comprised protestantrn ு groves [SEP]']
[Init] best perm rec loss: 0.5583385825157166 for ['[CLS]cy protestant ு african soothing grovesrn comprised [SEP]']
[Init] best perm rec loss: 0.5578842163085938 for ['[CLS]rncy comprised protestant groves ு soothing african [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.237 (perp=10.635, rec=0.110), tot_loss_proj:2.391 [t=0.11s]
prediction: ['[CLS] herman mixed eggs eggs eggs with cream they [SEP]']
Attempt swap
Swapped tokens
[ 100/ 500] tot_loss=2.006 (perp=9.574, rec=0.091), tot_loss_proj:2.166 [t=0.12s]
prediction: ['[CLS] herman mixed they eggs eggs with cream eggs [SEP]']
[ 150/ 500] tot_loss=1.952 (perp=9.405, rec=0.071), tot_loss_proj:2.036 [t=0.12s]
prediction: ['[CLS] herman mixed the eggs eggs with cream the [SEP]']
Attempt swap
Swapped tokens
[ 200/ 500] tot_loss=1.729 (perp=8.218, rec=0.085), tot_loss_proj:1.803 [t=0.12s]
prediction: ['[CLS] herman mixed the the eggs with cream eggs [SEP]']
Attempt swap
Swapped tokens
[ 250/ 500] tot_loss=1.575 (perp=7.477, rec=0.080), tot_loss_proj:1.660 [t=0.12s]
prediction: ['[CLS] herman mixed the cream eggs with the eggs [SEP]']
[ 300/ 500] tot_loss=1.575 (perp=7.477, rec=0.079), tot_loss_proj:1.664 [t=0.13s]
prediction: ['[CLS] herman mixed the cream eggs with the eggs [SEP]']
Attempt swap
Moved sequence
[ 350/ 500] tot_loss=1.513 (perp=7.116, rec=0.089), tot_loss_proj:1.636 [t=0.12s]
prediction: ['[CLS] cream herman mixed the eggs with the eggs [SEP]']
Attempt swap
Swapped tokens
[ 400/ 500] tot_loss=1.579 (perp=7.539, rec=0.071), tot_loss_proj:1.785 [t=0.12s]
prediction: ['[CLS] cream herman mixed the eggs. the eggs [SEP]']
[ 450/ 500] tot_loss=1.505 (perp=7.116, rec=0.082), tot_loss_proj:1.647 [t=0.12s]
prediction: ['[CLS] cream herman mixed the eggs with the eggs [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.653 (perp=7.891, rec=0.075), tot_loss_proj:1.875 [t=0.12s]
prediction: ['[CLS] cream herman mixed the eggs with. eggs [SEP]']
Done with input #23 of 50.
reference: 
========================
[CLS] herman mixed the eggs with the cream. [SEP]
========================
predicted: 
========================
[CLS] cream herman mixed the eggs with the eggs [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 94.737 | p: 90.000 | r: 100.000
rouge2     | fm: 58.824 | p: 55.556 | r: 62.500
rougeL     | fm: 84.211 | p: 80.000 | r: 88.889
rougeLsum  | fm: 84.211 | p: 80.000 | r: 88.889
r1fm+r2fm = 153.560

[Aggregate metrics]:
rouge1     | fm: 90.282 | p: 89.986 | r: 90.680
rouge2     | fm: 55.558 | p: 55.262 | r: 55.923
rougeL     | fm: 81.176 | p: 80.970 | r: 81.530
rougeLsum  | fm: 81.078 | p: 80.857 | r: 81.447
r1fm+r2fm = 145.840

input #23 time: 0:01:32 | total time: 0:37:29


Running input #24 of 50.
reference: 
========================
No John Smiths attended the meeting.
========================
Debug: ids_shape = 10, pads = [10]
Debug: input ids = tensor([[ 101, 2053, 2198, 3044, 2015, 3230, 1996, 3116, 1012,  102]],
       device='cuda:0')
Debug: ref = ['[CLS] no john smiths attended the meeting. [SEP]']
[Init] best rec loss: 0.5864959359169006 for ['[CLS]uet freeway fein fluorescentenna xinjiang 我 quincy [SEP]']
[Init] best rec loss: 0.572725772857666 for ['[CLS] 発ausen incomes measurement recalling tunic goalscorer canoe [SEP]']
[Init] best rec loss: 0.5670956969261169 for ['[CLS] orbits kirk doctoral addedcated tran panties kaufman [SEP]']
[Init] best rec loss: 0.5665966272354126 for ['[CLS] gemini shire demetrius cnn tyson nic endangered ensure [SEP]']
[Init] best rec loss: 0.5635191798210144 for ['[CLS] sting dane vesselgau literary skyline major modeling [SEP]']
[Init] best rec loss: 0.5632266998291016 for ['[CLS] chorale english waking disbanded sf prequel pearls awaiting [SEP]']
[Init] best rec loss: 0.5623646378517151 for ['[CLS]ulininatory bottledwerimate assure eddie espionage [SEP]']
[Init] best perm rec loss: 0.5579248070716858 for ['[CLS] bottled assure eddieimatewerinatory espionageulin [SEP]']
[Init] best perm rec loss: 0.5555176734924316 for ['[CLS] espionageulin assurewer bottled eddieinatoryimate [SEP]']
[Init] best perm rec loss: 0.5532914996147156 for ['[CLS] espionage assurewerulin eddie bottledinatoryimate [SEP]']
[Init] best perm rec loss: 0.5528064966201782 for ['[CLS]ulin eddiewer bottledinatory assureimate espionage [SEP]']
[Init] best perm rec loss: 0.5521255135536194 for ['[CLS]inatory assure eddiewer espionageimate bottledulin [SEP]']
[Init] best perm rec loss: 0.5498449206352234 for ['[CLS]ulin eddie bottled espionage assureimateinatorywer [SEP]']
[Init] best perm rec loss: 0.5484479665756226 for ['[CLS] bottledimate eddieulin espionage assurewerinatory [SEP]']
[Init] best perm rec loss: 0.5482929348945618 for ['[CLS] espionageulinwer bottled eddie assureimateinatory [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.350 (perp=10.948, rec=0.161), tot_loss_proj:2.609 [t=0.12s]
prediction: ['[CLS] no john. attended william at meeting symptoms [SEP]']
Attempt swap
Swapped tokens
[ 100/ 500] tot_loss=1.927 (perp=9.171, rec=0.093), tot_loss_proj:2.180 [t=0.13s]
prediction: ['[CLS] no meeting. attended john attended john〉 [SEP]']
[ 150/ 500] tot_loss=2.013 (perp=9.646, rec=0.083), tot_loss_proj:2.262 [t=0.13s]
prediction: ['[CLS] no meeting. attended john the smith〉 [SEP]']
Attempt swap
Moved token
[ 200/ 500] tot_loss=1.704 (perp=8.157, rec=0.073), tot_loss_proj:1.948 [t=0.12s]
prediction: ['[CLS] no meeting. attended john smith the. [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.379 (perp=6.462, rec=0.086), tot_loss_proj:1.630 [t=0.13s]
prediction: ['[CLS] no. attended john smith the meeting. [SEP]']
[ 300/ 500] tot_loss=1.352 (perp=6.462, rec=0.060), tot_loss_proj:1.632 [t=0.12s]
prediction: ['[CLS] no. attended john smith the meeting. [SEP]']
Attempt swap
Moved sequence
[ 350/ 500] tot_loss=1.239 (perp=5.794, rec=0.080), tot_loss_proj:1.517 [t=0.12s]
prediction: ['[CLS] no. attended the meeting john smith. [SEP]']
Attempt swap
Moved token
[ 400/ 500] tot_loss=1.075 (perp=5.002, rec=0.075), tot_loss_proj:1.355 [t=0.12s]
prediction: ['[CLS] no. attended the john smith meeting. [SEP]']
[ 450/ 500] tot_loss=1.079 (perp=5.002, rec=0.078), tot_loss_proj:1.350 [t=0.13s]
prediction: ['[CLS] no. attended the john smith meeting. [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.077 (perp=5.002, rec=0.077), tot_loss_proj:1.358 [t=0.12s]
prediction: ['[CLS] no. attended the john smith meeting. [SEP]']
Done with input #24 of 50.
reference: 
========================
[CLS] no john smiths attended the meeting. [SEP]
========================
predicted: 
========================
[CLS] no meeting. attended john smith the. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 87.500 | p: 87.500 | r: 87.500
rouge2     | fm: 14.286 | p: 14.286 | r: 14.286
rougeL     | fm: 62.500 | p: 62.500 | r: 62.500
rougeLsum  | fm: 62.500 | p: 62.500 | r: 62.500
r1fm+r2fm = 101.786

[Aggregate metrics]:
rouge1     | fm: 90.095 | p: 89.825 | r: 90.521
rouge2     | fm: 53.849 | p: 53.550 | r: 54.352
rougeL     | fm: 80.590 | p: 80.286 | r: 80.953
rougeLsum  | fm: 80.397 | p: 80.222 | r: 80.764
r1fm+r2fm = 143.944

input #24 time: 0:01:33 | total time: 0:39:02


Running input #25 of 50.
reference: 
========================
I did not, as Bill had thought, go to the store.
========================
Debug: ids_shape = 16, pads = [16]
Debug: input ids = tensor([[ 101, 1045, 2106, 2025, 1010, 2004, 3021, 2018, 2245, 1010, 2175, 2000,
         1996, 3573, 1012,  102]], device='cuda:0')
Debug: ref = ['[CLS] i did not, as bill had thought, go to the store. [SEP]']
[Init] best rec loss: 0.6538363695144653 for ['[CLS] jc reusedioms gag americanₘ ■ erica scandal max semantics husseinminate regimes [SEP]']
[Init] best rec loss: 0.6532584428787231 for ['[CLS]ae moroccan thrusts dime holdkur dealer limit shame hurling¬drick mab plain [SEP]']
[Init] best rec loss: 0.649156391620636 for ['[CLS] alexia testosterone organist conwayllenfusion rejectsyearmering annetteeber hugicle friend [SEP]']
[Init] best rec loss: 0.6417782306671143 for ['[CLS]tive detector hardwareᶠfighting playgroundabad correspond rockets sikhs draw siemens raaf baptiste [SEP]']
[Init] best rec loss: 0.6397240161895752 for ['[CLS] warnings futile quezon conscience hussain neuralbread quiver rib motioned closurewil jelly₈ [SEP]']
[Init] best rec loss: 0.6391773223876953 for ['[CLS]bet ы legion institutes briefcase suite marc illustrations thames blows undercover terrestrial josh dictator [SEP]']
[Init] best rec loss: 0.6378270983695984 for ['[CLS] managingsities sailor astronomical 1786 offering bump tavi ageshiroining mont sponsorshipental [SEP]']
[Init] best rec loss: 0.6353960037231445 for ['[CLS] renowned future ⁴ finalist accountants fallsfia curled marijuana campaigning emilysierlowewl [SEP]']
[Init] best rec loss: 0.631422221660614 for ['[CLS] colors indefinitely mathews popcorn locke beit pod trafford ache dans 42 marchedsure federally [SEP]']
[Init] best perm rec loss: 0.6296688914299011 for ['[CLS] ache colors federally indefinitelysure marched trafford 42 dans popcorn pod locke beit mathews [SEP]']
[Init] best perm rec loss: 0.6253851652145386 for ['[CLS] popcorn federally indefinitely beit pod mathews dans marched ache colors 42 lockesure trafford [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.053 (perp=9.499, rec=0.154), tot_loss_proj:2.369 [t=0.12s]
prediction: ['[CLS] the the. ton not. thinkfalls bill to did of it instructed [SEP]']
Attempt swap
Moved sequence
[ 100/ 500] tot_loss=1.614 (perp=7.426, rec=0.128), tot_loss_proj:1.940 [t=0.12s]
prediction: ['[CLS] the the ton not the think the store in. had the his thought [SEP]']
[ 150/ 500] tot_loss=1.765 (perp=8.278, rec=0.110), tot_loss_proj:2.141 [t=0.12s]
prediction: ['[CLS] the i as not, thought store store,. had the his thought [SEP]']
Attempt swap
Moved token
[ 200/ 500] tot_loss=1.639 (perp=7.751, rec=0.089), tot_loss_proj:1.997 [t=0.12s]
prediction: ['[CLS] the i as not, bill as store store to. had, thought [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.508 (perp=7.104, rec=0.087), tot_loss_proj:1.820 [t=0.13s]
prediction: ['[CLS] the i, not, bill as store store to bill. did thought [SEP]']
[ 300/ 500] tot_loss=1.509 (perp=7.104, rec=0.088), tot_loss_proj:1.819 [t=0.12s]
prediction: ['[CLS] the i, not, bill as store store to bill. did thought [SEP]']
Attempt swap
Swapped tokens
[ 350/ 500] tot_loss=1.479 (perp=6.926, rec=0.094), tot_loss_proj:1.849 [t=0.12s]
prediction: ['[CLS] the i did not, bill as store go to bill. the thought [SEP]']
Attempt swap
Swapped tokens
[ 400/ 500] tot_loss=1.466 (perp=6.958, rec=0.075), tot_loss_proj:1.850 [t=0.12s]
prediction: ['[CLS] the i not not, bill as store bill to go. the thought [SEP]']
[ 450/ 500] tot_loss=1.465 (perp=6.958, rec=0.074), tot_loss_proj:1.838 [t=0.13s]
prediction: ['[CLS] the i not not, bill as store bill to go. the thought [SEP]']
Attempt swap
Moved sequence
[ 500/ 500] tot_loss=1.371 (perp=6.474, rec=0.076), tot_loss_proj:1.645 [t=0.13s]
prediction: ['[CLS], i not the thought did, had as store bill to go. [SEP]']
Done with input #25 of 50.
reference: 
========================
[CLS] i did not, as bill had thought, go to the store. [SEP]
========================
predicted: 
========================
[CLS] the i not not, bill as store bill to go. the thought [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 81.481 | p: 78.571 | r: 84.615
rouge2     | fm: 0.000 | p: 0.000 | r: 0.000
rougeL     | fm: 59.259 | p: 57.143 | r: 61.538
rougeLsum  | fm: 59.259 | p: 57.143 | r: 61.538
r1fm+r2fm = 81.481

[Aggregate metrics]:
rouge1     | fm: 89.721 | p: 89.372 | r: 90.281
rouge2     | fm: 51.971 | p: 51.742 | r: 52.312
rougeL     | fm: 79.660 | p: 79.309 | r: 80.070
rougeLsum  | fm: 79.413 | p: 79.247 | r: 79.813
r1fm+r2fm = 141.692

input #25 time: 0:01:33 | total time: 0:40:36


Running input #26 of 50.
reference: 
========================
Who will John ask for information about summer courses?
========================
Debug: ids_shape = 12, pads = [12]
Debug: input ids = tensor([[ 101, 2040, 2097, 2198, 3198, 2005, 2592, 2055, 2621, 5352, 1029,  102]],
       device='cuda:0')
Debug: ref = ['[CLS] who will john ask for information about summer courses? [SEP]']
[Init] best rec loss: 0.6346036791801453 for ['[CLS] backseatbialisson insigniaitical gaping gang precautions nomadic engined [SEP]']
[Init] best rec loss: 0.5878725051879883 for ['[CLS]nidae chip scout rightsdrich knocking blinked influencing wandererseering [SEP]']
[Init] best rec loss: 0.5826284289360046 for ['[CLS]achshi thorne precedentiology heavy barrage tomelth societal [SEP]']
[Init] best rec loss: 0.5807992219924927 for ['[CLS]tera scooted hog turbulencetier accountable textile honours hunting mutant [SEP]']
[Init] best rec loss: 0.5756499171257019 for ['[CLS] kildaso gland dexter fairfield asteroids cigar collapsing libre marcos [SEP]']
[Init] best perm rec loss: 0.5752902030944824 for ['[CLS] gland libre fairfield asteroidsso marcos kilda collapsing dexter cigar [SEP]']
[Init] best perm rec loss: 0.5711356997489929 for ['[CLS] marcos glandso dexter asteroids cigar fairfield collapsing libre kilda [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.893 (perp=8.826, rec=0.128), tot_loss_proj:2.068 [t=0.13s]
prediction: ['[CLS] will would can asked? summer? for summer information [SEP]']
Attempt swap
Swapped tokens
[ 100/ 500] tot_loss=1.720 (perp=8.185, rec=0.083), tot_loss_proj:1.847 [t=0.13s]
prediction: ["[CLS] will john'ask about will information summer summer? [SEP]"]
[ 150/ 500] tot_loss=1.799 (perp=8.594, rec=0.080), tot_loss_proj:1.926 [t=0.11s]
prediction: ['[CLS] will john can ask about will information summer summer? [SEP]']
Attempt swap
Swapped tokens
[ 200/ 500] tot_loss=1.537 (perp=7.290, rec=0.079), tot_loss_proj:1.662 [t=0.12s]
prediction: ['[CLS] will john will ask summer will information about summer? [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.510 (perp=7.208, rec=0.068), tot_loss_proj:1.626 [t=0.13s]
prediction: ['[CLS] will john will ask summer information about summer will? [SEP]']
[ 300/ 500] tot_loss=1.510 (perp=7.208, rec=0.069), tot_loss_proj:1.612 [t=0.12s]
prediction: ['[CLS] will john will ask summer information about summer will? [SEP]']
Attempt swap
[ 350/ 500] tot_loss=1.660 (perp=7.944, rec=0.071), tot_loss_proj:1.749 [t=0.12s]
prediction: ['[CLS] will john who ask summer information about summer will? [SEP]']
Attempt swap
Moved token
[ 400/ 500] tot_loss=1.608 (perp=7.644, rec=0.079), tot_loss_proj:1.665 [t=0.12s]
prediction: ['[CLS] will john who will ask summer information about courses? [SEP]']
[ 450/ 500] tot_loss=1.602 (perp=7.644, rec=0.073), tot_loss_proj:1.669 [t=0.12s]
prediction: ['[CLS] will john who will ask summer information about courses? [SEP]']
Attempt swap
Moved sequence
[ 500/ 500] tot_loss=1.557 (perp=7.471, rec=0.063), tot_loss_proj:1.631 [t=0.12s]
prediction: ['[CLS] will who will ask summer information about john courses? [SEP]']
Done with input #26 of 50.
reference: 
========================
[CLS] who will john ask for information about summer courses? [SEP]
========================
predicted: 
========================
[CLS] will john who will ask summer information about courses? [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 90.909 | p: 90.909 | r: 90.909
rouge2     | fm: 40.000 | p: 40.000 | r: 40.000
rougeL     | fm: 72.727 | p: 72.727 | r: 72.727
rougeLsum  | fm: 72.727 | p: 72.727 | r: 72.727
r1fm+r2fm = 130.909

[Aggregate metrics]:
rouge1     | fm: 89.782 | p: 89.429 | r: 90.335
rouge2     | fm: 51.391 | p: 51.117 | r: 51.746
rougeL     | fm: 79.425 | p: 79.124 | r: 79.812
rougeLsum  | fm: 79.218 | p: 78.927 | r: 79.598
r1fm+r2fm = 141.174

input #26 time: 0:01:32 | total time: 0:42:08


Running input #27 of 50.
reference: 
========================
Ron wanted to wear a tuxedo to the party, but Caspar couldn't decide whether to.
========================
Debug: ids_shape = 24, pads = [24]
Debug: input ids = tensor([[  101,  6902,  2359,  2000,  4929,  1037, 10722, 19068,  2080,  2000,
          1996,  2283,  1010,  2021, 25222, 19362,  2481,  1005,  1056,  5630,
          3251,  2000,  1012,   102]], device='cuda:0')
Debug: ref = ["[CLS] ron wanted to wear a tuxedo to the party, but caspar couldn't decide whether to. [SEP]"]
[Init] best rec loss: 0.651094377040863 for ['[CLS] chu julius designatedbra podiumventing horn toleratetc spawned pants amusement claims sc delayqa saxophonist expired researcherdia azores africa [SEP]']
[Init] best rec loss: 0.6238903999328613 for ['[CLS] shaft facedli disgrace ð reassuredlandaroller pitchedraphicud willingly鈴 comte podium fritzrna beaver bracket constablegit 1708 [SEP]']
[Init] best rec loss: 0.5911034941673279 for ['[CLS] packagingrmin tend typhoon jia clocklingerotondee curlingpm gustavudge bjp bonds lunar 青 accepted reef dissatisfied greyhound guides [SEP]']
[Init] best rec loss: 0.5866059064865112 for ['[CLS] hewitt kaladin msc wellesley invasive mine initiation chainsglass automatic wineryhennaisgne imposingrteneuve dependentmoto daze fluids afc [SEP]']
[Init] best rec loss: 0.5849496126174927 for ['[CLS] greeted dirt creditedvas fossils oliveoya learning constablecarriage ads bouncing aerodrome海lingselloη emirates bordering coa battista labrador [SEP]']
[Init] best perm rec loss: 0.584393322467804 for ['[CLS] credited aerodromeoyacarriage labrador bordering bouncing ads olive fossils dirt海 learningvas greeted emirates constable coaηlingsello battista [SEP]']
[Init] best perm rec loss: 0.5784968137741089 for ['[CLS] emirates borderingellooya海 aerodrome battistacarriagelings bouncing coa dirt fossils learning olive creditedvas labrador constable greeted adsη [SEP]']
[Init] best perm rec loss: 0.5778372883796692 for ['[CLS]vas greetedcarriage learningello bouncing constable battista olive coa aerodrome dirt emirates fossilsoya credited ads bordering labradorlingsη海 [SEP]']
[Init] best perm rec loss: 0.5765628814697266 for ['[CLS]η coa emirates borderingello ads learningvas aerodrome海 dirt labrador bouncing battista creditedoya olivecarriage fossils constablelings greeted [SEP]']
[Init] best perm rec loss: 0.576095461845398 for ['[CLS]海 greeted learning bouncingη aerodrome ads olive bordering constablelingscarriage dirt creditedvas fossils labradoroya emiratesello battista coa [SEP]']
[Init] best perm rec loss: 0.5743942260742188 for ['[CLS] olive constable coaellocarriage emirates labradoroyavas海 bordering learning battista ads aerodrome fossilslings dirt greeted bouncingη credited [SEP]']
[Init] best perm rec loss: 0.5738137364387512 for ['[CLS] ads dirt bouncingcarriage battistavas emirates learning fossils aerodrome bordering greetedellolings coaoya credited海 labrador olive constableη [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.687 (perp=12.586, rec=0.170), tot_loss_proj:2.911 [t=0.12s]
prediction: ['[CLS] [SEP] ) wanted adoptingte tu 19xedo thanlakд wentdharhiko cannot to not ⇌ wanted ownership [SEP] [SEP]']
Attempt swap
Moved token
[ 100/ 500] tot_loss=2.875 (perp=13.573, rec=0.160), tot_loss_proj:3.169 [t=0.12s]
prediction: ['[CLS] [PAD]n wanted wear [PAD] tu tuo 23 ァ ya stimulated wantedigh ron but [SEP] not lola decide [PAD] [SEP] [SEP]']
[ 150/ 500] tot_loss=2.601 (perp=12.422, rec=0.116), tot_loss_proj:2.907 [t=0.12s]
prediction: ['[CLS] where to wanted wear [PAD]xedxedo doing ァawso wantedee ron but [SEP] not cash decide. [SEP] [SEP]']
Attempt swap
Moved token
[ 200/ 500] tot_loss=2.407 (perp=11.439, rec=0.119), tot_loss_proj:2.685 [t=0.13s]
prediction: ['[CLS] where wanted to wear [PAD]xedxedo in‐loso wanted to ron but [SEP] couldn? whether. [SEP] [SEP]']
Attempt swap
Swapped tokens
[ 250/ 500] tot_loss=2.054 (perp=9.754, rec=0.103), tot_loss_proj:2.316 [t=0.13s]
prediction: ['[CLS] [SEP] wanted to wear [PAD] tuxedo party ァ partypar wanted to ron, but couldn. whether. [SEP] [SEP]']
[ 300/ 500] tot_loss=1.589 (perp=7.467, rec=0.095), tot_loss_proj:1.793 [t=0.12s]
prediction: ['[CLS] where wanted to wear a tuxedo party the partypar wanted from ron, but couldn. whether. [SEP] [SEP]']
Attempt swap
Put prefix at the end
[ 350/ 500] tot_loss=1.716 (perp=8.060, rec=0.104), tot_loss_proj:1.928 [t=0.12s]
prediction: ['[CLS] [SEP] where wanted to wear axedxedo party the partypar wanted to ron, but couldn. whether. [SEP]']
Attempt swap
Swapped tokens
[ 400/ 500] tot_loss=1.678 (perp=7.922, rec=0.094), tot_loss_proj:1.902 [t=0.13s]
prediction: ['[CLS] [SEP] where wanted to wear axedxedo party to party whether wanted to ron, but couldn.par. [SEP]']
[ 450/ 500] tot_loss=1.754 (perp=8.310, rec=0.092), tot_loss_proj:1.976 [t=0.13s]
prediction: ['[CLS] [SEP] where wanted to wear axedxedo party to party whether wanted not ron, but couldn.par. [SEP]']
Attempt swap
Swapped tokens
[ 500/ 500] tot_loss=1.510 (perp=7.135, rec=0.083), tot_loss_proj:1.729 [t=0.13s]
prediction: ['[CLS] [SEP] where wanted to wear a tuxedo party to party whether ron not wanted, but couldn [CLS]par. [SEP]']
Done with input #27 of 50.
reference: 
========================
[CLS] ron wanted to wear a tuxedo to the party, but caspar couldn't decide whether to. [SEP]
========================
predicted: 
========================
[CLS] [SEP] where wanted to wear a tuxedo party to party whether ron not wanted, but couldn [CLS]par. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 68.421 | p: 65.000 | r: 72.222
rouge2     | fm: 22.222 | p: 21.053 | r: 23.529
rougeL     | fm: 57.895 | p: 55.000 | r: 61.111
rougeLsum  | fm: 57.895 | p: 55.000 | r: 61.111
r1fm+r2fm = 90.643

[Aggregate metrics]:
rouge1     | fm: 88.990 | p: 88.547 | r: 89.578
rouge2     | fm: 50.309 | p: 49.935 | r: 50.734
rougeL     | fm: 78.492 | p: 78.129 | r: 79.071
rougeLsum  | fm: 78.527 | p: 78.098 | r: 79.014
r1fm+r2fm = 139.299

input #27 time: 0:01:34 | total time: 0:43:43


Running input #28 of 50.
reference: 
========================
Bill gave Sue the book.
========================
Debug: ids_shape = 8, pads = [8]
Debug: input ids = tensor([[ 101, 3021, 2435, 9790, 1996, 2338, 1012,  102]], device='cuda:0')
Debug: ref = ['[CLS] bill gave sue the book. [SEP]']
[Init] best rec loss: 0.5817752480506897 for ['[CLS]page conor trainers × immediately miracle [SEP]']
[Init] best rec loss: 0.5505921244621277 for ['[CLS] graf differkel 339door identify [SEP]']
[Init] best rec loss: 0.5473005175590515 for ['[CLS] pierced shan pumpxing cp fragmentation [SEP]']
[Init] best rec loss: 0.5461838841438293 for ['[CLS] flow pace volta emanuel amoryas [SEP]']
[Init] best rec loss: 0.5451404452323914 for ['[CLS]ior lawsuits allegro thirtyvah mineral [SEP]']
[Init] best rec loss: 0.5426532626152039 for ['[CLS] tapestry kai angelounds obstacles horizontally [SEP]']
[Init] best rec loss: 0.5424087643623352 for ['[CLS]ᄊ demi diagnosticproofgny jewels [SEP]']
[Init] best perm rec loss: 0.5401918292045593 for ['[CLS] jewelsᄊ demigny diagnosticproof [SEP]']
[Init] best perm rec loss: 0.539131760597229 for ['[CLS] diagnosticproof jewels demignyᄊ [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.900 (perp=8.984, rec=0.103), tot_loss_proj:2.097 [t=0.12s]
prediction: ['[CLS] sue gave grant gave book. [SEP]']
Attempt swap
Moved sequence
[ 100/ 500] tot_loss=2.081 (perp=9.923, rec=0.097), tot_loss_proj:2.312 [t=0.12s]
prediction: ['[CLS] sue giving gave gave book. [SEP]']
[ 150/ 500] tot_loss=2.056 (perp=9.865, rec=0.083), tot_loss_proj:2.221 [t=0.12s]
prediction: ['[CLS] sue bill gave gave book. [SEP]']
Attempt swap
Moved token
[ 200/ 500] tot_loss=1.565 (perp=7.458, rec=0.074), tot_loss_proj:1.626 [t=0.12s]
prediction: ['[CLS] sue gave bill the book. [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.474 (perp=7.009, rec=0.072), tot_loss_proj:1.605 [t=0.12s]
prediction: ['[CLS] sue gave the book bill. [SEP]']
[ 300/ 500] tot_loss=1.480 (perp=7.009, rec=0.078), tot_loss_proj:1.613 [t=0.12s]
prediction: ['[CLS] sue gave the book bill. [SEP]']
Attempt swap
Moved sequence
[ 350/ 500] tot_loss=1.424 (perp=6.835, rec=0.057), tot_loss_proj:1.572 [t=0.12s]
prediction: ['[CLS] book sue gave the bill. [SEP]']
Attempt swap
[ 400/ 500] tot_loss=1.437 (perp=6.835, rec=0.070), tot_loss_proj:1.575 [t=0.12s]
prediction: ['[CLS] book sue gave the bill. [SEP]']
[ 450/ 500] tot_loss=1.432 (perp=6.835, rec=0.065), tot_loss_proj:1.567 [t=0.13s]
prediction: ['[CLS] book sue gave the bill. [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.422 (perp=6.835, rec=0.055), tot_loss_proj:1.566 [t=0.13s]
prediction: ['[CLS] book sue gave the bill. [SEP]']
Done with input #28 of 50.
reference: 
========================
[CLS] bill gave sue the book. [SEP]
========================
predicted: 
========================
[CLS] book sue gave the bill. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 100.000 | p: 100.000 | r: 100.000
rouge2     | fm: 0.000 | p: 0.000 | r: 0.000
rougeL     | fm: 57.143 | p: 57.143 | r: 57.143
rougeLsum  | fm: 57.143 | p: 57.143 | r: 57.143
r1fm+r2fm = 100.000

[Aggregate metrics]:
rouge1     | fm: 89.396 | p: 88.958 | r: 89.952
rouge2     | fm: 48.570 | p: 48.323 | r: 48.942
rougeL     | fm: 77.829 | p: 77.436 | r: 78.272
rougeLsum  | fm: 77.844 | p: 77.481 | r: 78.368
r1fm+r2fm = 137.966

input #28 time: 0:01:33 | total time: 0:45:17


Running input #29 of 50.
reference: 
========================
The bread was chewed by Martha.
========================
Debug: ids_shape = 9, pads = [9]
Debug: input ids = tensor([[  101,  1996,  7852,  2001, 18362,  2011,  9246,  1012,   102]],
       device='cuda:0')
Debug: ref = ['[CLS] the bread was chewed by martha. [SEP]']
[Init] best rec loss: 0.5911701321601868 for ['[CLS] summit abs seam musik navajourours [SEP]']
[Init] best rec loss: 0.585157036781311 for ['[CLS] countrypol mandal designationjana sang bodily [SEP]']
[Init] best rec loss: 0.5813663601875305 for ['[CLS] worshipped walkover loving sank impression br nursery [SEP]']
[Init] best rec loss: 0.5810680389404297 for ['[CLS]setccouta morallygled tak marker [SEP]']
[Init] best rec loss: 0.5802363753318787 for ['[CLS] invertebrates gershwin resulted harry sincerity attracted ours [SEP]']
[Init] best rec loss: 0.5723540186882019 for ['[CLS] arose marginsweed identity anchor instinctnberger [SEP]']
[Init] best rec loss: 0.5716621279716492 for ['[CLS] hers bruno drop his learnt cyrillic congestion [SEP]']
[Init] best rec loss: 0.5612049102783203 for ['[CLS] zinc frog margaret parcelsfahanxie weighted [SEP]']
[Init] best rec loss: 0.558039128780365 for ['[CLS] sd efficientlydicated hysteriaboro treasures extraction [SEP]']
[Init] best rec loss: 0.5529696345329285 for ['[CLS]tucket communities sports tent horacelitler [SEP]']
[Init] best perm rec loss: 0.5479102730751038 for ['[CLS] communitiesli sportstlertucket horace tent [SEP]']
[Init] best perm rec loss: 0.5462640523910522 for ['[CLS]li communities tenttler horacetucket sports [SEP]']
[Init] best perm rec loss: 0.5428686738014221 for ['[CLS] tenttuckettler horace communities sportsli [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.090 (perp=9.760, rec=0.138), tot_loss_proj:2.265 [t=0.11s]
prediction: ['[CLS] bread chewed bread martha chewed. was [SEP]']
Attempt swap
Moved token
[ 100/ 500] tot_loss=1.795 (perp=8.478, rec=0.099), tot_loss_proj:2.012 [t=0.12s]
prediction: ['[CLS] the chewed by bread martha chewed. [SEP]']
[ 150/ 500] tot_loss=1.774 (perp=8.478, rec=0.078), tot_loss_proj:2.032 [t=0.12s]
prediction: ['[CLS] the chewed by bread martha chewed. [SEP]']
Attempt swap
Moved token
[ 200/ 500] tot_loss=1.576 (perp=7.474, rec=0.081), tot_loss_proj:1.784 [t=0.12s]
prediction: ['[CLS] the bread chewed by martha chewed. [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.543 (perp=7.379, rec=0.067), tot_loss_proj:1.692 [t=0.12s]
prediction: ['[CLS] the bread was by chewed martha. [SEP]']
[ 300/ 500] tot_loss=1.538 (perp=7.379, rec=0.062), tot_loss_proj:1.687 [t=0.13s]
prediction: ['[CLS] the bread was by chewed martha. [SEP]']
Attempt swap
Moved token
[ 350/ 500] tot_loss=1.291 (perp=6.120, rec=0.067), tot_loss_proj:1.393 [t=0.12s]
prediction: ['[CLS] the bread was chewed by martha. [SEP]']
Attempt swap
[ 400/ 500] tot_loss=1.283 (perp=6.120, rec=0.059), tot_loss_proj:1.400 [t=0.12s]
prediction: ['[CLS] the bread was chewed by martha. [SEP]']
[ 450/ 500] tot_loss=1.288 (perp=6.120, rec=0.064), tot_loss_proj:1.401 [t=0.12s]
prediction: ['[CLS] the bread was chewed by martha. [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.291 (perp=6.120, rec=0.067), tot_loss_proj:1.404 [t=0.12s]
prediction: ['[CLS] the bread was chewed by martha. [SEP]']
Done with input #29 of 50.
reference: 
========================
[CLS] the bread was chewed by martha. [SEP]
========================
predicted: 
========================
[CLS] the bread was chewed by martha. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 100.000 | p: 100.000 | r: 100.000
rouge2     | fm: 100.000 | p: 100.000 | r: 100.000
rougeL     | fm: 100.000 | p: 100.000 | r: 100.000
rougeLsum  | fm: 100.000 | p: 100.000 | r: 100.000
r1fm+r2fm = 200.000

[Aggregate metrics]:
rouge1     | fm: 89.768 | p: 89.340 | r: 90.349
rouge2     | fm: 50.195 | p: 49.961 | r: 50.576
rougeL     | fm: 78.628 | p: 78.214 | r: 79.147
rougeLsum  | fm: 78.703 | p: 78.336 | r: 79.158
r1fm+r2fm = 139.963

input #29 time: 0:01:33 | total time: 0:46:50


Running input #30 of 50.
reference: 
========================
Read Fred's story, I also want to.
========================
Debug: ids_shape = 13, pads = [13]
Debug: input ids = tensor([[ 101, 3191, 5965, 1005, 1055, 2466, 1010, 1045, 2036, 2215, 2000, 1012,
          102]], device='cuda:0')
Debug: ref = ["[CLS] read fred's story, i also want to. [SEP]"]
[Init] best rec loss: 0.5861144065856934 for ['[CLS] notch stretchosemoor illustrating authority nanskesor robes augusto [SEP]']
[Init] best rec loss: 0.5796241760253906 for ['[CLS] wichita tourists laos lightning detached yankee paid harris finger⅔ static [SEP]']
[Init] best rec loss: 0.567736029624939 for ['[CLS] vents warlord undertook 175 outfielder staff winked celebrity runwaysiegem [SEP]']
[Init] best rec loss: 0.5663955807685852 for ['[CLS] khalifauallyurities harlow oppressive polytechnic feedback ck burlington initiate mammals [SEP]']
[Init] best rec loss: 0.5636225342750549 for ['[CLS]dia abolishedesian choreographer massif bestowed monograph dat yourselves manager abstract [SEP]']
[Init] best rec loss: 0.559100329875946 for ['[CLS] chevalier overturnedmun valkyriechuk planetaryovaiens disappears burrolin [SEP]']
[Init] best rec loss: 0.5581340789794922 for ['[CLS]se arabian上 squadrons portrayed jealousyhawks inclined seat maid vimes [SEP]']
[Init] best rec loss: 0.5554350018501282 for ['[CLS] disposed မ factual kant singletoncourt march billedescufliesbek [SEP]']
[Init] best rec loss: 0.5553464889526367 for ['[CLS]onate 296 will straussrae vuelta seamen harassment flutteringlift timor [SEP]']
[Init] best perm rec loss: 0.5514711737632751 for ['[CLS] seamen timoronate vuelta strauss 296 will harassmentraelift fluttering [SEP]']
[Init] best perm rec loss: 0.5513221621513367 for ['[CLS] flutteringonate vuelta strauss 296lift timor willrae seamen harassment [SEP]']
[Init] best perm rec loss: 0.546043872833252 for ['[CLS]onatelift 296 harassmentrae strauss timor seamen vuelta fluttering will [SEP]']
[Init] best perm rec loss: 0.5454418063163757 for ['[CLS] harassmentrae flutteringonate seamen vuelta strauss timor will 296lift [SEP]']
[Init] best perm rec loss: 0.545420229434967 for ['[CLS]onate straussrae seamen harassment 296 timor fluttering will vueltalift [SEP]']
[Init] best perm rec loss: 0.5445815324783325 for ['[CLS] harassment vuelta timor strauss will seamen flutteringonate 296raelift [SEP]']
[Init] best perm rec loss: 0.5436110496520996 for ['[CLS]rae timor straussonate seamenlift fluttering vuelta harassment will 296 [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.947 (perp=9.141, rec=0.119), tot_loss_proj:2.154 [t=0.12s]
prediction: ["[CLS] read story story'story story i. he i also [SEP]"]
Attempt swap
Moved sequence
[ 100/ 500] tot_loss=1.685 (perp=7.959, rec=0.093), tot_loss_proj:1.883 [t=0.11s]
prediction: ["[CLS] i read fred story'fred,. i want also [SEP]"]
[ 150/ 500] tot_loss=1.791 (perp=8.583, rec=0.074), tot_loss_proj:1.985 [t=0.12s]
prediction: ['[CLS] i read fred story s fred,. i want also [SEP]']
Attempt swap
Swapped tokens
[ 200/ 500] tot_loss=1.517 (perp=7.223, rec=0.072), tot_loss_proj:1.713 [t=0.12s]
prediction: ["[CLS] i read'story, fred '. i want also [SEP]"]
Attempt swap
Put prefix at the end
[ 250/ 500] tot_loss=1.401 (perp=6.621, rec=0.077), tot_loss_proj:1.581 [t=0.13s]
prediction: ["[CLS] i want also to read s story, fred '. [SEP]"]
[ 300/ 500] tot_loss=1.393 (perp=6.621, rec=0.069), tot_loss_proj:1.576 [t=0.12s]
prediction: ["[CLS] i want also to read s story, fred '. [SEP]"]
Attempt swap
Moved token
[ 350/ 500] tot_loss=1.204 (perp=5.658, rec=0.072), tot_loss_proj:1.390 [t=0.13s]
prediction: ["[CLS] i want also to read's story, fred. [SEP]"]
Attempt swap
Moved token
[ 400/ 500] tot_loss=1.076 (perp=5.012, rec=0.074), tot_loss_proj:1.251 [t=0.12s]
prediction: ["[CLS] i want also to read fred's story,. [SEP]"]
[ 450/ 500] tot_loss=1.061 (perp=5.012, rec=0.059), tot_loss_proj:1.251 [t=0.12s]
prediction: ["[CLS] i want also to read fred's story,. [SEP]"]
Attempt swap
Moved token
[ 500/ 500] tot_loss=0.957 (perp=4.488, rec=0.060), tot_loss_proj:1.131 [t=0.12s]
prediction: ["[CLS] i also want to read fred's story,. [SEP]"]
Done with input #30 of 50.
reference: 
========================
[CLS] read fred's story, i also want to. [SEP]
========================
predicted: 
========================
[CLS] i want also to read's story, fred. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 100.000 | p: 100.000 | r: 100.000
rouge2     | fm: 11.111 | p: 11.111 | r: 11.111
rougeL     | fm: 50.000 | p: 50.000 | r: 50.000
rougeLsum  | fm: 50.000 | p: 50.000 | r: 50.000
r1fm+r2fm = 111.111

[Aggregate metrics]:
rouge1     | fm: 90.113 | p: 89.710 | r: 90.628
rouge2     | fm: 49.007 | p: 48.747 | r: 49.435
rougeL     | fm: 77.797 | p: 77.494 | r: 78.203
rougeLsum  | fm: 77.739 | p: 77.456 | r: 78.213
r1fm+r2fm = 139.120

input #30 time: 0:01:32 | total time: 0:48:22


Running input #31 of 50.
reference: 
========================
Some of the water from melted snow also goes into the ground for plants.
========================
Debug: ids_shape = 17, pads = [17]
Debug: input ids = tensor([[  101,  2070,  1997,  1996,  2300,  2013, 12501,  4586,  2036,  3632,
          2046,  1996,  2598,  2005,  4264,  1012,   102]], device='cuda:0')
Debug: ref = ['[CLS] some of the water from melted snow also goes into the ground for plants. [SEP]']
[Init] best rec loss: 0.6356274485588074 for ['[CLS] mcc wilde bragg entirely alfredogel distinctionₙ wingspan prior af stories inspections counterparts 1946 [SEP]']
[Init] best rec loss: 0.5907589793205261 for ['[CLS]ely aba wandered pretended stabilization moiool penetrating miclized smellgb boardedˈ muddy [SEP]']
[Init] best rec loss: 0.5895412564277649 for ['[CLS] cases byriz buildisticelia uncomfortable amendments~ waspsmbre collectors defeat generations & [SEP]']
[Init] best rec loss: 0.5819854140281677 for ['[CLS] bertie warm新 digitkind injunction world singsarth soda pharmaceuticals undead pierce petitedget [SEP]']
[Init] best rec loss: 0.5778228640556335 for ['[CLS] becky everything enthusiasm dormant platforms sigma⋅ held large bronx geometric includes fugitive townslift [SEP]']
[Init] best rec loss: 0.5757947564125061 for ['[CLS] sa bolt beatty crimes jurassic advertisements kid electrified hungarians minded restaurant materials creditedoja regardless [SEP]']
[Init] best rec loss: 0.5747383832931519 for ['[CLS] sweet fluenttate jingsley rodrigo prevention caowear reinstated cosmosව sundance vogel channel [SEP]']
[Init] best rec loss: 0.5721421241760254 for ['[CLS] tokugawavr ct lbs unnoticedyuan series teased zeke forbade fi scroll checked nomination mathias [SEP]']
[Init] best rec loss: 0.5646989941596985 for ['[CLS] djfera opinion pledge daughtergr grassland metrocar 1954iniabilities class baggage malawi [SEP]']
[Init] best perm rec loss: 0.5629626512527466 for ['[CLS] 1954car metro grasslandfera malawi baggagebilitiesiniagr dj daughter class opinion pledge [SEP]']
[Init] best perm rec loss: 0.5622288584709167 for ['[CLS] metro djgriniacarfera pledge baggage grasslandbilities malawi 1954 class daughter opinion [SEP]']
[Init] best perm rec loss: 0.5611289739608765 for ['[CLS] grasslandfera 1954car opinioninia malawi baggage metro pledge classgr daughter djbilities [SEP]']
[Init] best perm rec loss: 0.5588518381118774 for ['[CLS] grasslandcar classbilities opinionferagrinia metro pledge baggage daughter dj 1954 malawi [SEP]']
[Init] best perm rec loss: 0.5584047436714172 for ['[CLS] dj pledge baggageferabilities class malawigrinia 1954 opinion daughtercar grassland metro [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.681 (perp=7.812, rec=0.118), tot_loss_proj:1.833 [t=0.12s]
prediction: ['[CLS] also some water water some snow also the a east from plants for plants. [SEP]']
Attempt swap
Moved token
[ 100/ 500] tot_loss=1.254 (perp=5.821, rec=0.090), tot_loss_proj:1.403 [t=0.12s]
prediction: ['[CLS] also some water the water of snow also goes water from snow for plants. [SEP]']
[ 150/ 500] tot_loss=1.265 (perp=5.919, rec=0.081), tot_loss_proj:1.372 [t=0.12s]
prediction: ['[CLS] some some water from water goes snow also goes into the ground for plants. [SEP]']
Attempt swap
Swapped tokens
[ 200/ 500] tot_loss=1.171 (perp=5.537, rec=0.064), tot_loss_proj:1.269 [t=0.12s]
prediction: ['[CLS] from some water from water some snow also goes into the ground for plants. [SEP]']
Attempt swap
Swapped tokens
[ 250/ 500] tot_loss=1.101 (perp=5.126, rec=0.076), tot_loss_proj:1.203 [t=0.12s]
prediction: ['[CLS] for some water from water the snow also goes into the ground from plants. [SEP]']
[ 300/ 500] tot_loss=1.034 (perp=4.839, rec=0.066), tot_loss_proj:1.141 [t=0.12s]
prediction: ['[CLS] for some water from water the snow also goes into the ground for plants. [SEP]']
Attempt swap
Moved token
[ 350/ 500] tot_loss=0.993 (perp=4.628, rec=0.068), tot_loss_proj:1.087 [t=0.13s]
prediction: ['[CLS] water for some water from the snow also goes into the ground for plants. [SEP]']
Attempt swap
Moved sequence
[ 400/ 500] tot_loss=0.926 (perp=4.310, rec=0.064), tot_loss_proj:1.000 [t=0.12s]
prediction: ['[CLS] some water from the snow also goes into the ground for water for plants. [SEP]']
[ 450/ 500] tot_loss=0.924 (perp=4.310, rec=0.062), tot_loss_proj:1.018 [t=0.12s]
prediction: ['[CLS] some water from the snow also goes into the ground for water for plants. [SEP]']
Attempt swap
Moved sequence
[ 500/ 500] tot_loss=0.886 (perp=4.076, rec=0.071), tot_loss_proj:0.983 [t=0.13s]
prediction: ['[CLS] water from the snow also goes into the ground for water for some plants. [SEP]']
Done with input #31 of 50.
reference: 
========================
[CLS] some of the water from melted snow also goes into the ground for plants. [SEP]
========================
predicted: 
========================
[CLS] water for some water from the snow also goes into the ground for plants. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 87.500 | p: 87.500 | r: 87.500
rouge2     | fm: 60.000 | p: 60.000 | r: 60.000
rougeL     | fm: 81.250 | p: 81.250 | r: 81.250
rougeLsum  | fm: 81.250 | p: 81.250 | r: 81.250
r1fm+r2fm = 147.500

[Aggregate metrics]:
rouge1     | fm: 90.026 | p: 89.617 | r: 90.571
rouge2     | fm: 49.351 | p: 49.097 | r: 49.688
rougeL     | fm: 77.834 | p: 77.517 | r: 78.303
rougeLsum  | fm: 77.875 | p: 77.674 | r: 78.259
r1fm+r2fm = 139.377

input #31 time: 0:01:34 | total time: 0:49:56


Running input #32 of 50.
reference: 
========================
Bob is very serious about Mary, but less so than Paul.
========================
Debug: ids_shape = 15, pads = [15]
Debug: input ids = tensor([[ 101, 3960, 2003, 2200, 3809, 2055, 2984, 1010, 2021, 2625, 2061, 2084,
         2703, 1012,  102]], device='cuda:0')
Debug: ref = ['[CLS] bob is very serious about mary, but less so than paul. [SEP]']
[Init] best rec loss: 0.5917906761169434 for ['[CLS] table boon bruceaneous pronunciation titularcino武iculate kappa łodz tasted compression [SEP]']
[Init] best rec loss: 0.5842478275299072 for ['[CLS] movie kildatz justine modernization rag mel yuriznta internationals nhsrou [SEP]']
[Init] best rec loss: 0.5763410329818726 for ['[CLS] calder bind race habsburg titlerates cateringtrum royalties cared sgt wilfred officers [SEP]']
[Init] best rec loss: 0.5756044387817383 for ['[CLS] situated battled minorscker chichester baton gown stock barak [PAD] batting 308 hers [SEP]']
[Init] best rec loss: 0.5727355480194092 for ['[CLS]yal occupied zulu gravitydrome jew skiing panda denise shear hierarchicaluses taste [SEP]']
[Init] best rec loss: 0.5726211667060852 for ['[CLS] inheritance benches lucivarlaise romania northampton overthrow buckley sparkledthing lanka verticallydice [SEP]']
[Init] best rec loss: 0.5698510408401489 for ['[CLS]rani keyboards chapel η three judaismsystems retired26 backdrop begged montheki [SEP]']
[Init] best rec loss: 0.5662733316421509 for ['[CLS] sony missngingata lamb duelmaker obvious recognizes bathurstiring cheers sprang [SEP]']
[Init] best rec loss: 0.5637954473495483 for ['[CLS] bmw nmi immense volume clumsy mindsメ khanmobile cheneyame capital blended [SEP]']
[Init] best rec loss: 0.5622293949127197 for ['[CLS] brings brotherhood dancernets seasonsticus spectraحthes mother armadarellalined [SEP]']
[Init] best rec loss: 0.5602639317512512 for ['[CLS] cater music clinched wren og riddle credit favourite unnoticed packetitopressiveiere [SEP]']
[Init] best rec loss: 0.5564870238304138 for ['[CLS]⁄₄uld glad propose circleswheel dogs uk whitish consent risk textual luxurious [SEP]']
[Init] best perm rec loss: 0.5542444586753845 for ['[CLS] riskwheel whitish textual⁄₄ consentuld glad dogs uk circles propose luxurious [SEP]']
[Init] best perm rec loss: 0.552301824092865 for ['[CLS] dogs whitish⁄₄ risk ukwheel consent luxurious glad textualuld propose circles [SEP]']
[Init] best perm rec loss: 0.550441563129425 for ['[CLS]wheel dogs risk whitish circles luxurious propose uk glad consent textual⁄₄uld [SEP]']
[Init] best perm rec loss: 0.5481091737747192 for ['[CLS] uk luxurious propose⁄₄ textual circles whitish dogs gladwheel risk consentuld [SEP]']
[Init] best perm rec loss: 0.5478822588920593 for ['[CLS]wheel glad⁄₄ consent risk uk whitish dogs propose textual luxuriousuld circles [SEP]']
[Init] best perm rec loss: 0.5476343035697937 for ['[CLS] luxurious dogs whitishuldwheel circles consent glad uk risk textual⁄₄ propose [SEP]']
[Init] best perm rec loss: 0.5473392605781555 for ['[CLS] luxurious gladwheel consent⁄₄ dogs risk circles textual whitish uk proposeuld [SEP]']
[Init] best perm rec loss: 0.5467572212219238 for ['[CLS] luxurious gladuld dogs⁄₄ whitish risk uk circleswheel propose consent textual [SEP]']
[Init] best perm rec loss: 0.5460227131843567 for ['[CLS] whitish luxurious uk⁄₄ glad circlesuldwheel dogs propose textual consent risk [SEP]']
[Init] best perm rec loss: 0.5444315075874329 for ['[CLS]⁄₄ circles luxurious consent risk propose uk dogs gladuldwheel whitish textual [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.921 (perp=13.592, rec=0.203), tot_loss_proj:3.103 [t=0.12s]
prediction: ['[CLS] [SEP] you sundays bob bobpathy butonda than seriousret sabbath ku [SEP]']
Attempt swap
Swapped tokens
[ 100/ 500] tot_loss=2.435 (perp=11.427, rec=0.149), tot_loss_proj:2.653 [t=0.12s]
prediction: ['[CLS] [SEP] you sundays serious mary [PAD] but ku less serious, paulonda [SEP]']
[ 150/ 500] tot_loss=2.096 (perp=9.755, rec=0.145), tot_loss_proj:2.293 [t=0.12s]
prediction: ['[CLS] [SEP] mary [SEP] serious mary‡ but [SEP] less serious. paulonda [SEP]']
Attempt swap
Swapped tokens
[ 200/ 500] tot_loss=2.149 (perp=10.054, rec=0.139), tot_loss_proj:2.316 [t=0.12s]
prediction: ['[CLS] [SEP] mary very bother mary serious but [SEP] less serious about paul [SEP] [SEP]']
Attempt swap
Swapped tokens
[ 250/ 500] tot_loss=2.086 (perp=9.750, rec=0.136), tot_loss_proj:2.346 [t=0.12s]
prediction: ['[CLS] [SEP] paul [PAD] now mary serious but [SEP] less serious than mary [SEP] [SEP]']
[ 300/ 500] tot_loss=2.128 (perp=10.029, rec=0.122), tot_loss_proj:2.387 [t=0.12s]
prediction: ['[CLS], paul [PAD] now mary bob but [SEP] less serious than paul [SEP] [SEP]']
Attempt swap
Swapped tokens
[ 350/ 500] tot_loss=2.299 (perp=10.869, rec=0.125), tot_loss_proj:2.583 [t=0.12s]
prediction: ['[CLS] medals paul [PAD] now mary bob but as less serious than paul [SEP] [SEP]']
Attempt swap
Moved token
[ 400/ 500] tot_loss=1.790 (perp=8.397, rec=0.111), tot_loss_proj:2.093 [t=0.13s]
prediction: ['[CLS] he [PAD] now mary bob paul but as less serious than paul [SEP] [SEP]']
[ 450/ 500] tot_loss=1.754 (perp=8.187, rec=0.117), tot_loss_proj:2.013 [t=0.12s]
prediction: ['[CLS] he [PAD] is mary bob paul but as less serious than paul [SEP] [SEP]']
Attempt swap
Moved sequence
[ 500/ 500] tot_loss=1.798 (perp=8.332, rec=0.132), tot_loss_proj:1.963 [t=0.12s]
prediction: ['[CLS] [SEP] is mary bob paul but [SEP] less serious than paul [SEP] [PAD] [SEP]']
Done with input #32 of 50.
reference: 
========================
[CLS] bob is very serious about mary, but less so than paul. [SEP]
========================
predicted: 
========================
[CLS] he [PAD] now mary bob paul but as less serious than paul [SEP] [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 64.286 | p: 60.000 | r: 69.231
rouge2     | fm: 15.385 | p: 14.286 | r: 16.667
rougeL     | fm: 50.000 | p: 46.667 | r: 53.846
rougeLsum  | fm: 50.000 | p: 46.667 | r: 53.846
r1fm+r2fm = 79.670

[Aggregate metrics]:
rouge1     | fm: 89.189 | p: 88.746 | r: 89.797
rouge2     | fm: 48.437 | p: 48.215 | r: 48.742
rougeL     | fm: 76.868 | p: 76.451 | r: 77.372
rougeLsum  | fm: 76.914 | p: 76.553 | r: 77.520
r1fm+r2fm = 137.626

input #32 time: 0:01:33 | total time: 0:51:30


Running input #33 of 50.
reference: 
========================
Ayala sent the diamond necklace back.
========================
Debug: ids_shape = 10, pads = [10]
Debug: input ids = tensor([[  101,  1037, 28617,  2741,  1996,  6323, 13016,  2067,  1012,   102]],
       device='cuda:0')
Debug: ref = ['[CLS] ayala sent the diamond necklace back. [SEP]']
[Init] best rec loss: 0.6052134037017822 for ['[CLS] illustrating rescue cliftonarium contractingters demotedzam [SEP]']
[Init] best rec loss: 0.578342080116272 for ['[CLS] 香 aidsmetoss beer tension kingsleycor [SEP]']
[Init] best rec loss: 0.5701082348823547 for ['[CLS]film puget dipping combining periods shrinkingiana let [SEP]']
[Init] best rec loss: 0.5652689337730408 for ['[CLS] subway brewers ziperre programmingrgh partridge northwestern [SEP]']
[Init] best rec loss: 0.5525416731834412 for ['[CLS] brewers hermesъ ghanaian task trout ordersツ [SEP]']
[Init] best rec loss: 0.536724865436554 for ['[CLS]明 modulesnel prowess hope oyster kids schwarz [SEP]']
[Init] best perm rec loss: 0.5360270738601685 for ['[CLS] kids prowess oysternel modules schwarz hope明 [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.300 (perp=10.781, rec=0.144), tot_loss_proj:2.427 [t=0.12s]
prediction: ['[CLS]yala did [SEP] diamond necklace. sent necklace [SEP]']
Attempt swap
Moved sequence
[ 100/ 500] tot_loss=2.034 (perp=9.624, rec=0.109), tot_loss_proj:2.244 [t=0.12s]
prediction: ['[CLS] [SEP] diamond necklace. sentyala did necklace [SEP]']
[ 150/ 500] tot_loss=1.867 (perp=8.874, rec=0.092), tot_loss_proj:2.054 [t=0.12s]
prediction: ['[CLS] a diamond necklace. sentyala sent back [SEP]']
Attempt swap
Put prefix at the end
[ 200/ 500] tot_loss=1.951 (perp=9.333, rec=0.084), tot_loss_proj:2.145 [t=0.13s]
prediction: ['[CLS] sentyala sent back [SEP] diamond necklace. [SEP]']
Attempt swap
Moved sequence
[ 250/ 500] tot_loss=1.691 (perp=8.018, rec=0.087), tot_loss_proj:1.865 [t=0.13s]
prediction: ['[CLS] a diamond necklace sentyala sent back. [SEP]']
[ 300/ 500] tot_loss=1.624 (perp=7.733, rec=0.077), tot_loss_proj:1.830 [t=0.12s]
prediction: ['[CLS] a diamond necklace sentyala the back. [SEP]']
Attempt swap
Moved sequence
[ 350/ 500] tot_loss=1.428 (perp=6.761, rec=0.076), tot_loss_proj:1.614 [t=0.12s]
prediction: ['[CLS] ayala the diamond necklace sent back. [SEP]']
Attempt swap
Moved sequence
[ 400/ 500] tot_loss=1.347 (perp=6.359, rec=0.075), tot_loss_proj:1.437 [t=0.12s]
prediction: ['[CLS] ayala sent the diamond necklace back. [SEP]']
[ 450/ 500] tot_loss=1.354 (perp=6.359, rec=0.082), tot_loss_proj:1.456 [t=0.12s]
prediction: ['[CLS] ayala sent the diamond necklace back. [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.337 (perp=6.359, rec=0.065), tot_loss_proj:1.452 [t=0.12s]
prediction: ['[CLS] ayala sent the diamond necklace back. [SEP]']
Done with input #33 of 50.
reference: 
========================
[CLS] ayala sent the diamond necklace back. [SEP]
========================
predicted: 
========================
[CLS] ayala sent the diamond necklace back. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 100.000 | p: 100.000 | r: 100.000
rouge2     | fm: 100.000 | p: 100.000 | r: 100.000
rougeL     | fm: 100.000 | p: 100.000 | r: 100.000
rougeLsum  | fm: 100.000 | p: 100.000 | r: 100.000
r1fm+r2fm = 200.000

[Aggregate metrics]:
rouge1     | fm: 89.519 | p: 89.068 | r: 90.166
rouge2     | fm: 49.705 | p: 49.413 | r: 49.964
rougeL     | fm: 77.504 | p: 77.130 | r: 78.026
rougeLsum  | fm: 77.555 | p: 77.264 | r: 78.082
r1fm+r2fm = 139.224

input #33 time: 0:01:33 | total time: 0:53:03


Running input #34 of 50.
reference: 
========================
Jessica sprayed paint under the table.
========================
Debug: ids_shape = 9, pads = [9]
Debug: input ids = tensor([[  101,  8201, 25401,  6773,  2104,  1996,  2795,  1012,   102]],
       device='cuda:0')
Debug: ref = ['[CLS] jessica sprayed paint under the table. [SEP]']
[Init] best rec loss: 0.6326274275779724 for ['[CLS] disastrous smack¹ penawl elsewhereroom [SEP]']
[Init] best rec loss: 0.6277580261230469 for ['[CLS]eda valued lombardy diploma vacancy municipal caucus [SEP]']
[Init] best rec loss: 0.5941543579101562 for ['[CLS] montagu ministers alstem casualty draft fortunes [SEP]']
[Init] best rec loss: 0.5859198570251465 for ['[CLS] embarked ⊗ mathias expanse mla playback debt [SEP]']
[Init] best rec loss: 0.5757555365562439 for ['[CLS] commercial payment carolynო districts gameplay 264 [SEP]']
[Init] best rec loss: 0.574303925037384 for ['[CLS]kei ourselvesshan rockets quite bust aye [SEP]']
[Init] best rec loss: 0.5692350268363953 for ['[CLS]و shootermian armament perchedeobahn [SEP]']
[Init] best perm rec loss: 0.5682156682014465 for ['[CLS]وeomian shooter armament perchedbahn [SEP]']
[Init] best perm rec loss: 0.5664240121841431 for ['[CLS]eo shooter perchedوbahn armamentmian [SEP]']
[Init] best perm rec loss: 0.5654399991035461 for ['[CLS]eoو shootermian armamentbahn perched [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.961 (perp=9.275, rec=0.106), tot_loss_proj:2.134 [t=0.12s]
prediction: ['[CLS] jessica sprayed sprayed sprayed sprayed paint. [SEP]']
Attempt swap
Swapped tokens
[ 100/ 500] tot_loss=1.961 (perp=9.382, rec=0.084), tot_loss_proj:2.085 [t=0.12s]
prediction: ['[CLS] jessica sprayed sprayed filing table paint. [SEP]']
[ 150/ 500] tot_loss=2.160 (perp=10.473, rec=0.066), tot_loss_proj:2.458 [t=0.12s]
prediction: ['[CLS] jessica under sprayed [PAD] table paint. [SEP]']
Attempt swap
Swapped tokens
[ 200/ 500] tot_loss=1.884 (perp=9.134, rec=0.057), tot_loss_proj:2.106 [t=0.13s]
prediction: ['[CLS] jessica the sprayed under table paint. [SEP]']
Attempt swap
Moved sequence
[ 250/ 500] tot_loss=1.575 (perp=7.544, rec=0.067), tot_loss_proj:1.678 [t=0.12s]
prediction: ['[CLS] jessica sprayed under the table paint. [SEP]']
[ 300/ 500] tot_loss=1.577 (perp=7.544, rec=0.069), tot_loss_proj:1.673 [t=0.12s]
prediction: ['[CLS] jessica sprayed under the table paint. [SEP]']
Attempt swap
Moved sequence
[ 350/ 500] tot_loss=1.425 (perp=6.779, rec=0.069), tot_loss_proj:1.492 [t=0.12s]
prediction: ['[CLS] jessica sprayed paint under the table. [SEP]']
Attempt swap
Moved token
[ 400/ 500] tot_loss=1.396 (perp=6.642, rec=0.068), tot_loss_proj:1.483 [t=0.12s]
prediction: ['[CLS] jessica sprayed the paint under table. [SEP]']
[ 450/ 500] tot_loss=1.389 (perp=6.642, rec=0.061), tot_loss_proj:1.489 [t=0.12s]
prediction: ['[CLS] jessica sprayed the paint under table. [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.387 (perp=6.642, rec=0.059), tot_loss_proj:1.486 [t=0.12s]
prediction: ['[CLS] jessica sprayed the paint under table. [SEP]']
Done with input #34 of 50.
reference: 
========================
[CLS] jessica sprayed paint under the table. [SEP]
========================
predicted: 
========================
[CLS] jessica sprayed the paint under table. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 100.000 | p: 100.000 | r: 100.000
rouge2     | fm: 57.143 | p: 57.143 | r: 57.143
rougeL     | fm: 87.500 | p: 87.500 | r: 87.500
rougeLsum  | fm: 87.500 | p: 87.500 | r: 87.500
r1fm+r2fm = 157.143

[Aggregate metrics]:
rouge1     | fm: 89.817 | p: 89.401 | r: 90.461
rouge2     | fm: 50.087 | p: 49.803 | r: 50.398
rougeL     | fm: 77.758 | p: 77.354 | r: 78.297
rougeLsum  | fm: 77.971 | p: 77.559 | r: 78.496
r1fm+r2fm = 139.904

input #34 time: 0:01:33 | total time: 0:54:36


Running input #35 of 50.
reference: 
========================
John is refused.
========================
Debug: ids_shape = 6, pads = [6]
Debug: input ids = tensor([[ 101, 2198, 2003, 4188, 1012,  102]], device='cuda:0')
Debug: ref = ['[CLS] john is refused. [SEP]']
[Init] best rec loss: 0.6470088958740234 for ['[CLS] funkyhawk dipping currie [SEP]']
[Init] best rec loss: 0.6243705153465271 for ['[CLS]ex day flashbacklak [SEP]']
[Init] best rec loss: 0.6161644458770752 for ['[CLS]una kylehead totals [SEP]']
[Init] best rec loss: 0.6158973574638367 for ['[CLS] peek legal fellowship receipts [SEP]']
[Init] best rec loss: 0.6137027144432068 for ['[CLS] stripping ching bikes г [SEP]']
[Init] best rec loss: 0.6100320816040039 for ['[CLS] flown outdoor mikey miniatures [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.274 (perp=10.562, rec=0.162), tot_loss_proj:2.457 [t=0.11s]
prediction: ['[CLS] refused refused. refused [SEP]']
Attempt swap
Swapped tokens
[ 100/ 500] tot_loss=1.670 (perp=7.883, rec=0.093), tot_loss_proj:2.000 [t=0.12s]
prediction: ['[CLS] is refused. john [SEP]']
[ 150/ 500] tot_loss=1.658 (perp=7.883, rec=0.081), tot_loss_proj:1.970 [t=0.13s]
prediction: ['[CLS] is refused. john [SEP]']
Attempt swap
Put prefix at the end
[ 200/ 500] tot_loss=1.436 (perp=6.835, rec=0.069), tot_loss_proj:1.647 [t=0.12s]
prediction: ['[CLS] john is refused. [SEP]']
Attempt swap
[ 250/ 500] tot_loss=1.427 (perp=6.835, rec=0.060), tot_loss_proj:1.643 [t=0.12s]
prediction: ['[CLS] john is refused. [SEP]']
[ 300/ 500] tot_loss=1.433 (perp=6.835, rec=0.066), tot_loss_proj:1.637 [t=0.12s]
prediction: ['[CLS] john is refused. [SEP]']
Attempt swap
[ 350/ 500] tot_loss=1.426 (perp=6.835, rec=0.059), tot_loss_proj:1.648 [t=0.13s]
prediction: ['[CLS] john is refused. [SEP]']
Attempt swap
[ 400/ 500] tot_loss=1.429 (perp=6.835, rec=0.062), tot_loss_proj:1.649 [t=0.11s]
prediction: ['[CLS] john is refused. [SEP]']
[ 450/ 500] tot_loss=1.431 (perp=6.835, rec=0.064), tot_loss_proj:1.639 [t=0.13s]
prediction: ['[CLS] john is refused. [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.426 (perp=6.835, rec=0.059), tot_loss_proj:1.630 [t=0.14s]
prediction: ['[CLS] john is refused. [SEP]']
Done with input #35 of 50.
reference: 
========================
[CLS] john is refused. [SEP]
========================
predicted: 
========================
[CLS] john is refused. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 100.000 | p: 100.000 | r: 100.000
rouge2     | fm: 100.000 | p: 100.000 | r: 100.000
rougeL     | fm: 100.000 | p: 100.000 | r: 100.000
rougeLsum  | fm: 100.000 | p: 100.000 | r: 100.000
r1fm+r2fm = 200.000

[Aggregate metrics]:
rouge1     | fm: 90.125 | p: 89.704 | r: 90.777
rouge2     | fm: 51.438 | p: 51.134 | r: 51.743
rougeL     | fm: 78.486 | p: 78.142 | r: 79.004
rougeLsum  | fm: 78.622 | p: 78.241 | r: 79.097
r1fm+r2fm = 141.563

input #35 time: 0:01:31 | total time: 0:56:07


Running input #36 of 50.
reference: 
========================
This information could have been released by Gorbachev, but he chose not to.
========================
Debug: ids_shape = 19, pads = [19]
Debug: input ids = tensor([[  101,  2023,  2592,  2071,  2031,  2042,  2207,  2011,  2175, 28483,
         16179,  1010,  2021,  2002,  4900,  2025,  2000,  1012,   102]],
       device='cuda:0')
Debug: ref = ['[CLS] this information could have been released by gorbachev, but he chose not to. [SEP]']
[Init] best rec loss: 0.6603928804397583 for ['[CLS] gloves cockjia keyboardtyabainrlinbeellah boyfriend sarah backyard provincialada silky openings grassroots [SEP]']
[Init] best rec loss: 0.635178804397583 for ['[CLS]ο sided screwing edgeskura coffin triumph dax developers [PAD]ification classedaprel ported ebony syn [SEP]']
[Init] best rec loss: 0.6336933374404907 for ['[CLS]tom col ufc museo human myspace launchesেlad geology subspecies amherst completingצ republic smiley bowling [SEP]']
[Init] best rec loss: 0.6236848831176758 for ['[CLS] homme qi repulsed refers omega knives road barrage superfamily espana isotope differential luxury ernest masonic march organic [SEP]']
[Init] best perm rec loss: 0.6196643114089966 for ['[CLS] barrage differential march isotope omega qi refers knives organic repulsed homme ernest masonic luxury superfamily espana road [SEP]']
[Init] best perm rec loss: 0.6145678162574768 for ['[CLS] espana repulsed differential knives omega organic barrage ernest road refers luxury homme qi isotope masonic superfamily march [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.154 (perp=10.084, rec=0.138), tot_loss_proj:2.370 [t=0.12s]
prediction: ['[CLS] his information heired to the he but but [SEP] butchev, chose chose with. [SEP]']
Attempt swap
Moved token
[ 100/ 500] tot_loss=1.613 (perp=7.558, rec=0.101), tot_loss_proj:1.751 [t=0.11s]
prediction: ['[CLS] this information heired could have he but goes [SEP] butchev he chose not to. [SEP]']
[ 150/ 500] tot_loss=1.649 (perp=7.760, rec=0.097), tot_loss_proj:1.803 [t=0.11s]
prediction: ['[CLS] this information heired could by he but by [SEP] butchev he chose not to. [SEP]']
Attempt swap
Moved token
[ 200/ 500] tot_loss=1.710 (perp=8.158, rec=0.078), tot_loss_proj:1.848 [t=0.11s]
prediction: ['[CLS] this information he be he could released but by [SEP]lochev he chose not to. [SEP]']
Attempt swap
Swapped tokens
[ 250/ 500] tot_loss=1.570 (perp=7.471, rec=0.076), tot_loss_proj:1.702 [t=0.12s]
prediction: ['[CLS] this information he released against could be but released [SEP]lochev he chose not to. [SEP]']
[ 300/ 500] tot_loss=1.578 (perp=7.541, rec=0.070), tot_loss_proj:1.711 [t=0.12s]
prediction: ['[CLS] this information he by he could be but released [SEP]lochev he chose not to. [SEP]']
Attempt swap
Moved token
[ 350/ 500] tot_loss=1.522 (perp=7.189, rec=0.084), tot_loss_proj:1.639 [t=0.12s]
prediction: ['[CLS] this information he by he could be released but [SEP]lochev he chose not to. [SEP]']
Attempt swap
Moved sequence
[ 400/ 500] tot_loss=1.363 (perp=6.449, rec=0.073), tot_loss_proj:1.491 [t=0.11s]
prediction: ['[CLS] he by this information he could be released but [SEP]lochev he chose not to. [SEP]']
[ 450/ 500] tot_loss=1.596 (perp=7.527, rec=0.091), tot_loss_proj:1.710 [t=0.12s]
prediction: ['[CLS] he by this informationminated could be released but [SEP]lochev he chose not to. [SEP]']
Attempt swap
Swapped tokens
[ 500/ 500] tot_loss=1.612 (perp=7.692, rec=0.074), tot_loss_proj:1.747 [t=0.11s]
prediction: ['[CLS] he he this information by could be released but [SEP]lochev he chose not to. [SEP]']
Done with input #36 of 50.
reference: 
========================
[CLS] this information could have been released by gorbachev, but he chose not to. [SEP]
========================
predicted: 
========================
[CLS] he by this informationminated could be released but [SEP]lochev he chose not to. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 70.968 | p: 68.750 | r: 73.333
rouge2     | fm: 27.586 | p: 26.667 | r: 28.571
rougeL     | fm: 64.516 | p: 62.500 | r: 66.667
rougeLsum  | fm: 64.516 | p: 62.500 | r: 66.667
r1fm+r2fm = 98.554

[Aggregate metrics]:
rouge1     | fm: 89.671 | p: 89.103 | r: 90.295
rouge2     | fm: 50.637 | p: 50.316 | r: 51.013
rougeL     | fm: 78.040 | p: 77.666 | r: 78.649
rougeLsum  | fm: 78.212 | p: 77.780 | r: 78.775
r1fm+r2fm = 140.307

input #36 time: 0:01:32 | total time: 0:57:40


Running input #37 of 50.
reference: 
========================
Kevin ate spaghetti with a spoon and Geordie did so too.
========================
Debug: ids_shape = 16, pads = [16]
Debug: input ids = tensor([[  101,  4901,  8823, 26666,  2007,  1037, 15642,  1998, 20248, 17080,
          2063,  2106,  2061,  2205,  1012,   102]], device='cuda:0')
Debug: ref = ['[CLS] kevin ate spaghetti with a spoon and geordie did so too. [SEP]']
[Init] best rec loss: 0.6664331555366516 for ['[CLS]anumlimtream ewing virus ferngے coinsnity rook guiding predictable om [SEP]']
[Init] best rec loss: 0.646976888179779 for ['[CLS]udy 15th elle plczzwine dl freeway microphone 194 grind ideallyfle fifteenth [SEP]']
[Init] best rec loss: 0.645915150642395 for ['[CLS] subcontinent walks bellmament emerald actual myth successes boilers touchdowns bridges circumstances periodical collaborators [SEP]']
[Init] best rec loss: 0.6414603590965271 for ['[CLS] magicalct prosecutorsemannsel denotes soprano spared durban mini ideas postdoctoral 1570 herr [SEP]']
[Init] best rec loss: 0.6246379017829895 for ['[CLS] materials harvested dar spices score glimpse afraid chapelholder shu gonzaga issue breakup oleg [SEP]']
[Init] best rec loss: 0.6204172372817993 for ['[CLS] justify secluded icao distinguishesancy eat koppenute judy mentioning licence barkyer fact [SEP]']
[Init] best rec loss: 0.6168481111526489 for ['[CLS]poulos harvard deformation endangered heraldic implies maccabi paradigm paterson sparkling quartet soilsfying candidates [SEP]']
[Init] best rec loss: 0.6098838448524475 for ['[CLS] wolverine mutantsoned rabbis gardeningege leaflets imagining audio nickname 25 labeltia [SEP]']
[Init] best rec loss: 0.602236270904541 for ['[CLS] fixtures richersey pre panda pakistanisticitz force airspacegraphy db batsman elliot [SEP]']
[Init] best rec loss: 0.6001036763191223 for ['[CLS] „hot drafted vitaministe federally clarinet lucrativeswell delay addictst wealthy acceleration [SEP]']
[Init] best rec loss: 0.5967262387275696 for ['[CLS] district hyun hangulfle criteria landscapinging tiannos north favorably last pubsbilities [SEP]']
[Init] best rec loss: 0.5929002165794373 for ['[CLS] carvingscis mahal newbury canadians fluctuations rejects librarianː motorolacic seneca ⟨taking [SEP]']
[Init] best perm rec loss: 0.5886135101318359 for ['[CLS] mahal seneca motorola newbury canadians fluctuationscic rejectsː carvingscis librarian ⟨taking [SEP]']
[Init] best perm rec loss: 0.5874447226524353 for ['[CLS] rejects carvings newburytaking mahalcicː canadians motorola librariancis ⟨ fluctuations seneca [SEP]']
[Init] best perm rec loss: 0.5854834914207458 for ['[CLS] librarianːciccis seneca canadians newbury fluctuations carvings rejects mahaltaking motorola ⟨ [SEP]']
[Init] best perm rec loss: 0.5844916105270386 for ['[CLS] senecacic rejects canadians ⟨ mahal carvings newbury librarianː fluctuations motorolacistaking [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.165 (perp=10.185, rec=0.128), tot_loss_proj:2.384 [t=0.11s]
prediction: ['[CLS] kevin virgil did spaghetti did so too spaghetti too with danced and kevin in [SEP]']
Attempt swap
Swapped tokens
[ 100/ 500] tot_loss=1.945 (perp=9.276, rec=0.090), tot_loss_proj:2.115 [t=0.12s]
prediction: ['[CLS] kevin virgil did ate did so too spaghetti too and danced with kevin the [SEP]']
[ 150/ 500] tot_loss=2.252 (perp=10.897, rec=0.073), tot_loss_proj:2.436 [t=0.13s]
prediction: ['[CLS] kevin virgil did ate did spoon too spaghetti too and spoon with kevinರ [SEP]']
Attempt swap
Moved sequence
[ 200/ 500] tot_loss=1.831 (perp=8.740, rec=0.083), tot_loss_proj:2.018 [t=0.12s]
prediction: ['[CLS] kevin virgil did so and ate did spoon too spaghetti spoon with geo. [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.743 (perp=8.391, rec=0.065), tot_loss_proj:1.950 [t=0.13s]
prediction: ['[CLS] kevin virgil did so and did ate spoon too spaghetti spoon with geo. [SEP]']
[ 300/ 500] tot_loss=1.756 (perp=8.391, rec=0.078), tot_loss_proj:1.944 [t=0.13s]
prediction: ['[CLS] kevin virgil did so and did ate spoon too spaghetti spoon with geo. [SEP]']
Attempt swap
Moved token
[ 350/ 500] tot_loss=1.693 (perp=8.131, rec=0.067), tot_loss_proj:1.883 [t=0.13s]
prediction: ['[CLS] kevin virgil did so too and did ate spoon spaghetti spoon with geo. [SEP]']
Attempt swap
Moved token
[ 400/ 500] tot_loss=1.772 (perp=8.457, rec=0.081), tot_loss_proj:1.918 [t=0.13s]
prediction: ['[CLS] kevin virgil did so too and did ate spoon spoon spaghetti withrdi. [SEP]']
[ 450/ 500] tot_loss=1.762 (perp=8.457, rec=0.071), tot_loss_proj:1.923 [t=0.14s]
prediction: ['[CLS] kevin virgil did so too and did ate spoon spoon spaghetti withrdi. [SEP]']
Attempt swap
Swapped tokens
[ 500/ 500] tot_loss=1.688 (perp=8.048, rec=0.078), tot_loss_proj:1.850 [t=0.14s]
prediction: ['[CLS] kevinrdi did so too and did ate spoon spoon spaghetti with virgil. [SEP]']
Done with input #37 of 50.
reference: 
========================
[CLS] kevin ate spaghetti with a spoon and geordie did so too. [SEP]
========================
predicted: 
========================
[CLS] kevinrdi did so too and did ate spoon spoon spaghetti with virgil. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 74.074 | p: 71.429 | r: 76.923
rouge2     | fm: 24.000 | p: 23.077 | r: 25.000
rougeL     | fm: 37.037 | p: 35.714 | r: 38.462
rougeLsum  | fm: 37.037 | p: 35.714 | r: 38.462
r1fm+r2fm = 98.074

[Aggregate metrics]:
rouge1     | fm: 89.209 | p: 88.563 | r: 89.916
rouge2     | fm: 49.968 | p: 49.662 | r: 50.417
rougeL     | fm: 77.060 | p: 76.630 | r: 77.543
rougeLsum  | fm: 77.188 | p: 76.768 | r: 77.734
r1fm+r2fm = 139.177

input #37 time: 0:01:35 | total time: 0:59:16


Running input #38 of 50.
reference: 
========================
John is the kind of fool that I told you about.
========================
Debug: ids_shape = 14, pads = [14]
Debug: input ids = tensor([[ 101, 2198, 2003, 1996, 2785, 1997, 7966, 2008, 1045, 2409, 2017, 2055,
         1012,  102]], device='cuda:0')
Debug: ref = ['[CLS] john is the kind of fool that i told you about. [SEP]']
[Init] best rec loss: 0.6021029353141785 for ['[CLS]ħ segregated warship granted lamp mba parachuteiko lockedlab repair starters [SEP]']
[Init] best rec loss: 0.5983511805534363 for ['[CLS] exposedized mutiny snacks 1931 bronzejiang heller asks slams repeatinghiko [SEP]']
[Init] best rec loss: 0.5953022837638855 for ['[CLS]mmel belle orchestras moi cyclists aside braidmble fairscodes pittbour [SEP]']
[Init] best rec loss: 0.5876695513725281 for ['[CLS] patty trust springfielduricular sapphire parochial steering fundtics valet elizabeth [SEP]']
[Init] best rec loss: 0.587158203125 for ['[CLS] dispatch lease graphs greerolate torches haydn airplane enrolled slicingoder campaigning [SEP]']
[Init] best rec loss: 0.5843034982681274 for ['[CLS] piererson applicants sexuality mikhailym proliferation道yuki turkmenistan gameplay supplied [SEP]']
[Init] best rec loss: 0.5761972069740295 for ['[CLS] mig abs announces ᅴ ancestorseto co telegraph importance mortally franz coincidentally [SEP]']
[Init] best rec loss: 0.573067307472229 for ['[CLS]dhi synth dumphaw beacon translated topologyuously raoul rust provocative commenting [SEP]']
[Init] best perm rec loss: 0.5718218088150024 for ['[CLS] commenting provocative synth rustdhihaw raoul beacon dumpuously translated topology [SEP]']
[Init] best perm rec loss: 0.5692669749259949 for ['[CLS] raoul rust provocativehaw translated beacon dumpuously topologydhi commenting synth [SEP]']
[Init] best perm rec loss: 0.5692111849784851 for ['[CLS]uouslydhi translated synth provocativehaw raoul rust commenting topology beacon dump [SEP]']
[Init] best perm rec loss: 0.5688579678535461 for ['[CLS]uously provocativedhi beacon commenting raoul dump synth topology rust translatedhaw [SEP]']
[Init] best perm rec loss: 0.567044734954834 for ['[CLS] dumpdhiuously raoul provocativehaw rust commenting beacon translated topology synth [SEP]']
[Init] best perm rec loss: 0.5664935111999512 for ['[CLS] provocative raouldhiuously rust commentinghaw topology dump synth translated beacon [SEP]']
[Init] best perm rec loss: 0.5651390552520752 for ['[CLS]uously commenting beacon synth rust translateddhihaw topology dump raoul provocative [SEP]']
[Init] best perm rec loss: 0.5644814372062683 for ['[CLS] raoul synthuously dumpdhi rust beacon topology commenting translated provocativehaw [SEP]']
[Init] best perm rec loss: 0.5632331371307373 for ['[CLS]dhi topologyuously synth rust beacon provocative commenting dumphaw translated raoul [SEP]']
[Init] best perm rec loss: 0.5627636909484863 for ['[CLS] topology raoul beacon translated synth commentinguously provocative rustdhihaw dump [SEP]']
[Init] best perm rec loss: 0.5626150965690613 for ['[CLS] translateduously dump provocative synth beacon commenting topology rustdhi raoulhaw [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.034 (perp=9.535, rec=0.127), tot_loss_proj:2.154 [t=0.13s]
prediction: ['[CLS] john is a the fool fool that weird fool your fool of [SEP]']
Attempt swap
Swapped tokens
[ 100/ 500] tot_loss=1.433 (perp=6.708, rec=0.092), tot_loss_proj:1.644 [t=0.13s]
prediction: ['[CLS] john is told the fool fool that the fool you fool. [SEP]']
[ 150/ 500] tot_loss=1.445 (perp=6.860, rec=0.073), tot_loss_proj:1.627 [t=0.13s]
prediction: ['[CLS] john is told the fool kind that the fool you about. [SEP]']
Attempt swap
Moved token
[ 200/ 500] tot_loss=1.341 (perp=6.255, rec=0.090), tot_loss_proj:1.478 [t=0.14s]
prediction: ['[CLS] john is told the fool that the fool you kind about. [SEP]']
Attempt swap
Moved sequence
[ 250/ 500] tot_loss=1.272 (perp=5.976, rec=0.077), tot_loss_proj:1.447 [t=0.13s]
prediction: ['[CLS] john is told the fool that you kind about the fool. [SEP]']
[ 300/ 500] tot_loss=1.272 (perp=5.976, rec=0.077), tot_loss_proj:1.445 [t=0.13s]
prediction: ['[CLS] john is told the fool that you kind about the fool. [SEP]']
Attempt swap
Moved sequence
[ 350/ 500] tot_loss=1.254 (perp=5.975, rec=0.059), tot_loss_proj:1.443 [t=0.13s]
prediction: ['[CLS] john is told that the fool you kind about the fool. [SEP]']
Attempt swap
Swapped tokens
[ 400/ 500] tot_loss=1.262 (perp=5.915, rec=0.079), tot_loss_proj:1.426 [t=0.13s]
prediction: ['[CLS] john is told that you fool the kind about the fool. [SEP]']
[ 450/ 500] tot_loss=1.236 (perp=5.915, rec=0.053), tot_loss_proj:1.429 [t=0.13s]
prediction: ['[CLS] john is told that you fool the kind about the fool. [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.240 (perp=5.915, rec=0.057), tot_loss_proj:1.424 [t=0.14s]
prediction: ['[CLS] john is told that you fool the kind about the fool. [SEP]']
Done with input #38 of 50.
reference: 
========================
[CLS] john is the kind of fool that i told you about. [SEP]
========================
predicted: 
========================
[CLS] john is told that you fool the kind about the fool. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 84.615 | p: 84.615 | r: 84.615
rouge2     | fm: 25.000 | p: 25.000 | r: 25.000
rougeL     | fm: 53.846 | p: 53.846 | r: 53.846
rougeLsum  | fm: 53.846 | p: 53.846 | r: 53.846
r1fm+r2fm = 109.615

[Aggregate metrics]:
rouge1     | fm: 89.038 | p: 88.502 | r: 89.694
rouge2     | fm: 49.513 | p: 49.254 | r: 49.861
rougeL     | fm: 76.392 | p: 75.924 | r: 76.883
rougeLsum  | fm: 76.635 | p: 76.183 | r: 77.142
r1fm+r2fm = 138.551

input #38 time: 0:01:40 | total time: 1:00:56


Running input #39 of 50.
reference: 
========================
I doubt if you can help me in understanding this.
========================
Debug: ids_shape = 13, pads = [13]
Debug: input ids = tensor([[ 101, 1045, 4797, 2065, 2017, 2064, 2393, 2033, 1999, 4824, 2023, 1012,
          102]], device='cuda:0')
Debug: ref = ['[CLS] i doubt if you can help me in understanding this. [SEP]']
[Init] best rec loss: 0.6467156410217285 for ['[CLS] browser auguste rosa version mayfair seminole maneocytes cairns kazakhstanaya [SEP]']
[Init] best rec loss: 0.6408016085624695 for ['[CLS] deities陽 kiranwer candidatequal ⊕itas guidelines legendary cheyenne [SEP]']
[Init] best rec loss: 0.6333010792732239 for ['[CLS] nirvana diminished equationₒuti sprinted marchesnging differinghall blocked [SEP]']
[Init] best rec loss: 0.6286531686782837 for ['[CLS]200 chemistry meiji guerrillas table shiveringaf crank municipality czech selena [SEP]']
[Init] best rec loss: 0.6285807490348816 for ['[CLS] tourist 35th reorganisation ق locusitegor souza º baptismnen [SEP]']
[Init] best rec loss: 0.6208885908126831 for ['[CLS] zach unto petraflight houstondiment manipulate respectively assassinate myspaceicio [SEP]']
[Init] best rec loss: 0.6167548298835754 for ['[CLS] complex salon ultimatum critically czechhale distillery flawed bt analyticskos [SEP]']
[Init] best rec loss: 0.6121792197227478 for ['[CLS] assumption saxophone attendoir amend uneven rossi paperwork synthetic guilty building [SEP]']
[Init] best rec loss: 0.6119056940078735 for ['[CLS] cutting^ aloud violating demand knuckles augusta failed lininginations corinne [SEP]']
[Init] best rec loss: 0.6110358238220215 for ['[CLS] enterprisecorglesgleszzling 仁ltydek reduced hokkaido lives [SEP]']
[Init] best rec loss: 0.6059634685516357 for ['[CLS] runners playstation milton pricegizingbes assault branding ranks accountants shivered [SEP]']
[Init] best perm rec loss: 0.6052969098091125 for ['[CLS] ranks price runnersgizing playstation brandingbes assault shivered accountants milton [SEP]']
[Init] best perm rec loss: 0.6029830574989319 for ['[CLS] price runners assault playstation milton ranksgizing accountants shivered brandingbes [SEP]']
[Init] best perm rec loss: 0.6009179353713989 for ['[CLS] milton shivered ranks branding accountantsbes runners playstationgizing price assault [SEP]']
[Init] best perm rec loss: 0.6000699996948242 for ['[CLS] playstation ranks price branding accountantsgizing milton runners shivered assaultbes [SEP]']
[Init] best perm rec loss: 0.5993544459342957 for ['[CLS] runnersbesgizing playstation milton branding ranks price shivered assault accountants [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.980 (perp=9.213, rec=0.137), tot_loss_proj:2.208 [t=0.13s]
prediction: ['[CLS] [SEP] if doubt doubt doubt understanding you, understanding. they [SEP]']
Attempt swap
Moved sequence
[ 100/ 500] tot_loss=1.785 (perp=8.357, rec=0.114), tot_loss_proj:2.048 [t=0.13s]
prediction: ['[CLS] i if doubt can doubt understanding you this understanding. track [SEP]']
[ 150/ 500] tot_loss=1.567 (perp=7.419, rec=0.083), tot_loss_proj:1.824 [t=0.14s]
prediction: ['[CLS] i if if can doubt help you this this. understand [SEP]']
Attempt swap
Moved token
[ 200/ 500] tot_loss=1.514 (perp=7.151, rec=0.084), tot_loss_proj:1.763 [t=0.14s]
prediction: ['[CLS] i if if can doubt help you,. understanding this [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.280 (perp=5.866, rec=0.107), tot_loss_proj:1.471 [t=0.13s]
prediction: ['[CLS] i if if can doubt help you, understanding this. [SEP]']
[ 300/ 500] tot_loss=1.632 (perp=7.637, rec=0.104), tot_loss_proj:1.764 [t=0.13s]
prediction: ['[CLS] i [SEP] if can doubt help you [SEP] understanding this. [SEP]']
Attempt swap
Moved token
[ 350/ 500] tot_loss=1.413 (perp=6.595, rec=0.094), tot_loss_proj:1.568 [t=0.14s]
prediction: ['[CLS] [SEP] if i can doubt help you [SEP] understanding this. [SEP]']
Attempt swap
[ 400/ 500] tot_loss=1.406 (perp=6.595, rec=0.087), tot_loss_proj:1.563 [t=0.14s]
prediction: ['[CLS] [SEP] if i can doubt help you [SEP] understanding this. [SEP]']
[ 450/ 500] tot_loss=1.411 (perp=6.595, rec=0.091), tot_loss_proj:1.566 [t=0.13s]
prediction: ['[CLS] [SEP] if i can doubt help you [SEP] understanding this. [SEP]']
Attempt swap
Swapped tokens
[ 500/ 500] tot_loss=1.401 (perp=6.595, rec=0.082), tot_loss_proj:1.573 [t=0.13s]
prediction: ['[CLS] [SEP] if i can doubt help you [SEP] understanding this. [SEP]']
Done with input #39 of 50.
reference: 
========================
[CLS] i doubt if you can help me in understanding this. [SEP]
========================
predicted: 
========================
[CLS] i if if can doubt help you,. understanding this [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 86.957 | p: 90.909 | r: 83.333
rouge2     | fm: 28.571 | p: 30.000 | r: 27.273
rougeL     | fm: 69.565 | p: 72.727 | r: 66.667
rougeLsum  | fm: 69.565 | p: 72.727 | r: 66.667
r1fm+r2fm = 115.528

[Aggregate metrics]:
rouge1     | fm: 89.007 | p: 88.540 | r: 89.581
rouge2     | fm: 48.967 | p: 48.748 | r: 49.269
rougeL     | fm: 76.132 | p: 75.867 | r: 76.575
rougeLsum  | fm: 76.550 | p: 76.305 | r: 76.946
r1fm+r2fm = 137.974

input #39 time: 0:01:40 | total time: 1:02:37


Running input #40 of 50.
reference: 
========================
Was the child running to the car?
========================
Debug: ids_shape = 10, pads = [10]
Debug: input ids = tensor([[ 101, 2001, 1996, 2775, 2770, 2000, 1996, 2482, 1029,  102]],
       device='cuda:0')
Debug: ref = ['[CLS] was the child running to the car? [SEP]']
[Init] best rec loss: 0.5944706797599792 for ['[CLS] tones remote sunni emorypin religionguchi exhaust [SEP]']
[Init] best rec loss: 0.5848435759544373 for ['[CLS]nea cores tend patriotsmbre pistol久 self [SEP]']
[Init] best rec loss: 0.5761210322380066 for ['[CLS] ware flock impulse sierraenes customers 2013 neighbouring [SEP]']
[Init] best rec loss: 0.5715488195419312 for ['[CLS] returningdeh backeduted marquetteriamkeriter [SEP]']
[Init] best rec loss: 0.5649653673171997 for ['[CLS]urt viral orleans cad jacket hen nomadic quebec [SEP]']
[Init] best perm rec loss: 0.5612702369689941 for ['[CLS] nomadic orleans quebec viral cadurt jacket hen [SEP]']
[Init] best perm rec loss: 0.5610542893409729 for ['[CLS] viral hen cad nomadic jacketurt orleans quebec [SEP]']
[Init] best perm rec loss: 0.5603736639022827 for ['[CLS] quebec jacketurt cad viral hen orleans nomadic [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.683 (perp=7.926, rec=0.098), tot_loss_proj:1.872 [t=0.13s]
prediction: ['[CLS] was the the running running car? running [SEP]']
Attempt swap
Put prefix at the end
[ 100/ 500] tot_loss=1.525 (perp=7.208, rec=0.084), tot_loss_proj:1.678 [t=0.13s]
prediction: ['[CLS] running was the child child running car? [SEP]']
[ 150/ 500] tot_loss=1.504 (perp=7.110, rec=0.083), tot_loss_proj:1.646 [t=0.13s]
prediction: ['[CLS] running was the the child running car? [SEP]']
Attempt swap
Moved token
[ 200/ 500] tot_loss=1.479 (perp=7.065, rec=0.066), tot_loss_proj:1.738 [t=0.14s]
prediction: ['[CLS] the bank was the child running car? [SEP]']
Attempt swap
Moved sequence
[ 250/ 500] tot_loss=1.374 (perp=6.547, rec=0.065), tot_loss_proj:1.609 [t=0.14s]
prediction: ['[CLS] the bank running car was the child? [SEP]']
[ 300/ 500] tot_loss=1.372 (perp=6.547, rec=0.063), tot_loss_proj:1.604 [t=0.13s]
prediction: ['[CLS] the bank running car was the child? [SEP]']
Attempt swap
[ 350/ 500] tot_loss=1.632 (perp=7.856, rec=0.061), tot_loss_proj:1.799 [t=0.13s]
prediction: ['[CLS] the and running car was the child? [SEP]']
Attempt swap
Moved token
[ 400/ 500] tot_loss=1.332 (perp=6.311, rec=0.070), tot_loss_proj:1.470 [t=0.14s]
prediction: ['[CLS] and running the car was the child? [SEP]']
[ 450/ 500] tot_loss=1.389 (perp=6.609, rec=0.067), tot_loss_proj:1.548 [t=0.14s]
prediction: ['[CLS] the running the car was the child? [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.513 (perp=7.222, rec=0.069), tot_loss_proj:1.692 [t=0.14s]
prediction: ['[CLS] the running the car was to child? [SEP]']
Done with input #40 of 50.
reference: 
========================
[CLS] was the child running to the car? [SEP]
========================
predicted: 
========================
[CLS] the and running car was the child? [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 88.889 | p: 88.889 | r: 88.889
rouge2     | fm: 25.000 | p: 25.000 | r: 25.000
rougeL     | fm: 55.556 | p: 55.556 | r: 55.556
rougeLsum  | fm: 55.556 | p: 55.556 | r: 55.556
r1fm+r2fm = 113.889

[Aggregate metrics]:
rouge1     | fm: 89.041 | p: 88.614 | r: 89.608
rouge2     | fm: 48.557 | p: 48.359 | r: 48.817
rougeL     | fm: 75.672 | p: 75.231 | r: 76.084
rougeLsum  | fm: 75.920 | p: 75.604 | r: 76.359
r1fm+r2fm = 137.598

input #40 time: 0:01:41 | total time: 1:04:18


Running input #41 of 50.
reference: 
========================
Mary is shorter than five feet.
========================
Debug: ids_shape = 9, pads = [9]
Debug: input ids = tensor([[ 101, 2984, 2003, 7820, 2084, 2274, 2519, 1012,  102]],
       device='cuda:0')
Debug: ref = ['[CLS] mary is shorter than five feet. [SEP]']
[Init] best rec loss: 0.6025581359863281 for ['[CLS] headlines delegate literacy orbitalln olympiad uses [SEP]']
[Init] best rec loss: 0.5995156168937683 for ['[CLS] maharaja cleanarty france franchise brooke measures [SEP]']
[Init] best rec loss: 0.5987253785133362 for ['[CLS]gna reviewers repairs 000 solvingdinerup [SEP]']
[Init] best rec loss: 0.5862848162651062 for ['[CLS] glamorganuez grooveas muted latham aryan [SEP]']
[Init] best rec loss: 0.585472047328949 for ['[CLS] inningfield glands coachsvillehara midday [SEP]']
[Init] best rec loss: 0.58445805311203 for ['[CLS] experimentingssipuri lafayette concurrency heapnant [SEP]']
[Init] best rec loss: 0.5794683694839478 for ['[CLS] dance disrupt receptor goth proves una alain [SEP]']
[Init] best rec loss: 0.5706045031547546 for ['[CLS] has lettersaragenase twins transmissionsiza [SEP]']
[Init] best perm rec loss: 0.5635923743247986 for ['[CLS] transmissions hasizaaragenase twins letters [SEP]']
[Init] best perm rec loss: 0.5629433989524841 for ['[CLS]genaseiza has letters twins transmissionsara [SEP]']
[Init] best perm rec loss: 0.5598247647285461 for ['[CLS] transmissionsaraiza has lettersgenase twins [SEP]']
[Init] best perm rec loss: 0.5574087500572205 for ['[CLS] transmissionsiza hasara letters twinsgenase [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.505 (perp=7.054, rec=0.094), tot_loss_proj:1.655 [t=0.13s]
prediction: ['[CLS] mary mary feet mary is shorter. [SEP]']
Attempt swap
Moved sequence
[ 100/ 500] tot_loss=1.855 (perp=8.874, rec=0.080), tot_loss_proj:2.076 [t=0.13s]
prediction: ['[CLS] mary mary is shorter. kala feet [SEP]']
[ 150/ 500] tot_loss=1.437 (perp=6.840, rec=0.069), tot_loss_proj:1.613 [t=0.14s]
prediction: ['[CLS] mary mary is shorter. the feet [SEP]']
Attempt swap
Moved token
[ 200/ 500] tot_loss=1.553 (perp=7.378, rec=0.077), tot_loss_proj:1.703 [t=0.13s]
prediction: ['[CLS] mary mary is feet shorter. than [SEP]']
Attempt swap
Moved sequence
[ 250/ 500] tot_loss=1.212 (perp=5.647, rec=0.082), tot_loss_proj:1.361 [t=0.13s]
prediction: ['[CLS] mary. mary is feet shorter than [SEP]']
[ 300/ 500] tot_loss=1.206 (perp=5.647, rec=0.077), tot_loss_proj:1.349 [t=0.13s]
prediction: ['[CLS] mary. mary is feet shorter than [SEP]']
Attempt swap
Moved sequence
[ 350/ 500] tot_loss=1.040 (perp=4.751, rec=0.089), tot_loss_proj:1.160 [t=0.13s]
prediction: ['[CLS] mary is feet shorter than mary. [SEP]']
Attempt swap
[ 400/ 500] tot_loss=1.016 (perp=4.751, rec=0.066), tot_loss_proj:1.157 [t=0.13s]
prediction: ['[CLS] mary is feet shorter than mary. [SEP]']
[ 450/ 500] tot_loss=1.016 (perp=4.751, rec=0.066), tot_loss_proj:1.160 [t=0.13s]
prediction: ['[CLS] mary is feet shorter than mary. [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.310 (perp=6.263, rec=0.058), tot_loss_proj:1.432 [t=0.15s]
prediction: ['[CLS] mary is feet shorter than five. [SEP]']
Done with input #41 of 50.
reference: 
========================
[CLS] mary is shorter than five feet. [SEP]
========================
predicted: 
========================
[CLS] mary. mary is feet shorter than [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 87.500 | p: 87.500 | r: 87.500
rouge2     | fm: 42.857 | p: 42.857 | r: 42.857
rougeL     | fm: 75.000 | p: 75.000 | r: 75.000
rougeLsum  | fm: 75.000 | p: 75.000 | r: 75.000
r1fm+r2fm = 130.357

[Aggregate metrics]:
rouge1     | fm: 88.969 | p: 88.564 | r: 89.519
rouge2     | fm: 48.206 | p: 48.011 | r: 48.486
rougeL     | fm: 75.561 | p: 75.315 | r: 76.030
rougeLsum  | fm: 75.947 | p: 75.583 | r: 76.373
r1fm+r2fm = 137.175

input #41 time: 0:01:40 | total time: 1:05:58


Running input #42 of 50.
reference: 
========================
She has enough of a problem as it is.
========================
Debug: ids_shape = 12, pads = [12]
Debug: input ids = tensor([[ 101, 2016, 2038, 2438, 1997, 1037, 3291, 2004, 2009, 2003, 1012,  102]],
       device='cuda:0')
Debug: ref = ['[CLS] she has enough of a problem as it is. [SEP]']
[Init] best rec loss: 0.6307502388954163 for ['[CLS] flowneemthor mortaltem sweepszquez engage plaque vancouver [SEP]']
[Init] best rec loss: 0.6207234263420105 for ['[CLS] eponymousmbo guarantees owning copeland hackingisms minh critics佐 [SEP]']
[Init] best rec loss: 0.6028377413749695 for ['[CLS] dso workersumenzicnr toilet inclined cheated supplemented dakota [SEP]']
[Init] best perm rec loss: 0.6017051935195923 for ['[CLS] inclinednrumen workers dakota supplemented cheated toilet dsozic [SEP]']
[Init] best perm rec loss: 0.6012183427810669 for ['[CLS] cheated inclinedumenzic dso workers supplemented toiletnr dakota [SEP]']
[Init] best perm rec loss: 0.6011143922805786 for ['[CLS] supplemented workerszic dsonr dakotaumen toilet cheated inclined [SEP]']
[Init] best perm rec loss: 0.6002119183540344 for ['[CLS]umenzic toilet dso workers inclined cheated supplementednr dakota [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.993 (perp=9.316, rec=0.129), tot_loss_proj:2.134 [t=0.12s]
prediction: ['[CLS] is enough enough she a i problem as is is [SEP]']
Attempt swap
Moved sequence
[ 100/ 500] tot_loss=1.506 (perp=7.081, rec=0.090), tot_loss_proj:1.674 [t=0.12s]
prediction: ['[CLS] enough enough she is a i problem as it. [SEP]']
[ 150/ 500] tot_loss=1.549 (perp=7.382, rec=0.073), tot_loss_proj:1.783 [t=0.13s]
prediction: ['[CLS] enough has she is a i problem as is. [SEP]']
Attempt swap
Moved token
[ 200/ 500] tot_loss=1.292 (perp=6.116, rec=0.069), tot_loss_proj:1.491 [t=0.14s]
prediction: ['[CLS] enough has she has a problem as i is. [SEP]']
Attempt swap
Swapped tokens
[ 250/ 500] tot_loss=1.092 (perp=5.093, rec=0.073), tot_loss_proj:1.244 [t=0.13s]
prediction: ['[CLS] enough is she has a problem as it has. [SEP]']
[ 300/ 500] tot_loss=1.101 (perp=5.139, rec=0.073), tot_loss_proj:1.268 [t=0.14s]
prediction: ['[CLS] enough has she has a problem as it is. [SEP]']
Attempt swap
Moved token
[ 350/ 500] tot_loss=1.301 (perp=6.172, rec=0.067), tot_loss_proj:1.423 [t=0.13s]
prediction: ['[CLS] has enough she of a problem as it is. [SEP]']
Attempt swap
Swapped tokens
[ 400/ 500] tot_loss=1.066 (perp=5.029, rec=0.060), tot_loss_proj:1.203 [t=0.13s]
prediction: ['[CLS] of enough she has a problem as it is. [SEP]']
[ 450/ 500] tot_loss=1.064 (perp=5.029, rec=0.058), tot_loss_proj:1.211 [t=0.14s]
prediction: ['[CLS] of enough she has a problem as it is. [SEP]']
Attempt swap
Swapped tokens
[ 500/ 500] tot_loss=1.013 (perp=4.748, rec=0.064), tot_loss_proj:1.151 [t=0.13s]
prediction: ['[CLS] enough of she has a problem as it is. [SEP]']
Done with input #42 of 50.
reference: 
========================
[CLS] she has enough of a problem as it is. [SEP]
========================
predicted: 
========================
[CLS] has enough she of a problem as it is. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 100.000 | p: 100.000 | r: 100.000
rouge2     | fm: 70.000 | p: 70.000 | r: 70.000
rougeL     | fm: 90.909 | p: 90.909 | r: 90.909
rougeLsum  | fm: 90.909 | p: 90.909 | r: 90.909
r1fm+r2fm = 170.000

[Aggregate metrics]:
rouge1     | fm: 89.221 | p: 88.842 | r: 89.784
rouge2     | fm: 48.962 | p: 48.679 | r: 49.226
rougeL     | fm: 75.978 | p: 75.720 | r: 76.424
rougeLsum  | fm: 76.379 | p: 76.120 | r: 76.809
r1fm+r2fm = 138.183

input #42 time: 0:01:40 | total time: 1:07:38


Running input #43 of 50.
reference: 
========================
Every student has to come up with three arguments that show that some condition proposed by Bill is wrong.
========================
Debug: ids_shape = 22, pads = [22]
Debug: input ids = tensor([[ 101, 2296, 3076, 2038, 2000, 2272, 2039, 2007, 2093, 9918, 2008, 2265,
         2008, 2070, 4650, 3818, 2011, 3021, 2003, 3308, 1012,  102]],
       device='cuda:0')
Debug: ref = ['[CLS] every student has to come up with three arguments that show that some condition proposed by bill is wrong. [SEP]']
[Init] best rec loss: 0.6367088556289673 for ['[CLS] milling tribal stockton ripple blackeneddication via revenues mikhail gunnermark destinationsuke zhao 清ums pietro db falteredrcus [SEP]']
[Init] best rec loss: 0.6230759024620056 for ['[CLS]tr yorker boutiqueος plainlyllchemical skeletonookリ bedroomuni donegal descent hiroshima lingered wolff shakyroved race [SEP]']
[Init] best rec loss: 0.6063328981399536 for ['[CLS] pacing marco ranks≤ genrevian aiden engagementspi clap ultrasound thoroughbredumber desirable gravitational donaldsonzzleumber ants sweets [SEP]']
[Init] best rec loss: 0.6060954928398132 for ['[CLS] schoolsono concert violin spotlight cinder stat maddox corporate masseyvron 60s worsened answeredtya poster retributioniformole indus [SEP]']
[Init] best rec loss: 0.599153995513916 for ['[CLS] annals starts pollard highness nouns chao milos controls assemblyiness katoying stakeholders legends fansjured 2001 dunnetius parentheses [SEP]']
[Init] best rec loss: 0.5965797305107117 for ['[CLS] gladstone britten flyeraw xiao cessnaingabelt unpredictable antennaeiance ᵍ fur diggingurgent marsden couple amazement risenlub [SEP]']
[Init] best perm rec loss: 0.5961620807647705 for ['[CLS]ianceinga antennae couple amazement cessna ᵍlub britten risenurgent gladstonebelt xiao unpredictableaw digging fur flyer marsden [SEP]']
[Init] best perm rec loss: 0.5954340696334839 for ['[CLS] fur xiao antennaeurgentinga gladstone amazement risen brittenlub ᵍ couplebelt flyer marsden unpredictableaw digging cessnaiance [SEP]']
[Init] best perm rec loss: 0.5946817994117737 for ['[CLS] amazementlubiance antennae marsden britten xiao cessna fur flyer risen gladstoneurgent diggingawbelt ᵍ unpredictableinga couple [SEP]']
[Init] best perm rec loss: 0.5945690870285034 for ['[CLS]belt xiao flyer britten amazementinga digging couple antennaeurgent marsden cessna furiance risen ᵍ unpredictable gladstonelubaw [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.979 (perp=9.251, rec=0.128), tot_loss_proj:2.192 [t=0.13s]
prediction: ['[CLS] every everyone participants she has three getting arguments arguments thatm for arguments bill by the arguments students is. [SEP]']
Attempt swap
Moved sequence
[ 100/ 500] tot_loss=1.664 (perp=7.840, rec=0.096), tot_loss_proj:1.863 [t=0.13s]
prediction: ['[CLS] every student participant to comes three plan to arguments bill by with arguments arguments that the arguments bill is. [SEP]']
[ 150/ 500] tot_loss=1.729 (perp=8.223, rec=0.085), tot_loss_proj:1.929 [t=0.14s]
prediction: ['[CLS] every student participant to come three up to arguments bill by with through arguments that by proposed bill is. [SEP]']
Attempt swap
Swapped tokens
[ 200/ 500] tot_loss=1.785 (perp=8.527, rec=0.080), tot_loss_proj:1.983 [t=0.14s]
prediction: ['[CLS] every student participant to has three up to arguments bill by with through arguments that every proposed bill wrong. [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.775 (perp=8.533, rec=0.069), tot_loss_proj:1.957 [t=0.14s]
prediction: ['[CLS] every student participant to three has up to arguments bill show with come arguments that every proposed bill wrong. [SEP]']
[ 300/ 500] tot_loss=1.699 (perp=8.150, rec=0.069), tot_loss_proj:1.898 [t=0.14s]
prediction: ['[CLS] every student participant to three has up to arguments bill show with some arguments that every proposed bill wrong. [SEP]']
Attempt swap
Moved token
[ 350/ 500] tot_loss=1.736 (perp=8.302, rec=0.076), tot_loss_proj:1.926 [t=0.13s]
prediction: ['[CLS] student participant to every three has come some arguments proposed show with some arguments that every proposed bill wrong. [SEP]']
Attempt swap
Swapped tokens
[ 400/ 500] tot_loss=1.506 (perp=7.131, rec=0.080), tot_loss_proj:1.677 [t=0.14s]
prediction: ['[CLS] student participant to every three has come to arguments wrong show with some arguments that every proposed bill proposed. [SEP]']
[ 450/ 500] tot_loss=1.503 (perp=7.131, rec=0.077), tot_loss_proj:1.689 [t=0.13s]
prediction: ['[CLS] student participant to every three has come to arguments wrong show with some arguments that every proposed bill proposed. [SEP]']
Attempt swap
Swapped tokens
[ 500/ 500] tot_loss=1.391 (perp=6.589, rec=0.073), tot_loss_proj:1.576 [t=0.14s]
prediction: ['[CLS] student participant to every three has come to show wrong arguments with some arguments that every proposed bill proposed. [SEP]']
Done with input #43 of 50.
reference: 
========================
[CLS] every student has to come up with three arguments that show that some condition proposed by bill is wrong. [SEP]
========================
predicted: 
========================
[CLS] student participant to every three has come some arguments proposed show with some arguments that every proposed bill wrong. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 76.190 | p: 76.190 | r: 76.190
rouge2     | fm: 10.000 | p: 10.000 | r: 10.000
rougeL     | fm: 52.381 | p: 52.381 | r: 52.381
rougeLsum  | fm: 52.381 | p: 52.381 | r: 52.381
r1fm+r2fm = 86.190

[Aggregate metrics]:
rouge1     | fm: 88.972 | p: 88.587 | r: 89.442
rouge2     | fm: 47.857 | p: 47.639 | r: 48.115
rougeL     | fm: 75.485 | p: 75.152 | r: 75.863
rougeLsum  | fm: 75.843 | p: 75.589 | r: 76.227
r1fm+r2fm = 136.828

input #43 time: 0:01:41 | total time: 1:09:20


Running input #44 of 50.
reference: 
========================
Kim alienates cats and beat his dog.
========================
Debug: ids_shape = 11, pads = [11]
Debug: input ids = tensor([[ 101, 5035, 7344, 8520, 8870, 1998, 3786, 2010, 3899, 1012,  102]],
       device='cuda:0')
Debug: ref = ['[CLS] kim alienates cats and beat his dog. [SEP]']
[Init] best rec loss: 0.6081295609474182 for ['[CLS] convoy ds bronx trailers huey breuningmania apegur [SEP]']
[Init] best rec loss: 0.6028584241867065 for ['[CLS]mer sigismund gustave wasp windmill statutoryiate omnibusrba [SEP]']
[Init] best rec loss: 0.6007087826728821 for ['[CLS]logram hale lyricalsion gunslinger frs alternatively stereotypes plains [SEP]']
[Init] best rec loss: 0.5902699828147888 for ['[CLS] anothernished misunderstanding gunteryen kolkata tow competitor miocene [SEP]']
[Init] best rec loss: 0.5782185792922974 for ['[CLS] barriers rottingau fortune domestically gunpowderrgouary turk [SEP]']
[Init] best rec loss: 0.5771144032478333 for ['[CLS] diffusion accountable kick sentiments implementationsmoriulla gastorium [SEP]']
[Init] best rec loss: 0.5632797479629517 for ['[CLS] steeringof jessie broughton rounding ronanodon 88kshi [SEP]']
[Init] best rec loss: 0.5568124651908875 for ['[CLS] ɪ brazil happen michel synek waking assent tramway [SEP]']
[Init] best perm rec loss: 0.5510998964309692 for ['[CLS] syn michelek assent ɪ brazil tramway happen waking [SEP]']
[Init] best perm rec loss: 0.5496386289596558 for ['[CLS] tramway assent syn ɪ waking brazilek happen michel [SEP]']
[Init] best perm rec loss: 0.5463202595710754 for ['[CLS] syn tramway happen ɪek assent brazil waking michel [SEP]']
[Init] best perm rec loss: 0.5461483001708984 for ['[CLS] syn wakingek ɪ assent happen brazil tramway michel [SEP]']
[Init] best perm rec loss: 0.5456331968307495 for ['[CLS] michel waking ɪ happen brazil syn assentek tramway [SEP]']
[Init] best perm rec loss: 0.5438106656074524 for ['[CLS] michel brazil waking syn ɪ happenek tramway assent [SEP]']
[Init] best perm rec loss: 0.5394308567047119 for ['[CLS] waking ɪ brazil synek michel tramway happen assent [SEP]']
[Init] best perm rec loss: 0.5394119024276733 for ['[CLS] brazil michel happen ɪ synek tramway assent waking [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.449 (perp=11.617, rec=0.126), tot_loss_proj:2.623 [t=0.13s]
prediction: ['[CLS] kim alien catsates alien. and dog alien [SEP]']
Attempt swap
Moved sequence
[ 100/ 500] tot_loss=1.859 (perp=8.814, rec=0.096), tot_loss_proj:2.006 [t=0.13s]
prediction: ['[CLS] kim alienates alien and cats and dog alien [SEP]']
[ 150/ 500] tot_loss=1.865 (perp=8.814, rec=0.102), tot_loss_proj:2.005 [t=0.13s]
prediction: ['[CLS] kim alienates alien and cats and dog alien [SEP]']
Attempt swap
Moved token
[ 200/ 500] tot_loss=1.863 (perp=8.799, rec=0.103), tot_loss_proj:1.981 [t=0.13s]
prediction: ['[CLS] kim alienates alien the cats and alien dog [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.624 (perp=7.628, rec=0.099), tot_loss_proj:1.750 [t=0.13s]
prediction: ['[CLS] kim alienates alien cats and the alien dog [SEP]']
[ 300/ 500] tot_loss=1.718 (perp=8.214, rec=0.075), tot_loss_proj:1.849 [t=0.13s]
prediction: ['[CLS] kim alienates alien cats and his alien dog [SEP]']
Attempt swap
Moved token
[ 350/ 500] tot_loss=1.695 (perp=8.068, rec=0.081), tot_loss_proj:1.805 [t=0.14s]
prediction: ['[CLS] kim alienates his alien cats and alien dog [SEP]']
Attempt swap
Moved token
[ 400/ 500] tot_loss=1.700 (perp=8.039, rec=0.092), tot_loss_proj:1.791 [t=0.14s]
prediction: ['[CLS] kim alienates his cats and alienates dog [SEP]']
[ 450/ 500] tot_loss=1.981 (perp=9.562, rec=0.068), tot_loss_proj:2.052 [t=0.14s]
prediction: ['[CLS] kim alienates his cats and beatates dog [SEP]']
Attempt swap
Swapped tokens
[ 500/ 500] tot_loss=1.982 (perp=9.484, rec=0.085), tot_loss_proj:2.084 [t=0.14s]
prediction: ['[CLS] kim alienates his cats. dogates beat [SEP]']
Done with input #44 of 50.
reference: 
========================
[CLS] kim alienates cats and beat his dog. [SEP]
========================
predicted: 
========================
[CLS] kim alienates his cats and dogates beat [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 88.889 | p: 88.889 | r: 88.889
rouge2     | fm: 37.500 | p: 37.500 | r: 37.500
rougeL     | fm: 77.778 | p: 77.778 | r: 77.778
rougeLsum  | fm: 77.778 | p: 77.778 | r: 77.778
r1fm+r2fm = 126.389

[Aggregate metrics]:
rouge1     | fm: 88.886 | p: 88.515 | r: 89.378
rouge2     | fm: 47.717 | p: 47.578 | r: 48.029
rougeL     | fm: 75.493 | p: 75.189 | r: 75.854
rougeLsum  | fm: 75.739 | p: 75.417 | r: 76.122
r1fm+r2fm = 136.603

input #44 time: 0:01:40 | total time: 1:11:01


Running input #45 of 50.
reference: 
========================
John's I stole bike.
========================
Debug: ids_shape = 9, pads = [9]
Debug: input ids = tensor([[  101,  2198,  1005,  1055,  1045, 10312,  7997,  1012,   102]],
       device='cuda:0')
Debug: ref = ["[CLS] john's i stole bike. [SEP]"]
[Init] best rec loss: 0.6074922680854797 for ['[CLS] psalms yamaha howl entered gulped oxfordshirelto [SEP]']
[Init] best rec loss: 0.5904808640480042 for ['[CLS] prayers nail hunan added staff clemens etc [SEP]']
[Init] best rec loss: 0.5887135863304138 for ['[CLS] pasha geographicosis dobsonvances latvia drawing [SEP]']
[Init] best rec loss: 0.5843271613121033 for ['[CLS] escort } suspects 55ih brethreniography [SEP]']
[Init] best rec loss: 0.5826418995857239 for ['[CLS] saw reserves routinesative add henrietta imagery [SEP]']
[Init] best rec loss: 0.5797467231750488 for ['[CLS] project jonny pol feeds ᅲ pagan brigade [SEP]']
[Init] best rec loss: 0.5770137310028076 for ['[CLS] cyclistrel sevilla flank marvelchia manufactures [SEP]']
[Init] best rec loss: 0.5601795315742493 for ['[CLS] village curve pro celineades internment cues [SEP]']
[Init] best perm rec loss: 0.5574790239334106 for ['[CLS] cues internmentades celine village pro curve [SEP]']
[Init] best perm rec loss: 0.5571584105491638 for ['[CLS] villageades internment pro cues curve celine [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.178 (perp=10.253, rec=0.128), tot_loss_proj:2.339 [t=0.13s]
prediction: ['[CLS] i stealing john wasborough. bike [SEP]']
Attempt swap
Swapped tokens
[ 100/ 500] tot_loss=1.685 (perp=7.941, rec=0.097), tot_loss_proj:1.783 [t=0.13s]
prediction: ['[CLS] i stole john s stole bike. [SEP]']
[ 150/ 500] tot_loss=1.811 (perp=8.716, rec=0.068), tot_loss_proj:1.941 [t=0.13s]
prediction: ['[CLS] i stole john s s bike. [SEP]']
Attempt swap
Moved sequence
[ 200/ 500] tot_loss=1.605 (perp=7.640, rec=0.077), tot_loss_proj:1.719 [t=0.13s]
prediction: ['[CLS] s i stole john s bike. [SEP]']
Attempt swap
[ 250/ 500] tot_loss=1.609 (perp=7.640, rec=0.081), tot_loss_proj:1.718 [t=0.13s]
prediction: ['[CLS] s i stole john s bike. [SEP]']
[ 300/ 500] tot_loss=1.593 (perp=7.640, rec=0.065), tot_loss_proj:1.721 [t=0.14s]
prediction: ['[CLS] s i stole john s bike. [SEP]']
Attempt swap
[ 350/ 500] tot_loss=1.589 (perp=7.640, rec=0.061), tot_loss_proj:1.735 [t=0.14s]
prediction: ['[CLS] s i stole john s bike. [SEP]']
Attempt swap
[ 400/ 500] tot_loss=1.596 (perp=7.640, rec=0.068), tot_loss_proj:1.733 [t=0.14s]
prediction: ['[CLS] s i stole john s bike. [SEP]']
[ 450/ 500] tot_loss=1.597 (perp=7.640, rec=0.069), tot_loss_proj:1.722 [t=0.13s]
prediction: ['[CLS] s i stole john s bike. [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.598 (perp=7.640, rec=0.070), tot_loss_proj:1.731 [t=0.14s]
prediction: ['[CLS] s i stole john s bike. [SEP]']
Done with input #45 of 50.
reference: 
========================
[CLS] john's i stole bike. [SEP]
========================
predicted: 
========================
[CLS] s i stole john s bike. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 93.333 | p: 87.500 | r: 100.000
rouge2     | fm: 61.538 | p: 57.143 | r: 66.667
rougeL     | fm: 80.000 | p: 75.000 | r: 85.714
rougeLsum  | fm: 80.000 | p: 75.000 | r: 85.714
r1fm+r2fm = 154.872

[Aggregate metrics]:
rouge1     | fm: 88.988 | p: 88.489 | r: 89.566
rouge2     | fm: 48.046 | p: 47.711 | r: 48.358
rougeL     | fm: 75.471 | p: 75.115 | r: 76.025
rougeLsum  | fm: 75.931 | p: 75.517 | r: 76.454
r1fm+r2fm = 137.034

input #45 time: 0:01:40 | total time: 1:12:41


Running input #46 of 50.
reference: 
========================
The witch went into the forest by vanishing.
========================
Debug: ids_shape = 11, pads = [11]
Debug: input ids = tensor([[  101,  1996,  6965,  2253,  2046,  1996,  3224,  2011, 24866,  1012,
           102]], device='cuda:0')
Debug: ref = ['[CLS] the witch went into the forest by vanishing. [SEP]']
[Init] best rec loss: 0.6489483714103699 for ['[CLS]bial pixel cleaned newspaper teaming honestly staggering passion troubles [SEP]']
[Init] best rec loss: 0.6448445320129395 for ['[CLS] archipelagombling explanations explore merit ballot pose hourly emergency [SEP]']
[Init] best rec loss: 0.6333441138267517 for ['[CLS]erus hostel charting intricate amnestyaldo stalls jennie 57th [SEP]']
[Init] best rec loss: 0.6233875155448914 for ['[CLS]ico stenchpot tal extra transcription waters ngc pussy [SEP]']
[Init] best perm rec loss: 0.6220397353172302 for ['[CLS] stench tal extra transcription pussy waterspot ngcico [SEP]']
[Init] best perm rec loss: 0.6202391386032104 for ['[CLS] ngc extra transcription stenchicopot pussy waters tal [SEP]']
[Init] best perm rec loss: 0.6192333698272705 for ['[CLS] pussy waters stenchpotico extra tal ngc transcription [SEP]']
[Init] best perm rec loss: 0.615863025188446 for ['[CLS] transcription extra watersico tal ngc stench pussypot [SEP]']
[Init] best perm rec loss: 0.6144911646842957 for ['[CLS] stench transcription extra ngc pussyico waterspot tal [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.678 (perp=7.838, rec=0.111), tot_loss_proj:1.834 [t=0.12s]
prediction: ['[CLS] the witch witch witch vanishing vanishing from the. [SEP]']
Attempt swap
Moved sequence
[ 100/ 500] tot_loss=1.565 (perp=7.452, rec=0.075), tot_loss_proj:1.875 [t=0.14s]
prediction: ['[CLS] the vanishing witch witch went forest by forest. [SEP]']
[ 150/ 500] tot_loss=1.609 (perp=7.711, rec=0.067), tot_loss_proj:1.954 [t=0.13s]
prediction: ['[CLS] the vanishing witch the went forest by forest. [SEP]']
Attempt swap
Moved token
[ 200/ 500] tot_loss=1.357 (perp=6.401, rec=0.077), tot_loss_proj:1.635 [t=0.14s]
prediction: ['[CLS] the vanishing witch went forest by the forest. [SEP]']
Attempt swap
[ 250/ 500] tot_loss=1.348 (perp=6.401, rec=0.067), tot_loss_proj:1.633 [t=0.13s]
prediction: ['[CLS] the vanishing witch went forest by the forest. [SEP]']
[ 300/ 500] tot_loss=1.340 (perp=6.401, rec=0.060), tot_loss_proj:1.637 [t=0.13s]
prediction: ['[CLS] the vanishing witch went forest by the forest. [SEP]']
Attempt swap
Moved token
[ 350/ 500] tot_loss=1.634 (perp=7.880, rec=0.057), tot_loss_proj:1.917 [t=0.14s]
prediction: ['[CLS] the witch went forest by the vanishing vanishing. [SEP]']
Attempt swap
Swapped tokens
[ 400/ 500] tot_loss=1.396 (perp=6.680, rec=0.060), tot_loss_proj:1.535 [t=0.14s]
prediction: ['[CLS] the witch went vanishing by the vanishing forest. [SEP]']
[ 450/ 500] tot_loss=1.299 (perp=6.078, rec=0.084), tot_loss_proj:1.583 [t=0.14s]
prediction: ['[CLS] the witch went forest by the vanishing forest. [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.521 (perp=7.291, rec=0.062), tot_loss_proj:1.786 [t=0.13s]
prediction: ['[CLS] the witch went forest by into vanishing forest. [SEP]']
Done with input #46 of 50.
reference: 
========================
[CLS] the witch went into the forest by vanishing. [SEP]
========================
predicted: 
========================
[CLS] the vanishing witch went forest by the forest. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 90.000 | p: 90.000 | r: 90.000
rouge2     | fm: 44.444 | p: 44.444 | r: 44.444
rougeL     | fm: 70.000 | p: 70.000 | r: 70.000
rougeLsum  | fm: 70.000 | p: 70.000 | r: 70.000
r1fm+r2fm = 134.444

[Aggregate metrics]:
rouge1     | fm: 88.991 | p: 88.556 | r: 89.603
rouge2     | fm: 47.859 | p: 47.637 | r: 48.227
rougeL     | fm: 75.400 | p: 75.041 | r: 75.910
rougeLsum  | fm: 75.810 | p: 75.369 | r: 76.307
r1fm+r2fm = 136.851

input #46 time: 0:01:40 | total time: 1:14:22


Running input #47 of 50.
reference: 
========================
Mary noticed John's excessive appreciation of himself.
========================
Debug: ids_shape = 12, pads = [12]
Debug: input ids = tensor([[  101,  2984,  4384,  2198,  1005,  1055, 11664, 12284,  1997,  2370,
          1012,   102]], device='cuda:0')
Debug: ref = ["[CLS] mary noticed john's excessive appreciation of himself. [SEP]"]
[Init] best rec loss: 0.6304557919502258 for ['[CLS]vres hendricksanor cheltenhamhmᅭ 17thrzburgiating antiques [SEP]']
[Init] best rec loss: 0.6000208258628845 for ['[CLS]holding beatles cashtajee idᵗ vip sid hara [SEP]']
[Init] best rec loss: 0.595121443271637 for ['[CLS] roger increases grasslands modelsayohima henri auraues compulsion [SEP]']
[Init] best rec loss: 0.5923041105270386 for ['[CLS] porto travellersdom cruz patented telegram brooding moreno 226 stomach [SEP]']
[Init] best rec loss: 0.5826864838600159 for ['[CLS] centimeters automation perfect reformgler instructionalingham ⊂ empirical sonata [SEP]']
[Init] best rec loss: 0.5788058638572693 for ['[CLS] faulty jars versagrin dictatorship kobayashi ʾvocationpsyara [SEP]']
[Init] best rec loss: 0.5705707669258118 for ['[CLS] malacca mingled baltimore competing clasp vega archipelago racehorse philosophy irs [SEP]']
[Init] best rec loss: 0.5699427127838135 for ['[CLS] domestically thematic ottomans orthogonalval downstream regency values haiti mania [SEP]']
[Init] best rec loss: 0.5587226748466492 for ['[CLS]inkphysical same villas unemployment boredom supplying anthropologist torethan [SEP]']
[Init] best perm rec loss: 0.5587048530578613 for ['[CLS] samethanink villas supplyingphysical boredom anthropologist unemployment tore [SEP]']
[Init] best perm rec loss: 0.5550205111503601 for ['[CLS]physicalthan villas tore supplying boredom same anthropologistink unemployment [SEP]']
[Init] best perm rec loss: 0.5541691780090332 for ['[CLS]than boredom supplying anthropologist samephysical unemployment villasink tore [SEP]']
[Init] best perm rec loss: 0.5474031567573547 for ['[CLS] same anthropologistink unemploymentphysical villas boredomthan supplying tore [SEP]']
[Init] best perm rec loss: 0.5468882322311401 for ['[CLS] anthropologistinkphysical same boredom unemployment villasthan tore supplying [SEP]']
[Init] best perm rec loss: 0.5452975034713745 for ['[CLS] unemployment toreink boredom villas anthropologist supplyingphysicalthan same [SEP]']
[Init] best perm rec loss: 0.5452331304550171 for ['[CLS] anthropologist villas boredomthan supplyingink same tore unemploymentphysical [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=2.826 (perp=13.406, rec=0.145), tot_loss_proj:2.993 [t=0.13s]
prediction: ["[CLS] john mary 'gara noticed appreciation 省 sustainability admire excessive [SEP]"]
Attempt swap
Moved token
[ 100/ 500] tot_loss=2.159 (perp=10.239, rec=0.111), tot_loss_proj:2.316 [t=0.15s]
prediction: ["[CLS] mary appreciation mary 'taka noticedর. appreciation himself [SEP]"]
[ 150/ 500] tot_loss=2.148 (perp=10.211, rec=0.106), tot_loss_proj:2.297 [t=0.13s]
prediction: ["[CLS] mary appreciation mary 'iana noticed excessive. appreciation himself [SEP]"]
Attempt swap
Moved sequence
[ 200/ 500] tot_loss=1.904 (perp=9.077, rec=0.089), tot_loss_proj:2.066 [t=0.14s]
prediction: ["[CLS] mary appreciation mary'' noticed appreciation himself excessive. [SEP]"]
Attempt swap
Moved token
[ 250/ 500] tot_loss=2.076 (perp=9.953, rec=0.086), tot_loss_proj:2.253 [t=0.14s]
prediction: ["[CLS] mary appreciation john excessive'noticed appreciation himself excessive. [SEP]"]
[ 300/ 500] tot_loss=2.104 (perp=10.221, rec=0.059), tot_loss_proj:2.271 [t=0.13s]
prediction: ['[CLS] mary of john excessive s noticed appreciation himself excessive. [SEP]']
Attempt swap
Swapped tokens
[ 350/ 500] tot_loss=1.945 (perp=9.308, rec=0.083), tot_loss_proj:2.054 [t=0.14s]
prediction: ['[CLS] mary of s excessive john noticed appreciation himself excessive. [SEP]']
Attempt swap
Swapped tokens
[ 400/ 500] tot_loss=1.805 (perp=8.694, rec=0.066), tot_loss_proj:1.941 [t=0.13s]
prediction: ['[CLS] mary of s excessive appreciation noticed john himself excessive. [SEP]']
[ 450/ 500] tot_loss=1.813 (perp=8.694, rec=0.074), tot_loss_proj:1.951 [t=0.13s]
prediction: ['[CLS] mary of s excessive appreciation noticed john himself excessive. [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.805 (perp=8.694, rec=0.066), tot_loss_proj:1.950 [t=0.13s]
prediction: ['[CLS] mary of s excessive appreciation noticed john himself excessive. [SEP]']
Done with input #47 of 50.
reference: 
========================
[CLS] mary noticed john's excessive appreciation of himself. [SEP]
========================
predicted: 
========================
[CLS] mary of s excessive appreciation noticed john himself excessive. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 95.238 | p: 90.909 | r: 100.000
rouge2     | fm: 42.105 | p: 40.000 | r: 44.444
rougeL     | fm: 66.667 | p: 63.636 | r: 70.000
rougeLsum  | fm: 66.667 | p: 63.636 | r: 70.000
r1fm+r2fm = 137.343

[Aggregate metrics]:
rouge1     | fm: 89.153 | p: 88.655 | r: 89.810
rouge2     | fm: 47.702 | p: 47.303 | r: 48.104
rougeL     | fm: 75.324 | p: 74.885 | r: 75.902
rougeLsum  | fm: 75.493 | p: 75.116 | r: 76.093
r1fm+r2fm = 136.855

input #47 time: 0:01:40 | total time: 1:16:03


Running input #48 of 50.
reference: 
========================
John tagged Lewis with a regulation baseball on Tuesday.
========================
Debug: ids_shape = 12, pads = [12]
Debug: input ids = tensor([[  101,  2198, 26610,  4572,  2007,  1037,  7816,  3598,  2006,  9857,
          1012,   102]], device='cuda:0')
Debug: ref = ['[CLS] john tagged lewis with a regulation baseball on tuesday. [SEP]']
[Init] best rec loss: 0.5769700407981873 for ['[CLS] dei coastal insistencewe depleted mania argus artworkıoot [SEP]']
[Init] best rec loss: 0.5434584021568298 for ['[CLS] oracle stonesarns adriaticglass slavicaiabol overlandzoo [SEP]']
[Init] best rec loss: 0.538845419883728 for ['[CLS] gay grimpate barton material kgb vicente氵 alert costa [SEP]']
[Init] best rec loss: 0.5329487919807434 for ['[CLS]hart rotated cabinets moore severity tight war owls evans necessity [SEP]']
[Init] best rec loss: 0.5255273580551147 for ['[CLS] nails lobes analysis principal mcgrath sulawesiuk lawsuits around carbon [SEP]']
[Init] best rec loss: 0.5196793675422668 for ['[CLS] antarctica africavich cautiously taintedfightingotho emirates provider sacrament [SEP]']
[Init] best perm rec loss: 0.5120397806167603 for ['[CLS]vich africa emiratesfighting sacrament cautiously antarctica providerotho tainted [SEP]']
[Init] best perm rec loss: 0.5115159749984741 for ['[CLS] emirates tainted cautiously africavich providerfighting sacramentotho antarctica [SEP]']
[Init] best perm rec loss: 0.5111997723579407 for ['[CLS]vich africa sacrament cautiously antarcticaotho emiratesfighting provider tainted [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.897 (perp=8.878, rec=0.121), tot_loss_proj:2.056 [t=0.14s]
prediction: ['[CLS] john dod tagged tagged on a tuesday tuesday tuesday tuesday [SEP]']
Attempt swap
Moved sequence
[ 100/ 500] tot_loss=1.814 (perp=8.541, rec=0.106), tot_loss_proj:1.988 [t=0.13s]
prediction: ['[CLS] john lewis baseball tagged lewis with a tuesday tuesday tuesday [SEP]']
[ 150/ 500] tot_loss=1.587 (perp=7.534, rec=0.080), tot_loss_proj:1.795 [t=0.14s]
prediction: ['[CLS] john lewis baseball tagged lewis with a tuesday tuesday. [SEP]']
Attempt swap
Swapped tokens
[ 200/ 500] tot_loss=1.553 (perp=7.388, rec=0.075), tot_loss_proj:1.757 [t=0.13s]
prediction: ['[CLS] john lewis baseball tagged lewis with tuesday a tuesday. [SEP]']
Attempt swap
Swapped tokens
[ 250/ 500] tot_loss=1.559 (perp=7.388, rec=0.082), tot_loss_proj:1.748 [t=0.13s]
prediction: ['[CLS] john lewis baseball tagged lewis with tuesday a tuesday. [SEP]']
[ 300/ 500] tot_loss=1.615 (perp=7.746, rec=0.066), tot_loss_proj:1.813 [t=0.14s]
prediction: ['[CLS] john baseball baseball tagged lewis with on a tuesday. [SEP]']
Attempt swap
Moved token
[ 350/ 500] tot_loss=1.419 (perp=6.760, rec=0.067), tot_loss_proj:1.574 [t=0.13s]
prediction: ['[CLS] john baseball tagged lewis with baseball on a tuesday. [SEP]']
Attempt swap
Swapped tokens
[ 400/ 500] tot_loss=1.437 (perp=6.891, rec=0.059), tot_loss_proj:1.590 [t=0.13s]
prediction: ['[CLS] john lewis tagged baseball with regulation on a tuesday. [SEP]']
[ 450/ 500] tot_loss=1.454 (perp=6.891, rec=0.076), tot_loss_proj:1.585 [t=0.14s]
prediction: ['[CLS] john lewis tagged baseball with regulation on a tuesday. [SEP]']
Attempt swap
Swapped tokens
[ 500/ 500] tot_loss=1.420 (perp=6.777, rec=0.064), tot_loss_proj:1.586 [t=0.13s]
prediction: ['[CLS] john lewis tagged regulation with baseball on a tuesday. [SEP]']
Done with input #48 of 50.
reference: 
========================
[CLS] john tagged lewis with a regulation baseball on tuesday. [SEP]
========================
predicted: 
========================
[CLS] john baseball tagged lewis with regulation on a tuesday. [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 100.000 | p: 100.000 | r: 100.000
rouge2     | fm: 40.000 | p: 40.000 | r: 40.000
rougeL     | fm: 81.818 | p: 81.818 | r: 81.818
rougeLsum  | fm: 81.818 | p: 81.818 | r: 81.818
r1fm+r2fm = 140.000

[Aggregate metrics]:
rouge1     | fm: 89.400 | p: 88.833 | r: 90.106
rouge2     | fm: 47.609 | p: 47.267 | r: 48.002
rougeL     | fm: 75.392 | p: 74.993 | r: 75.962
rougeLsum  | fm: 75.722 | p: 75.288 | r: 76.251
r1fm+r2fm = 137.009

input #48 time: 0:01:40 | total time: 1:17:44


Running input #49 of 50.
reference: 
========================
We all thought him to be unhappy
========================
Debug: ids_shape = 9, pads = [9]
Debug: input ids = tensor([[  101,  2057,  2035,  2245,  2032,  2000,  2022, 12511,   102]],
       device='cuda:0')
Debug: ref = ['[CLS] we all thought him to be unhappy [SEP]']
[Init] best rec loss: 0.563106119632721 for ['[CLS] sober biochemistry 1656 postageivity crisptute [SEP]']
[Init] best rec loss: 0.5576198697090149 for ['[CLS]west minister nobel葉 wade galvestonnya [SEP]']
Nsteps: 500
[  50/ 500] tot_loss=1.982 (perp=9.119, rec=0.158), tot_loss_proj:2.165 [t=0.13s]
prediction: ["[CLS] they both unhappy his all you'[SEP]"]
Attempt swap
Moved sequence
[ 100/ 500] tot_loss=1.697 (perp=8.031, rec=0.091), tot_loss_proj:1.840 [t=0.14s]
prediction: ['[CLS] we thought him unhappy to all at [SEP]']
[ 150/ 500] tot_loss=1.518 (perp=7.226, rec=0.073), tot_loss_proj:1.646 [t=0.13s]
prediction: ['[CLS] we thought him unhappy to all be [SEP]']
Attempt swap
Moved sequence
[ 200/ 500] tot_loss=1.334 (perp=6.288, rec=0.077), tot_loss_proj:1.438 [t=0.12s]
prediction: ['[CLS] we all thought him unhappy to be [SEP]']
Attempt swap
Moved token
[ 250/ 500] tot_loss=1.165 (perp=5.513, rec=0.063), tot_loss_proj:1.260 [t=0.11s]
prediction: ['[CLS] we all thought him to be unhappy [SEP]']
[ 300/ 500] tot_loss=1.184 (perp=5.513, rec=0.081), tot_loss_proj:1.267 [t=0.11s]
prediction: ['[CLS] we all thought him to be unhappy [SEP]']
Attempt swap
[ 350/ 500] tot_loss=1.168 (perp=5.513, rec=0.065), tot_loss_proj:1.291 [t=0.11s]
prediction: ['[CLS] we all thought him to be unhappy [SEP]']
Attempt swap
[ 400/ 500] tot_loss=1.173 (perp=5.513, rec=0.070), tot_loss_proj:1.288 [t=0.11s]
prediction: ['[CLS] we all thought him to be unhappy [SEP]']
[ 450/ 500] tot_loss=1.167 (perp=5.513, rec=0.064), tot_loss_proj:1.291 [t=0.11s]
prediction: ['[CLS] we all thought him to be unhappy [SEP]']
Attempt swap
[ 500/ 500] tot_loss=1.164 (perp=5.513, rec=0.062), tot_loss_proj:1.287 [t=0.11s]
prediction: ['[CLS] we all thought him to be unhappy [SEP]']
Done with input #49 of 50.
reference: 
========================
[CLS] we all thought him to be unhappy [SEP]
========================
predicted: 
========================
[CLS] we all thought him to be unhappy [SEP]
========================
[Curr input metrics]:
rouge1     | fm: 100.000 | p: 100.000 | r: 100.000
rouge2     | fm: 100.000 | p: 100.000 | r: 100.000
rougeL     | fm: 100.000 | p: 100.000 | r: 100.000
rougeLsum  | fm: 100.000 | p: 100.000 | r: 100.000
r1fm+r2fm = 200.000

[Aggregate metrics]:
rouge1     | fm: 89.552 | p: 89.102 | r: 90.229
rouge2     | fm: 48.670 | p: 48.288 | r: 49.068
rougeL     | fm: 75.817 | p: 75.403 | r: 76.326
rougeLsum  | fm: 76.191 | p: 75.774 | r: 76.736
r1fm+r2fm = 138.222

input #49 time: 0:01:34 | total time: 1:19:18


Done with all.
